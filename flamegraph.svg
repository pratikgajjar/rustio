<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="2245"><g><title>__memcpy_ssse3 (10 samples, 0.45%)</title><rect x="0.6682%" y="501" width="0.4454%" height="15" fill="rgb(227,0,7)" fg:x="15" fg:w="10"/><text x="0.9182%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::conn::Builder::handshake&lt;tokio::net::tcp::stream::TcpStream,hyper::body::body::Body&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="1.1136%" y="501" width="0.0445%" height="15" fill="rgb(217,0,24)" fg:x="25" fg:w="1"/><text x="1.3636%" y="511.50"></text></g><g><title>&lt;hyper::client::client::PoolClient&lt;B&gt; as hyper::client::pool::Poolable&gt;::reserve (3 samples, 0.13%)</title><rect x="1.2472%" y="485" width="0.1336%" height="15" fill="rgb(221,193,54)" fg:x="28" fg:w="3"/><text x="1.4972%" y="495.50"></text></g><g><title>bytes::bytes::shared_clone (1 samples, 0.04%)</title><rect x="1.3808%" y="485" width="0.0445%" height="15" fill="rgb(248,212,6)" fg:x="31" fg:w="1"/><text x="1.6308%" y="495.50"></text></g><g><title>&lt;hyper::client::pool::Connecting&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="1.4254%" y="469" width="0.0445%" height="15" fill="rgb(208,68,35)" fg:x="32" fg:w="1"/><text x="1.6754%" y="479.50"></text></g><g><title>hyper::client::pool::Pool&lt;T&gt;::pooled (8 samples, 0.36%)</title><rect x="1.1581%" y="501" width="0.3563%" height="15" fill="rgb(232,128,0)" fg:x="26" fg:w="8"/><text x="1.4081%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Connecting&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="1.4254%" y="485" width="0.0891%" height="15" fill="rgb(207,160,47)" fg:x="32" fg:w="2"/><text x="1.6754%" y="495.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="1.4699%" y="469" width="0.0445%" height="15" fill="rgb(228,23,34)" fg:x="33" fg:w="1"/><text x="1.7199%" y="479.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="1.5145%" y="485" width="0.0891%" height="15" fill="rgb(218,30,26)" fg:x="34" fg:w="2"/><text x="1.7645%" y="495.50"></text></g><g><title>hyper::common::exec::Exec::execute (3 samples, 0.13%)</title><rect x="1.5145%" y="501" width="0.1336%" height="15" fill="rgb(220,122,19)" fg:x="34" fg:w="3"/><text x="1.7645%" y="511.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.04%)</title><rect x="1.6036%" y="485" width="0.0445%" height="15" fill="rgb(250,228,42)" fg:x="36" fg:w="1"/><text x="1.8536%" y="495.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::new (4 samples, 0.18%)</title><rect x="1.6481%" y="501" width="0.1782%" height="15" fill="rgb(240,193,28)" fg:x="37" fg:w="4"/><text x="1.8981%" y="511.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="1.7372%" y="485" width="0.0891%" height="15" fill="rgb(216,20,37)" fg:x="39" fg:w="2"/><text x="1.9872%" y="495.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::new (1 samples, 0.04%)</title><rect x="1.8263%" y="501" width="0.0445%" height="15" fill="rgb(206,188,39)" fg:x="41" fg:w="1"/><text x="2.0763%" y="511.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="1.8263%" y="485" width="0.0445%" height="15" fill="rgb(217,207,13)" fg:x="41" fg:w="1"/><text x="2.0763%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="1.8263%" y="469" width="0.0445%" height="15" fill="rgb(231,73,38)" fg:x="41" fg:w="1"/><text x="2.0763%" y="479.50"></text></g><g><title>&lt;tokio::sync::task::atomic_waker::AtomicWaker as core::default::Default&gt;::default (2 samples, 0.09%)</title><rect x="1.9154%" y="485" width="0.0891%" height="15" fill="rgb(225,20,46)" fg:x="43" fg:w="2"/><text x="2.1654%" y="495.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="2.0045%" y="485" width="0.0445%" height="15" fill="rgb(210,31,41)" fg:x="45" fg:w="1"/><text x="2.2545%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="2.0490%" y="485" width="0.0445%" height="15" fill="rgb(221,200,47)" fg:x="46" fg:w="1"/><text x="2.2990%" y="495.50"></text></g><g><title>malloc (8 samples, 0.36%)</title><rect x="2.0935%" y="485" width="0.3563%" height="15" fill="rgb(226,26,5)" fg:x="47" fg:w="8"/><text x="2.3435%" y="495.50"></text></g><g><title>_int_malloc (7 samples, 0.31%)</title><rect x="2.1381%" y="469" width="0.3118%" height="15" fill="rgb(249,33,26)" fg:x="48" fg:w="7"/><text x="2.3881%" y="479.50"></text></g><g><title>tokio::sync::mpsc::chan::channel (14 samples, 0.62%)</title><rect x="1.8708%" y="501" width="0.6236%" height="15" fill="rgb(235,183,28)" fg:x="42" fg:w="14"/><text x="2.1208%" y="511.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (1 samples, 0.04%)</title><rect x="2.4499%" y="485" width="0.0445%" height="15" fill="rgb(221,5,38)" fg:x="55" fg:w="1"/><text x="2.6999%" y="495.50"></text></g><g><title>want::Giver::poll_want (3 samples, 0.13%)</title><rect x="2.4944%" y="501" width="0.1336%" height="15" fill="rgb(247,18,42)" fg:x="56" fg:w="3"/><text x="2.7444%" y="511.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.04%)</title><rect x="2.5835%" y="485" width="0.0445%" height="15" fill="rgb(241,131,45)" fg:x="58" fg:w="1"/><text x="2.8335%" y="495.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (61 samples, 2.72%)</title><rect x="0.0000%" y="549" width="2.7171%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="61"/><text x="0.2500%" y="559.50">&lt;h..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (61 samples, 2.72%)</title><rect x="0.0000%" y="533" width="2.7171%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="61"/><text x="0.2500%" y="543.50">&lt;f..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connect_to::_{{closure}}::_{{closure}}::_{{closure}} (61 samples, 2.72%)</title><rect x="0.0000%" y="517" width="2.7171%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="61"/><text x="0.2500%" y="527.50">hy..</text></g><g><title>want::new (2 samples, 0.09%)</title><rect x="2.6281%" y="501" width="0.0891%" height="15" fill="rgb(214,148,48)" fg:x="59" fg:w="2"/><text x="2.8781%" y="511.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="2.6726%" y="485" width="0.0445%" height="15" fill="rgb(232,36,49)" fg:x="60" fg:w="1"/><text x="2.9226%" y="495.50"></text></g><g><title>&lt;&amp;mut S as tower_service::Service&lt;Request&gt;&gt;::poll_ready (2 samples, 0.09%)</title><rect x="2.9844%" y="293" width="0.0891%" height="15" fill="rgb(209,103,24)" fg:x="67" fg:w="2"/><text x="3.2344%" y="303.50"></text></g><g><title>&lt;hyper::client::connect::dns::GaiResolver as tower_service::Service&lt;hyper::client::connect::dns::Name&gt;&gt;::poll_ready (2 samples, 0.09%)</title><rect x="2.9844%" y="277" width="0.0891%" height="15" fill="rgb(229,88,8)" fg:x="67" fg:w="2"/><text x="3.2344%" y="287.50"></text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (3 samples, 0.13%)</title><rect x="3.0735%" y="293" width="0.1336%" height="15" fill="rgb(213,181,19)" fg:x="69" fg:w="3"/><text x="3.3235%" y="303.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="3.1626%" y="277" width="0.0445%" height="15" fill="rgb(254,191,54)" fg:x="71" fg:w="1"/><text x="3.4126%" y="287.50"></text></g><g><title>__memcpy_ssse3 (9 samples, 0.40%)</title><rect x="3.2071%" y="293" width="0.4009%" height="15" fill="rgb(241,83,37)" fg:x="72" fg:w="9"/><text x="3.4571%" y="303.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (24 samples, 1.07%)</title><rect x="2.7171%" y="341" width="1.0690%" height="15" fill="rgb(233,36,39)" fg:x="61" fg:w="24"/><text x="2.9671%" y="351.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (24 samples, 1.07%)</title><rect x="2.7171%" y="325" width="1.0690%" height="15" fill="rgb(226,3,54)" fg:x="61" fg:w="24"/><text x="2.9671%" y="335.50"></text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (24 samples, 1.07%)</title><rect x="2.7171%" y="309" width="1.0690%" height="15" fill="rgb(245,192,40)" fg:x="61" fg:w="24"/><text x="2.9671%" y="319.50"></text></g><g><title>malloc (4 samples, 0.18%)</title><rect x="3.6080%" y="293" width="0.1782%" height="15" fill="rgb(238,167,29)" fg:x="81" fg:w="4"/><text x="3.8580%" y="303.50"></text></g><g><title>_int_malloc (4 samples, 0.18%)</title><rect x="3.6080%" y="277" width="0.1782%" height="15" fill="rgb(232,182,51)" fg:x="81" fg:w="4"/><text x="3.8580%" y="287.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="549" width="1.1136%" height="15" fill="rgb(231,60,39)" fg:x="61" fg:w="25"/><text x="2.9671%" y="559.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (25 samples, 1.11%)</title><rect x="2.7171%" y="533" width="1.1136%" height="15" fill="rgb(208,69,12)" fg:x="61" fg:w="25"/><text x="2.9671%" y="543.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (25 samples, 1.11%)</title><rect x="2.7171%" y="517" width="1.1136%" height="15" fill="rgb(235,93,37)" fg:x="61" fg:w="25"/><text x="2.9671%" y="527.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="501" width="1.1136%" height="15" fill="rgb(213,116,39)" fg:x="61" fg:w="25"/><text x="2.9671%" y="511.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="485" width="1.1136%" height="15" fill="rgb(222,207,29)" fg:x="61" fg:w="25"/><text x="2.9671%" y="495.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="469" width="1.1136%" height="15" fill="rgb(206,96,30)" fg:x="61" fg:w="25"/><text x="2.9671%" y="479.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="453" width="1.1136%" height="15" fill="rgb(218,138,4)" fg:x="61" fg:w="25"/><text x="2.9671%" y="463.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call::_{{closure}} (25 samples, 1.11%)</title><rect x="2.7171%" y="437" width="1.1136%" height="15" fill="rgb(250,191,14)" fg:x="61" fg:w="25"/><text x="2.9671%" y="447.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="421" width="1.1136%" height="15" fill="rgb(239,60,40)" fg:x="61" fg:w="25"/><text x="2.9671%" y="431.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (25 samples, 1.11%)</title><rect x="2.7171%" y="405" width="1.1136%" height="15" fill="rgb(206,27,48)" fg:x="61" fg:w="25"/><text x="2.9671%" y="415.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="389" width="1.1136%" height="15" fill="rgb(225,35,8)" fg:x="61" fg:w="25"/><text x="2.9671%" y="399.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="373" width="1.1136%" height="15" fill="rgb(250,213,24)" fg:x="61" fg:w="25"/><text x="2.9671%" y="383.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (25 samples, 1.11%)</title><rect x="2.7171%" y="357" width="1.1136%" height="15" fill="rgb(247,123,22)" fg:x="61" fg:w="25"/><text x="2.9671%" y="367.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connect_to::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="3.7862%" y="341" width="0.0445%" height="15" fill="rgb(231,138,38)" fg:x="85" fg:w="1"/><text x="4.0362%" y="351.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="3.7862%" y="325" width="0.0445%" height="15" fill="rgb(231,145,46)" fg:x="85" fg:w="1"/><text x="4.0362%" y="335.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="549" width="0.1336%" height="15" fill="rgb(251,118,11)" fg:x="86" fg:w="3"/><text x="4.0807%" y="559.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="533" width="0.1336%" height="15" fill="rgb(217,147,25)" fg:x="86" fg:w="3"/><text x="4.0807%" y="543.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="517" width="0.1336%" height="15" fill="rgb(247,81,37)" fg:x="86" fg:w="3"/><text x="4.0807%" y="527.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="501" width="0.1336%" height="15" fill="rgb(209,12,38)" fg:x="86" fg:w="3"/><text x="4.0807%" y="511.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call::_{{closure}} (3 samples, 0.13%)</title><rect x="3.8307%" y="485" width="0.1336%" height="15" fill="rgb(227,1,9)" fg:x="86" fg:w="3"/><text x="4.0807%" y="495.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="469" width="0.1336%" height="15" fill="rgb(248,47,43)" fg:x="86" fg:w="3"/><text x="4.0807%" y="479.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (3 samples, 0.13%)</title><rect x="3.8307%" y="453" width="0.1336%" height="15" fill="rgb(221,10,30)" fg:x="86" fg:w="3"/><text x="4.0807%" y="463.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="437" width="0.1336%" height="15" fill="rgb(210,229,1)" fg:x="86" fg:w="3"/><text x="4.0807%" y="447.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="421" width="0.1336%" height="15" fill="rgb(222,148,37)" fg:x="86" fg:w="3"/><text x="4.0807%" y="431.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="405" width="0.1336%" height="15" fill="rgb(234,67,33)" fg:x="86" fg:w="3"/><text x="4.0807%" y="415.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="389" width="0.1336%" height="15" fill="rgb(247,98,35)" fg:x="86" fg:w="3"/><text x="4.0807%" y="399.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="373" width="0.1336%" height="15" fill="rgb(247,138,52)" fg:x="86" fg:w="3"/><text x="4.0807%" y="383.50"></text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="3.8307%" y="357" width="0.1336%" height="15" fill="rgb(213,79,30)" fg:x="86" fg:w="3"/><text x="4.0807%" y="367.50"></text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (3 samples, 0.13%)</title><rect x="3.8307%" y="341" width="0.1336%" height="15" fill="rgb(246,177,23)" fg:x="86" fg:w="3"/><text x="4.0807%" y="351.50"></text></g><g><title>__rust_probestack (3 samples, 0.13%)</title><rect x="3.8307%" y="325" width="0.1336%" height="15" fill="rgb(230,62,27)" fg:x="86" fg:w="3"/><text x="4.0807%" y="335.50"></text></g><g><title>tokio::runtime::context::with_defer (1 samples, 0.04%)</title><rect x="4.4098%" y="341" width="0.0445%" height="15" fill="rgb(216,154,8)" fg:x="99" fg:w="1"/><text x="4.6598%" y="351.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (1 samples, 0.04%)</title><rect x="4.4543%" y="341" width="0.0445%" height="15" fill="rgb(244,35,45)" fg:x="100" fg:w="1"/><text x="4.7043%" y="351.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="4.4989%" y="309" width="0.0445%" height="15" fill="rgb(251,115,12)" fg:x="101" fg:w="1"/><text x="4.7489%" y="319.50"></text></g><g><title>mio::event::event::Event::is_writable (1 samples, 0.04%)</title><rect x="4.6771%" y="293" width="0.0445%" height="15" fill="rgb(240,54,50)" fg:x="105" fg:w="1"/><text x="4.9271%" y="303.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (1 samples, 0.04%)</title><rect x="4.7216%" y="277" width="0.0445%" height="15" fill="rgb(233,84,52)" fg:x="106" fg:w="1"/><text x="4.9716%" y="287.50"></text></g><g><title>mio::poll::Poll::poll (2 samples, 0.09%)</title><rect x="4.7216%" y="293" width="0.0891%" height="15" fill="rgb(207,117,47)" fg:x="106" fg:w="2"/><text x="4.9716%" y="303.50"></text></g><g><title>epoll_wait (1 samples, 0.04%)</title><rect x="4.7661%" y="277" width="0.0445%" height="15" fill="rgb(249,43,39)" fg:x="107" fg:w="1"/><text x="5.0161%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.04%)</title><rect x="4.8552%" y="261" width="0.0445%" height="15" fill="rgb(209,38,44)" fg:x="109" fg:w="1"/><text x="5.1052%" y="271.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="4.8552%" y="245" width="0.0445%" height="15" fill="rgb(236,212,23)" fg:x="109" fg:w="1"/><text x="5.1052%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.04%)</title><rect x="4.8552%" y="229" width="0.0445%" height="15" fill="rgb(242,79,21)" fg:x="109" fg:w="1"/><text x="5.1052%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.04%)</title><rect x="4.8552%" y="213" width="0.0445%" height="15" fill="rgb(211,96,35)" fg:x="109" fg:w="1"/><text x="5.1052%" y="223.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (10 samples, 0.45%)</title><rect x="4.4989%" y="341" width="0.4454%" height="15" fill="rgb(253,215,40)" fg:x="101" fg:w="10"/><text x="4.7489%" y="351.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (10 samples, 0.45%)</title><rect x="4.4989%" y="325" width="0.4454%" height="15" fill="rgb(211,81,21)" fg:x="101" fg:w="10"/><text x="4.7489%" y="335.50"></text></g><g><title>tokio::runtime::io::Driver::turn (9 samples, 0.40%)</title><rect x="4.5434%" y="309" width="0.4009%" height="15" fill="rgb(208,190,38)" fg:x="102" fg:w="9"/><text x="4.7934%" y="319.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (3 samples, 0.13%)</title><rect x="4.8107%" y="293" width="0.1336%" height="15" fill="rgb(235,213,38)" fg:x="108" fg:w="3"/><text x="5.0607%" y="303.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.13%)</title><rect x="4.8107%" y="277" width="0.1336%" height="15" fill="rgb(237,122,38)" fg:x="108" fg:w="3"/><text x="5.0607%" y="287.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.04%)</title><rect x="4.8998%" y="261" width="0.0445%" height="15" fill="rgb(244,218,35)" fg:x="110" fg:w="1"/><text x="5.1498%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.04%)</title><rect x="4.9443%" y="341" width="0.0445%" height="15" fill="rgb(240,68,47)" fg:x="111" fg:w="1"/><text x="5.1943%" y="351.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.04%)</title><rect x="4.9889%" y="325" width="0.0445%" height="15" fill="rgb(210,16,53)" fg:x="112" fg:w="1"/><text x="5.2389%" y="335.50"></text></g><g><title>mio::event::event::Event::is_writable (1 samples, 0.04%)</title><rect x="5.1225%" y="309" width="0.0445%" height="15" fill="rgb(235,124,12)" fg:x="115" fg:w="1"/><text x="5.3725%" y="319.50"></text></g><g><title>mio::event::event::Event::token (1 samples, 0.04%)</title><rect x="5.1670%" y="309" width="0.0445%" height="15" fill="rgb(224,169,11)" fg:x="116" fg:w="1"/><text x="5.4170%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.09%)</title><rect x="5.3007%" y="277" width="0.0891%" height="15" fill="rgb(250,166,2)" fg:x="119" fg:w="2"/><text x="5.5507%" y="287.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="5.3007%" y="261" width="0.0891%" height="15" fill="rgb(242,216,29)" fg:x="119" fg:w="2"/><text x="5.5507%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.04%)</title><rect x="5.3452%" y="245" width="0.0445%" height="15" fill="rgb(230,116,27)" fg:x="120" fg:w="1"/><text x="5.5952%" y="255.50"></text></g><g><title>tokio::runtime::io::Driver::turn (15 samples, 0.67%)</title><rect x="5.0334%" y="325" width="0.6682%" height="15" fill="rgb(228,99,48)" fg:x="113" fg:w="15"/><text x="5.2834%" y="335.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (11 samples, 0.49%)</title><rect x="5.2116%" y="309" width="0.4900%" height="15" fill="rgb(253,11,6)" fg:x="117" fg:w="11"/><text x="5.4616%" y="319.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (10 samples, 0.45%)</title><rect x="5.2561%" y="293" width="0.4454%" height="15" fill="rgb(247,143,39)" fg:x="118" fg:w="10"/><text x="5.5061%" y="303.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (7 samples, 0.31%)</title><rect x="5.3898%" y="277" width="0.3118%" height="15" fill="rgb(236,97,10)" fg:x="121" fg:w="7"/><text x="5.6398%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (33 samples, 1.47%)</title><rect x="4.2762%" y="357" width="1.4699%" height="15" fill="rgb(233,208,19)" fg:x="96" fg:w="33"/><text x="4.5262%" y="367.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (17 samples, 0.76%)</title><rect x="4.9889%" y="341" width="0.7572%" height="15" fill="rgb(216,164,2)" fg:x="112" fg:w="17"/><text x="5.2389%" y="351.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.04%)</title><rect x="5.7016%" y="325" width="0.0445%" height="15" fill="rgb(220,129,5)" fg:x="128" fg:w="1"/><text x="5.9516%" y="335.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.04%)</title><rect x="5.7016%" y="309" width="0.0445%" height="15" fill="rgb(242,17,10)" fg:x="128" fg:w="1"/><text x="5.9516%" y="319.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.04%)</title><rect x="5.7016%" y="293" width="0.0445%" height="15" fill="rgb(242,107,0)" fg:x="128" fg:w="1"/><text x="5.9516%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.04%)</title><rect x="6.6370%" y="341" width="0.0445%" height="15" fill="rgb(251,28,31)" fg:x="149" fg:w="1"/><text x="6.8870%" y="351.50"></text></g><g><title>&lt;futures_util::fns::MapErrFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="8.8196%" y="277" width="0.0445%" height="15" fill="rgb(233,223,10)" fg:x="198" fg:w="1"/><text x="9.0696%" y="287.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::shutdown (1 samples, 0.04%)</title><rect x="9.5768%" y="213" width="0.0445%" height="15" fill="rgb(215,21,27)" fg:x="215" fg:w="1"/><text x="9.8268%" y="223.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_shutdown (13 samples, 0.58%)</title><rect x="9.1759%" y="245" width="0.5791%" height="15" fill="rgb(232,23,21)" fg:x="206" fg:w="13"/><text x="9.4259%" y="255.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (4 samples, 0.18%)</title><rect x="9.5768%" y="229" width="0.1782%" height="15" fill="rgb(244,5,23)" fg:x="215" fg:w="4"/><text x="9.8268%" y="239.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::shutdown (3 samples, 0.13%)</title><rect x="9.6214%" y="213" width="0.1336%" height="15" fill="rgb(226,81,46)" fg:x="216" fg:w="3"/><text x="9.8714%" y="223.50"></text></g><g><title>__GI___shutdown (1 samples, 0.04%)</title><rect x="9.7105%" y="197" width="0.0445%" height="15" fill="rgb(247,70,30)" fg:x="218" fg:w="1"/><text x="9.9605%" y="207.50"></text></g><g><title>hyper::proto::h1::conn::State::is_read_closed (2 samples, 0.09%)</title><rect x="9.7550%" y="245" width="0.0891%" height="15" fill="rgb(212,68,19)" fg:x="219" fg:w="2"/><text x="10.0050%" y="255.50"></text></g><g><title>hyper::proto::h1::conn::State::is_write_closed (1 samples, 0.04%)</title><rect x="9.8441%" y="245" width="0.0445%" height="15" fill="rgb(240,187,13)" fg:x="221" fg:w="1"/><text x="10.0941%" y="255.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.18%)</title><rect x="11.2249%" y="229" width="0.1782%" height="15" fill="rgb(223,113,26)" fg:x="252" fg:w="4"/><text x="11.4749%" y="239.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::is_end_stream (4 samples, 0.18%)</title><rect x="11.4031%" y="229" width="0.1782%" height="15" fill="rgb(206,192,2)" fg:x="256" fg:w="4"/><text x="11.6531%" y="239.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="11.7595%" y="213" width="0.0445%" height="15" fill="rgb(241,108,4)" fg:x="264" fg:w="1"/><text x="12.0095%" y="223.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="12.2494%" y="165" width="0.0445%" height="15" fill="rgb(247,173,49)" fg:x="275" fg:w="1"/><text x="12.4994%" y="175.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.13%)</title><rect x="12.2940%" y="165" width="0.1336%" height="15" fill="rgb(224,114,35)" fg:x="276" fg:w="3"/><text x="12.5440%" y="175.50"></text></g><g><title>hyper::error::Error::new_user_dispatch_gone (2 samples, 0.09%)</title><rect x="12.4276%" y="165" width="0.0891%" height="15" fill="rgb(245,159,27)" fg:x="279" fg:w="2"/><text x="12.6776%" y="175.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="12.4276%" y="149" width="0.0891%" height="15" fill="rgb(245,172,44)" fg:x="279" fg:w="2"/><text x="12.6776%" y="159.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="12.5167%" y="133" width="0.0445%" height="15" fill="rgb(236,23,11)" fg:x="281" fg:w="1"/><text x="12.7667%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (18 samples, 0.80%)</title><rect x="11.8931%" y="197" width="0.8018%" height="15" fill="rgb(205,117,38)" fg:x="267" fg:w="18"/><text x="12.1431%" y="207.50"></text></g><g><title>&lt;hyper::client::dispatch::Callback&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.62%)</title><rect x="12.0713%" y="181" width="0.6236%" height="15" fill="rgb(237,72,25)" fg:x="271" fg:w="14"/><text x="12.3213%" y="191.50"></text></g><g><title>hyper::error::Error::with (4 samples, 0.18%)</title><rect x="12.5167%" y="165" width="0.1782%" height="15" fill="rgb(244,70,9)" fg:x="281" fg:w="4"/><text x="12.7667%" y="175.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.18%)</title><rect x="12.5167%" y="149" width="0.1782%" height="15" fill="rgb(217,125,39)" fg:x="281" fg:w="4"/><text x="12.7667%" y="159.50"></text></g><g><title>malloc (3 samples, 0.13%)</title><rect x="12.5612%" y="133" width="0.1336%" height="15" fill="rgb(235,36,10)" fg:x="282" fg:w="3"/><text x="12.8112%" y="143.50"></text></g><g><title>__memcpy_ssse3 (3 samples, 0.13%)</title><rect x="12.8285%" y="181" width="0.1336%" height="15" fill="rgb(251,123,47)" fg:x="288" fg:w="3"/><text x="13.0785%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Sender&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;hyper::body::body::Body&gt;&gt;)&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="12.9621%" y="181" width="0.0891%" height="15" fill="rgb(221,13,13)" fg:x="291" fg:w="2"/><text x="13.2121%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::CURRENT::FOO::__getit (3 samples, 0.13%)</title><rect x="13.0958%" y="149" width="0.1336%" height="15" fill="rgb(238,131,9)" fg:x="294" fg:w="3"/><text x="13.3458%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6 samples, 0.27%)</title><rect x="13.0512%" y="181" width="0.2673%" height="15" fill="rgb(211,50,8)" fg:x="293" fg:w="6"/><text x="13.3012%" y="191.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.22%)</title><rect x="13.0958%" y="165" width="0.2227%" height="15" fill="rgb(245,182,24)" fg:x="294" fg:w="5"/><text x="13.3458%" y="175.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.09%)</title><rect x="13.2294%" y="149" width="0.0891%" height="15" fill="rgb(242,14,37)" fg:x="297" fg:w="2"/><text x="13.4794%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.09%)</title><rect x="13.2294%" y="133" width="0.0891%" height="15" fill="rgb(246,228,12)" fg:x="297" fg:w="2"/><text x="13.4794%" y="143.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.04%)</title><rect x="13.3185%" y="181" width="0.0445%" height="15" fill="rgb(213,55,15)" fg:x="299" fg:w="1"/><text x="13.5685%" y="191.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (7 samples, 0.31%)</title><rect x="13.3630%" y="181" width="0.3118%" height="15" fill="rgb(209,9,3)" fg:x="300" fg:w="7"/><text x="13.6130%" y="191.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (43 samples, 1.92%)</title><rect x="11.8040%" y="213" width="1.9154%" height="15" fill="rgb(230,59,30)" fg:x="265" fg:w="43"/><text x="12.0540%" y="223.50">h..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (23 samples, 1.02%)</title><rect x="12.6949%" y="197" width="1.0245%" height="15" fill="rgb(209,121,21)" fg:x="285" fg:w="23"/><text x="12.9449%" y="207.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (1 samples, 0.04%)</title><rect x="13.6748%" y="181" width="0.0445%" height="15" fill="rgb(220,109,13)" fg:x="307" fg:w="1"/><text x="13.9248%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.04%)</title><rect x="13.7639%" y="197" width="0.0445%" height="15" fill="rgb(232,18,1)" fg:x="309" fg:w="1"/><text x="14.0139%" y="207.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (51 samples, 2.27%)</title><rect x="11.5813%" y="229" width="2.2717%" height="15" fill="rgb(215,41,42)" fg:x="260" fg:w="51"/><text x="11.8313%" y="239.50">&lt;..</text></g><g><title>hyper::proto::MessageHead&lt;http::status::StatusCode&gt;::into_response (3 samples, 0.13%)</title><rect x="13.7194%" y="213" width="0.1336%" height="15" fill="rgb(224,123,36)" fg:x="308" fg:w="3"/><text x="13.9694%" y="223.50"></text></g><g><title>http::response::Parts::new (1 samples, 0.04%)</title><rect x="13.8085%" y="197" width="0.0445%" height="15" fill="rgb(240,125,3)" fg:x="310" fg:w="1"/><text x="14.0585%" y="207.50"></text></g><g><title>__memcpy_ssse3 (6 samples, 0.27%)</title><rect x="13.8530%" y="229" width="0.2673%" height="15" fill="rgb(205,98,50)" fg:x="311" fg:w="6"/><text x="14.1030%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Sender&gt; (5 samples, 0.22%)</title><rect x="14.1203%" y="229" width="0.2227%" height="15" fill="rgb(205,185,37)" fg:x="317" fg:w="5"/><text x="14.3703%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; (3 samples, 0.13%)</title><rect x="14.2094%" y="213" width="0.1336%" height="15" fill="rgb(238,207,15)" fg:x="319" fg:w="3"/><text x="14.4594%" y="223.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.04%)</title><rect x="14.2984%" y="197" width="0.0445%" height="15" fill="rgb(213,199,42)" fg:x="321" fg:w="1"/><text x="14.5484%" y="207.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (1 samples, 0.04%)</title><rect x="14.3430%" y="229" width="0.0445%" height="15" fill="rgb(235,201,11)" fg:x="322" fg:w="1"/><text x="14.5930%" y="239.50"></text></g><g><title>futures_channel::mpsc::channel (6 samples, 0.27%)</title><rect x="14.4321%" y="213" width="0.2673%" height="15" fill="rgb(207,46,11)" fg:x="324" fg:w="6"/><text x="14.6821%" y="223.50"></text></g><g><title>malloc (3 samples, 0.13%)</title><rect x="14.5657%" y="197" width="0.1336%" height="15" fill="rgb(241,35,35)" fg:x="327" fg:w="3"/><text x="14.8157%" y="207.50"></text></g><g><title>hyper::common::watch::channel (1 samples, 0.04%)</title><rect x="14.6993%" y="213" width="0.0445%" height="15" fill="rgb(243,32,47)" fg:x="330" fg:w="1"/><text x="14.9493%" y="223.50"></text></g><g><title>hyper::body::body::Body::new_channel (9 samples, 0.40%)</title><rect x="14.3875%" y="229" width="0.4009%" height="15" fill="rgb(247,202,23)" fg:x="323" fg:w="9"/><text x="14.6375%" y="239.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="14.7439%" y="213" width="0.0445%" height="15" fill="rgb(219,102,11)" fg:x="331" fg:w="1"/><text x="14.9939%" y="223.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (1 samples, 0.04%)</title><rect x="14.8775%" y="213" width="0.0445%" height="15" fill="rgb(243,110,44)" fg:x="334" fg:w="1"/><text x="15.1275%" y="223.50"></text></g><g><title>hyper::body::body::Sender::poll_ready (4 samples, 0.18%)</title><rect x="14.7884%" y="229" width="0.1782%" height="15" fill="rgb(222,74,54)" fg:x="332" fg:w="4"/><text x="15.0384%" y="239.50"></text></g><g><title>futures_channel::mpsc::decode_state (1 samples, 0.04%)</title><rect x="14.9220%" y="213" width="0.0445%" height="15" fill="rgb(216,99,12)" fg:x="335" fg:w="1"/><text x="15.1720%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="15.0557%" y="197" width="0.0445%" height="15" fill="rgb(226,22,26)" fg:x="338" fg:w="1"/><text x="15.3057%" y="207.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.04%)</title><rect x="15.1002%" y="197" width="0.0445%" height="15" fill="rgb(217,163,10)" fg:x="339" fg:w="1"/><text x="15.3502%" y="207.50"></text></g><g><title>hyper::body::body::Sender::try_send_data (5 samples, 0.22%)</title><rect x="14.9666%" y="229" width="0.2227%" height="15" fill="rgb(213,25,53)" fg:x="336" fg:w="5"/><text x="15.2166%" y="239.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (5 samples, 0.22%)</title><rect x="14.9666%" y="213" width="0.2227%" height="15" fill="rgb(252,105,26)" fg:x="336" fg:w="5"/><text x="15.2166%" y="223.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="15.1448%" y="197" width="0.0445%" height="15" fill="rgb(220,39,43)" fg:x="340" fg:w="1"/><text x="15.3948%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="15.1448%" y="181" width="0.0445%" height="15" fill="rgb(229,68,48)" fg:x="340" fg:w="1"/><text x="15.3948%" y="191.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="15.4120%" y="213" width="0.0445%" height="15" fill="rgb(252,8,32)" fg:x="346" fg:w="1"/><text x="15.6620%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Envelope&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="15.4566%" y="213" width="0.0891%" height="15" fill="rgb(223,20,43)" fg:x="347" fg:w="2"/><text x="15.7066%" y="223.50"></text></g><g><title>&lt;hyper::client::dispatch::Envelope&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.5011%" y="197" width="0.0445%" height="15" fill="rgb(229,81,49)" fg:x="348" fg:w="1"/><text x="15.7511%" y="207.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.04%)</title><rect x="15.5457%" y="197" width="0.0445%" height="15" fill="rgb(236,28,36)" fg:x="349" fg:w="1"/><text x="15.7957%" y="207.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="15.5457%" y="181" width="0.0445%" height="15" fill="rgb(249,185,26)" fg:x="349" fg:w="1"/><text x="15.7957%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.04%)</title><rect x="15.5457%" y="165" width="0.0445%" height="15" fill="rgb(249,174,33)" fg:x="349" fg:w="1"/><text x="15.7957%" y="175.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.04%)</title><rect x="15.5457%" y="149" width="0.0445%" height="15" fill="rgb(233,201,37)" fg:x="349" fg:w="1"/><text x="15.7957%" y="159.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.09%)</title><rect x="15.5457%" y="213" width="0.0891%" height="15" fill="rgb(221,78,26)" fg:x="349" fg:w="2"/><text x="15.7957%" y="223.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.04%)</title><rect x="15.5902%" y="197" width="0.0445%" height="15" fill="rgb(250,127,30)" fg:x="350" fg:w="1"/><text x="15.8402%" y="207.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="15.9465%" y="197" width="0.1336%" height="15" fill="rgb(230,49,44)" fg:x="358" fg:w="3"/><text x="16.1965%" y="207.50"></text></g><g><title>&lt;tokio::sync::mpsc::unbounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::is_idle (2 samples, 0.09%)</title><rect x="16.3029%" y="181" width="0.0891%" height="15" fill="rgb(229,67,23)" fg:x="366" fg:w="2"/><text x="16.5529%" y="191.50"></text></g><g><title>__memcpy_ssse3 (4 samples, 0.18%)</title><rect x="16.3920%" y="181" width="0.1782%" height="15" fill="rgb(249,83,47)" fg:x="368" fg:w="4"/><text x="16.6420%" y="191.50"></text></g><g><title>__memcpy_ssse3 (6 samples, 0.27%)</title><rect x="16.9710%" y="165" width="0.2673%" height="15" fill="rgb(215,43,3)" fg:x="381" fg:w="6"/><text x="17.2210%" y="175.50"></text></g><g><title>tokio::sync::mpsc::block::is_ready (4 samples, 0.18%)</title><rect x="17.2383%" y="165" width="0.1782%" height="15" fill="rgb(238,154,13)" fg:x="387" fg:w="4"/><text x="17.4883%" y="175.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (22 samples, 0.98%)</title><rect x="16.5702%" y="181" width="0.9800%" height="15" fill="rgb(219,56,2)" fg:x="372" fg:w="22"/><text x="16.8202%" y="191.50"></text></g><g><title>tokio::sync::mpsc::block::is_tx_closed (3 samples, 0.13%)</title><rect x="17.4165%" y="165" width="0.1336%" height="15" fill="rgb(233,0,4)" fg:x="391" fg:w="3"/><text x="17.6665%" y="175.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (38 samples, 1.69%)</title><rect x="16.0802%" y="197" width="1.6927%" height="15" fill="rgb(235,30,7)" fg:x="361" fg:w="38"/><text x="16.3302%" y="207.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (5 samples, 0.22%)</title><rect x="17.5501%" y="181" width="0.2227%" height="15" fill="rgb(250,79,13)" fg:x="394" fg:w="5"/><text x="17.8001%" y="191.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (3 samples, 0.13%)</title><rect x="17.7728%" y="197" width="0.1336%" height="15" fill="rgb(211,146,34)" fg:x="399" fg:w="3"/><text x="18.0228%" y="207.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (63 samples, 2.81%)</title><rect x="15.1893%" y="229" width="2.8062%" height="15" fill="rgb(228,22,38)" fg:x="341" fg:w="63"/><text x="15.4393%" y="239.50">hy..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (53 samples, 2.36%)</title><rect x="15.6347%" y="213" width="2.3608%" height="15" fill="rgb(235,168,5)" fg:x="351" fg:w="53"/><text x="15.8847%" y="223.50">to..</text></g><g><title>tokio::runtime::coop::Budget::unconstrained (2 samples, 0.09%)</title><rect x="17.9065%" y="197" width="0.0891%" height="15" fill="rgb(221,155,16)" fg:x="402" fg:w="2"/><text x="18.1565%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (2 samples, 0.09%)</title><rect x="18.0846%" y="213" width="0.0891%" height="15" fill="rgb(215,215,53)" fg:x="406" fg:w="2"/><text x="18.3346%" y="223.50"></text></g><g><title>hyper::proto::h1::conn::State::busy (2 samples, 0.09%)</title><rect x="18.1737%" y="213" width="0.0891%" height="15" fill="rgb(223,4,10)" fg:x="408" fg:w="2"/><text x="18.4237%" y="223.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="18.7528%" y="181" width="0.0891%" height="15" fill="rgb(234,103,6)" fg:x="421" fg:w="2"/><text x="19.0028%" y="191.50"></text></g><g><title>&lt;hyper::proto::h1::role::FastWrite as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="19.2428%" y="117" width="0.0445%" height="15" fill="rgb(227,97,0)" fg:x="432" fg:w="1"/><text x="19.4928%" y="127.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.09%)</title><rect x="19.2873%" y="117" width="0.0891%" height="15" fill="rgb(234,150,53)" fg:x="433" fg:w="2"/><text x="19.5373%" y="127.50"></text></g><g><title>&lt;http::uri::Uri as core::fmt::Display&gt;::fmt (11 samples, 0.49%)</title><rect x="18.9310%" y="165" width="0.4900%" height="15" fill="rgb(228,201,54)" fg:x="425" fg:w="11"/><text x="19.1810%" y="175.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (9 samples, 0.40%)</title><rect x="19.0200%" y="149" width="0.4009%" height="15" fill="rgb(222,22,37)" fg:x="427" fg:w="9"/><text x="19.2700%" y="159.50"></text></g><g><title>core::fmt::write (5 samples, 0.22%)</title><rect x="19.1982%" y="133" width="0.2227%" height="15" fill="rgb(237,53,32)" fg:x="431" fg:w="5"/><text x="19.4482%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="19.3764%" y="117" width="0.0445%" height="15" fill="rgb(233,25,53)" fg:x="435" fg:w="1"/><text x="19.6264%" y="127.50"></text></g><g><title>core::fmt::write (15 samples, 0.67%)</title><rect x="18.8419%" y="181" width="0.6682%" height="15" fill="rgb(210,40,34)" fg:x="423" fg:w="15"/><text x="19.0919%" y="191.50"></text></g><g><title>&lt;hyper::proto::h1::role::FastWrite as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="19.4209%" y="165" width="0.0891%" height="15" fill="rgb(241,220,44)" fg:x="436" fg:w="2"/><text x="19.6709%" y="175.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="19.4209%" y="149" width="0.0891%" height="15" fill="rgb(235,28,35)" fg:x="436" fg:w="2"/><text x="19.6709%" y="159.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::clear (5 samples, 0.22%)</title><rect x="19.5100%" y="181" width="0.2227%" height="15" fill="rgb(210,56,17)" fg:x="438" fg:w="5"/><text x="19.7600%" y="191.50"></text></g><g><title>bytes::bytes::promotable_even_drop (1 samples, 0.04%)</title><rect x="19.6882%" y="165" width="0.0445%" height="15" fill="rgb(224,130,29)" fg:x="442" fg:w="1"/><text x="19.9382%" y="175.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="19.6882%" y="149" width="0.0445%" height="15" fill="rgb(235,212,8)" fg:x="442" fg:w="1"/><text x="19.9382%" y="159.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::remove (1 samples, 0.04%)</title><rect x="19.7327%" y="181" width="0.0445%" height="15" fill="rgb(223,33,50)" fg:x="443" fg:w="1"/><text x="19.9827%" y="191.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (33 samples, 1.47%)</title><rect x="18.3964%" y="197" width="1.4699%" height="15" fill="rgb(219,149,13)" fg:x="413" fg:w="33"/><text x="18.6464%" y="207.50"></text></g><g><title>http::header::name::HeaderName::as_str (2 samples, 0.09%)</title><rect x="19.7773%" y="181" width="0.0891%" height="15" fill="rgb(250,156,29)" fg:x="444" fg:w="2"/><text x="20.0273%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.04%)</title><rect x="19.8664%" y="197" width="0.0445%" height="15" fill="rgb(216,193,19)" fg:x="446" fg:w="1"/><text x="20.1164%" y="207.50"></text></g><g><title>tracing::span::Span::log (1 samples, 0.04%)</title><rect x="19.8664%" y="181" width="0.0445%" height="15" fill="rgb(216,135,14)" fg:x="446" fg:w="1"/><text x="20.1164%" y="191.50"></text></g><g><title>tracing::span::Span::log (2 samples, 0.09%)</title><rect x="19.9109%" y="197" width="0.0891%" height="15" fill="rgb(241,47,5)" fg:x="447" fg:w="2"/><text x="20.1609%" y="207.50"></text></g><g><title>tracing_core::metadata::Metadata::level (1 samples, 0.04%)</title><rect x="19.9555%" y="181" width="0.0445%" height="15" fill="rgb(233,42,35)" fg:x="448" fg:w="1"/><text x="20.2055%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (47 samples, 2.09%)</title><rect x="17.9955%" y="229" width="2.0935%" height="15" fill="rgb(231,13,6)" fg:x="404" fg:w="47"/><text x="18.2455%" y="239.50">h..</text></g><g><title>hyper::proto::h1::role::encode_headers (41 samples, 1.83%)</title><rect x="18.2628%" y="213" width="1.8263%" height="15" fill="rgb(207,181,40)" fg:x="410" fg:w="41"/><text x="18.5128%" y="223.50">h..</text></g><g><title>tracing::span::Span::record_all (2 samples, 0.09%)</title><rect x="20.0000%" y="197" width="0.0891%" height="15" fill="rgb(254,173,49)" fg:x="449" fg:w="2"/><text x="20.2500%" y="207.50"></text></g><g><title>tracing::span::Span::log (1 samples, 0.04%)</title><rect x="20.0445%" y="181" width="0.0445%" height="15" fill="rgb(221,1,38)" fg:x="450" fg:w="1"/><text x="20.2945%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (7 samples, 0.31%)</title><rect x="20.1336%" y="213" width="0.3118%" height="15" fill="rgb(206,124,46)" fg:x="452" fg:w="7"/><text x="20.3836%" y="223.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="20.9800%" y="197" width="0.0891%" height="15" fill="rgb(249,21,11)" fg:x="471" fg:w="2"/><text x="21.2300%" y="207.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (1 samples, 0.04%)</title><rect x="21.0690%" y="197" width="0.0445%" height="15" fill="rgb(222,201,40)" fg:x="473" fg:w="1"/><text x="21.3190%" y="207.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (5 samples, 0.22%)</title><rect x="21.2472%" y="165" width="0.2227%" height="15" fill="rgb(235,61,29)" fg:x="477" fg:w="5"/><text x="21.4972%" y="175.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (4 samples, 0.18%)</title><rect x="21.2918%" y="149" width="0.1782%" height="15" fill="rgb(219,207,3)" fg:x="478" fg:w="4"/><text x="21.5418%" y="159.50"></text></g><g><title>__writev (4 samples, 0.18%)</title><rect x="21.2918%" y="133" width="0.1782%" height="15" fill="rgb(222,56,46)" fg:x="478" fg:w="4"/><text x="21.5418%" y="143.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="21.4254%" y="117" width="0.0445%" height="15" fill="rgb(239,76,54)" fg:x="481" fg:w="1"/><text x="21.6754%" y="127.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (33 samples, 1.47%)</title><rect x="20.0891%" y="229" width="1.4699%" height="15" fill="rgb(231,124,27)" fg:x="451" fg:w="33"/><text x="20.3391%" y="239.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (25 samples, 1.11%)</title><rect x="20.4454%" y="213" width="1.1136%" height="15" fill="rgb(249,195,6)" fg:x="459" fg:w="25"/><text x="20.6954%" y="223.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (10 samples, 0.45%)</title><rect x="21.1136%" y="197" width="0.4454%" height="15" fill="rgb(237,174,47)" fg:x="474" fg:w="10"/><text x="21.3636%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (8 samples, 0.36%)</title><rect x="21.2027%" y="181" width="0.3563%" height="15" fill="rgb(206,201,31)" fg:x="476" fg:w="8"/><text x="21.4527%" y="191.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.09%)</title><rect x="21.4699%" y="165" width="0.0891%" height="15" fill="rgb(231,57,52)" fg:x="482" fg:w="2"/><text x="21.7199%" y="175.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.04%)</title><rect x="21.5145%" y="149" width="0.0445%" height="15" fill="rgb(248,177,22)" fg:x="483" fg:w="1"/><text x="21.7645%" y="159.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (1 samples, 0.04%)</title><rect x="21.7817%" y="197" width="0.0445%" height="15" fill="rgb(215,211,37)" fg:x="489" fg:w="1"/><text x="22.0317%" y="207.50"></text></g><g><title>hyper::proto::h1::conn::KA::status (1 samples, 0.04%)</title><rect x="21.8263%" y="197" width="0.0445%" height="15" fill="rgb(241,128,51)" fg:x="490" fg:w="1"/><text x="22.0763%" y="207.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.04%)</title><rect x="21.9599%" y="181" width="0.0445%" height="15" fill="rgb(227,165,31)" fg:x="493" fg:w="1"/><text x="22.2099%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="22.1381%" y="165" width="0.0445%" height="15" fill="rgb(228,167,24)" fg:x="497" fg:w="1"/><text x="22.3881%" y="175.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (15 samples, 0.67%)</title><rect x="22.0045%" y="181" width="0.6682%" height="15" fill="rgb(228,143,12)" fg:x="494" fg:w="15"/><text x="22.2545%" y="191.50"></text></g><g><title>malloc (11 samples, 0.49%)</title><rect x="22.1826%" y="165" width="0.4900%" height="15" fill="rgb(249,149,8)" fg:x="498" fg:w="11"/><text x="22.4326%" y="175.50"></text></g><g><title>_int_malloc (11 samples, 0.49%)</title><rect x="22.1826%" y="149" width="0.4900%" height="15" fill="rgb(243,35,44)" fg:x="498" fg:w="11"/><text x="22.4326%" y="159.50"></text></g><g><title>malloc_consolidate (5 samples, 0.22%)</title><rect x="22.4499%" y="133" width="0.2227%" height="15" fill="rgb(246,89,9)" fg:x="504" fg:w="5"/><text x="22.6999%" y="143.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (22 samples, 0.98%)</title><rect x="21.7372%" y="213" width="0.9800%" height="15" fill="rgb(233,213,13)" fg:x="488" fg:w="22"/><text x="21.9872%" y="223.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (19 samples, 0.85%)</title><rect x="21.8708%" y="197" width="0.8463%" height="15" fill="rgb(233,141,41)" fg:x="491" fg:w="19"/><text x="22.1208%" y="207.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.04%)</title><rect x="22.6726%" y="181" width="0.0445%" height="15" fill="rgb(239,167,4)" fg:x="509" fg:w="1"/><text x="22.9226%" y="191.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1 samples, 0.04%)</title><rect x="22.7617%" y="181" width="0.0445%" height="15" fill="rgb(209,217,16)" fg:x="511" fg:w="1"/><text x="23.0117%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (30 samples, 1.34%)</title><rect x="21.5590%" y="229" width="1.3363%" height="15" fill="rgb(219,88,35)" fg:x="484" fg:w="30"/><text x="21.8090%" y="239.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (4 samples, 0.18%)</title><rect x="22.7171%" y="213" width="0.1782%" height="15" fill="rgb(220,193,23)" fg:x="510" fg:w="4"/><text x="22.9671%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (3 samples, 0.13%)</title><rect x="22.7617%" y="197" width="0.1336%" height="15" fill="rgb(230,90,52)" fg:x="511" fg:w="3"/><text x="23.0117%" y="207.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.09%)</title><rect x="22.8062%" y="181" width="0.0891%" height="15" fill="rgb(252,106,19)" fg:x="512" fg:w="2"/><text x="23.0562%" y="191.50"></text></g><g><title>&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (4 samples, 0.18%)</title><rect x="23.0290%" y="213" width="0.1782%" height="15" fill="rgb(206,74,20)" fg:x="517" fg:w="4"/><text x="23.2790%" y="223.50"></text></g><g><title>hyper::proto::h1::conn::State::busy (3 samples, 0.13%)</title><rect x="23.2071%" y="213" width="0.1336%" height="15" fill="rgb(230,138,44)" fg:x="521" fg:w="3"/><text x="23.4571%" y="223.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::next (1 samples, 0.04%)</title><rect x="23.6080%" y="181" width="0.0445%" height="15" fill="rgb(235,182,43)" fg:x="530" fg:w="1"/><text x="23.8580%" y="191.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::record (2 samples, 0.09%)</title><rect x="23.6526%" y="181" width="0.0891%" height="15" fill="rgb(242,16,51)" fg:x="531" fg:w="2"/><text x="23.9026%" y="191.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (6 samples, 0.27%)</title><rect x="23.7416%" y="181" width="0.2673%" height="15" fill="rgb(248,9,4)" fg:x="533" fg:w="6"/><text x="23.9916%" y="191.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.22%)</title><rect x="23.7862%" y="165" width="0.2227%" height="15" fill="rgb(210,31,22)" fg:x="534" fg:w="5"/><text x="24.0362%" y="175.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.22%)</title><rect x="23.7862%" y="149" width="0.2227%" height="15" fill="rgb(239,54,39)" fg:x="534" fg:w="5"/><text x="24.0362%" y="159.50"></text></g><g><title>__libc_recv (5 samples, 0.22%)</title><rect x="23.7862%" y="133" width="0.2227%" height="15" fill="rgb(230,99,41)" fg:x="534" fg:w="5"/><text x="24.0362%" y="143.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.09%)</title><rect x="23.9198%" y="117" width="0.0891%" height="15" fill="rgb(253,106,12)" fg:x="537" fg:w="2"/><text x="24.1698%" y="127.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (12 samples, 0.53%)</title><rect x="23.5189%" y="197" width="0.5345%" height="15" fill="rgb(213,46,41)" fg:x="528" fg:w="12"/><text x="23.7689%" y="207.50"></text></g><g><title>tokio::io::read_buf::slice_assume_init (1 samples, 0.04%)</title><rect x="24.0089%" y="181" width="0.0445%" height="15" fill="rgb(215,133,35)" fg:x="539" fg:w="1"/><text x="24.2589%" y="191.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::max (1 samples, 0.04%)</title><rect x="24.0535%" y="197" width="0.0445%" height="15" fill="rgb(213,28,5)" fg:x="540" fg:w="1"/><text x="24.3035%" y="207.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (2 samples, 0.09%)</title><rect x="24.4098%" y="181" width="0.0891%" height="15" fill="rgb(215,77,49)" fg:x="548" fg:w="2"/><text x="24.6598%" y="191.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="24.4543%" y="165" width="0.0445%" height="15" fill="rgb(248,100,22)" fg:x="549" fg:w="1"/><text x="24.7043%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.04%)</title><rect x="24.4989%" y="181" width="0.0445%" height="15" fill="rgb(208,67,9)" fg:x="550" fg:w="1"/><text x="24.7489%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (41 samples, 1.83%)</title><rect x="22.8953%" y="229" width="1.8263%" height="15" fill="rgb(219,133,21)" fg:x="514" fg:w="41"/><text x="23.1453%" y="239.50">h..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (31 samples, 1.38%)</title><rect x="23.3408%" y="213" width="1.3808%" height="15" fill="rgb(246,46,29)" fg:x="524" fg:w="31"/><text x="23.5908%" y="223.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (14 samples, 0.62%)</title><rect x="24.0980%" y="197" width="0.6236%" height="15" fill="rgb(246,185,52)" fg:x="541" fg:w="14"/><text x="24.3480%" y="207.50"></text></g><g><title>tracing::span::Span::record_all (4 samples, 0.18%)</title><rect x="24.5434%" y="181" width="0.1782%" height="15" fill="rgb(252,136,11)" fg:x="551" fg:w="4"/><text x="24.7934%" y="191.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.04%)</title><rect x="25.0334%" y="181" width="0.0445%" height="15" fill="rgb(219,138,53)" fg:x="562" fg:w="1"/><text x="25.2834%" y="191.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (2 samples, 0.09%)</title><rect x="25.0780%" y="181" width="0.0891%" height="15" fill="rgb(211,51,23)" fg:x="563" fg:w="2"/><text x="25.3280%" y="191.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (5 samples, 0.22%)</title><rect x="25.1670%" y="181" width="0.2227%" height="15" fill="rgb(247,221,28)" fg:x="565" fg:w="5"/><text x="25.4170%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.22%)</title><rect x="25.1670%" y="165" width="0.2227%" height="15" fill="rgb(251,222,45)" fg:x="565" fg:w="5"/><text x="25.4170%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.22%)</title><rect x="25.1670%" y="149" width="0.2227%" height="15" fill="rgb(217,162,53)" fg:x="565" fg:w="5"/><text x="25.4170%" y="159.50"></text></g><g><title>malloc (5 samples, 0.22%)</title><rect x="25.1670%" y="133" width="0.2227%" height="15" fill="rgb(229,93,14)" fg:x="565" fg:w="5"/><text x="25.4170%" y="143.50"></text></g><g><title>_int_malloc (3 samples, 0.13%)</title><rect x="25.2561%" y="117" width="0.1336%" height="15" fill="rgb(209,67,49)" fg:x="567" fg:w="3"/><text x="25.5061%" y="127.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::next (3 samples, 0.13%)</title><rect x="25.3898%" y="181" width="0.1336%" height="15" fill="rgb(213,87,29)" fg:x="570" fg:w="3"/><text x="25.6398%" y="191.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (27 samples, 1.20%)</title><rect x="24.7216%" y="229" width="1.2027%" height="15" fill="rgb(205,151,52)" fg:x="555" fg:w="27"/><text x="24.9716%" y="239.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (24 samples, 1.07%)</title><rect x="24.8552%" y="213" width="1.0690%" height="15" fill="rgb(253,215,39)" fg:x="558" fg:w="24"/><text x="25.1052%" y="223.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (22 samples, 0.98%)</title><rect x="24.9443%" y="197" width="0.9800%" height="15" fill="rgb(221,220,41)" fg:x="560" fg:w="22"/><text x="25.1943%" y="207.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (9 samples, 0.40%)</title><rect x="25.5234%" y="181" width="0.4009%" height="15" fill="rgb(218,133,21)" fg:x="573" fg:w="9"/><text x="25.7734%" y="191.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (7 samples, 0.31%)</title><rect x="25.6125%" y="165" width="0.3118%" height="15" fill="rgb(221,193,43)" fg:x="575" fg:w="7"/><text x="25.8625%" y="175.50"></text></g><g><title>hyper::proto::h1::conn::State::close_read (2 samples, 0.09%)</title><rect x="25.9243%" y="229" width="0.0891%" height="15" fill="rgb(240,128,52)" fg:x="582" fg:w="2"/><text x="26.1743%" y="239.50"></text></g><g><title>hyper::proto::h1::conn::State::close_write (1 samples, 0.04%)</title><rect x="26.0134%" y="229" width="0.0445%" height="15" fill="rgb(253,114,12)" fg:x="584" fg:w="1"/><text x="26.2634%" y="239.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::is_eof (3 samples, 0.13%)</title><rect x="26.0579%" y="229" width="0.1336%" height="15" fill="rgb(215,223,47)" fg:x="585" fg:w="3"/><text x="26.3079%" y="239.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::can_buffer (3 samples, 0.13%)</title><rect x="26.1915%" y="229" width="0.1336%" height="15" fill="rgb(248,225,23)" fg:x="588" fg:w="3"/><text x="26.4415%" y="239.50"></text></g><g><title>tokio::runtime::coop::Budget::unconstrained (1 samples, 0.04%)</title><rect x="26.5033%" y="213" width="0.0445%" height="15" fill="rgb(250,108,0)" fg:x="595" fg:w="1"/><text x="26.7533%" y="223.50"></text></g><g><title>tokio::sync::oneshot::State::is_tx_task_set (1 samples, 0.04%)</title><rect x="26.5479%" y="213" width="0.0445%" height="15" fill="rgb(228,208,7)" fg:x="596" fg:w="1"/><text x="26.7979%" y="223.50"></text></g><g><title>tokio::sync::oneshot::State::load (5 samples, 0.22%)</title><rect x="26.5924%" y="213" width="0.2227%" height="15" fill="rgb(244,45,10)" fg:x="597" fg:w="5"/><text x="26.8424%" y="223.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (406 samples, 18.08%)</title><rect x="8.8641%" y="277" width="18.0846%" height="15" fill="rgb(207,125,25)" fg:x="199" fg:w="406"/><text x="9.1141%" y="287.50">&lt;hyper::client::conn::Connec..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (401 samples, 17.86%)</title><rect x="9.0869%" y="261" width="17.8619%" height="15" fill="rgb(210,195,18)" fg:x="204" fg:w="401"/><text x="9.3369%" y="271.50">hyper::proto::h1::dispatch::..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (383 samples, 17.06%)</title><rect x="9.8886%" y="245" width="17.0601%" height="15" fill="rgb(249,80,12)" fg:x="222" fg:w="383"/><text x="10.1386%" y="255.50">hyper::proto::h1::dispatch..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::poll_closed (14 samples, 0.62%)</title><rect x="26.3252%" y="229" width="0.6236%" height="15" fill="rgb(221,65,9)" fg:x="591" fg:w="14"/><text x="26.5752%" y="239.50"></text></g><g><title>tokio::sync::oneshot::Task::will_wake (3 samples, 0.13%)</title><rect x="26.8151%" y="213" width="0.1336%" height="15" fill="rgb(235,49,36)" fg:x="602" fg:w="3"/><text x="27.0651%" y="223.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="26.9488%" y="277" width="0.0891%" height="15" fill="rgb(225,32,20)" fg:x="605" fg:w="2"/><text x="27.1988%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="27.0379%" y="277" width="0.0445%" height="15" fill="rgb(215,141,46)" fg:x="607" fg:w="1"/><text x="27.2879%" y="287.50"></text></g><g><title>&lt;std::process::ExitStatus as std::sys_common::AsInner&lt;std::sys::unix::process::process_inner::ExitStatus&gt;&gt;::as_inner (3 samples, 0.13%)</title><rect x="27.5278%" y="229" width="0.1336%" height="15" fill="rgb(250,160,47)" fg:x="618" fg:w="3"/><text x="27.7778%" y="239.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (6 samples, 0.27%)</title><rect x="27.4833%" y="245" width="0.2673%" height="15" fill="rgb(216,222,40)" fg:x="617" fg:w="6"/><text x="27.7333%" y="255.50"></text></g><g><title>epoll_ctl (2 samples, 0.09%)</title><rect x="27.6615%" y="229" width="0.0891%" height="15" fill="rgb(234,217,39)" fg:x="621" fg:w="2"/><text x="27.9115%" y="239.50"></text></g><g><title>__close (8 samples, 0.36%)</title><rect x="27.7506%" y="245" width="0.3563%" height="15" fill="rgb(207,178,40)" fg:x="623" fg:w="8"/><text x="28.0006%" y="255.50"></text></g><g><title>tokio::runtime::io::metrics::IoDriverMetrics::incr_fd_count (1 samples, 0.04%)</title><rect x="28.1069%" y="245" width="0.0445%" height="15" fill="rgb(221,136,13)" fg:x="631" fg:w="1"/><text x="28.3569%" y="255.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.80%)</title><rect x="27.3942%" y="261" width="0.8018%" height="15" fill="rgb(249,199,10)" fg:x="615" fg:w="18"/><text x="27.6442%" y="271.50"></text></g><g><title>tokio::runtime::io::registration::Registration::handle (1 samples, 0.04%)</title><rect x="28.1514%" y="245" width="0.0445%" height="15" fill="rgb(249,222,13)" fg:x="632" fg:w="1"/><text x="28.4014%" y="255.50"></text></g><g><title>&lt;tokio::util::slab::Ref&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="28.1960%" y="261" width="0.0445%" height="15" fill="rgb(244,185,38)" fg:x="633" fg:w="1"/><text x="28.4460%" y="271.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="28.2405%" y="261" width="0.0445%" height="15" fill="rgb(236,202,9)" fg:x="634" fg:w="1"/><text x="28.4905%" y="271.50"></text></g><g><title>_int_free (13 samples, 0.58%)</title><rect x="28.2851%" y="261" width="0.5791%" height="15" fill="rgb(250,229,37)" fg:x="635" fg:w="13"/><text x="28.5351%" y="271.50"></text></g><g><title>malloc_consolidate (1 samples, 0.04%)</title><rect x="28.8196%" y="245" width="0.0445%" height="15" fill="rgb(206,174,23)" fg:x="647" fg:w="1"/><text x="29.0696%" y="255.50"></text></g><g><title>cfree@GLIBC_2.2.5 (5 samples, 0.22%)</title><rect x="28.8641%" y="261" width="0.2227%" height="15" fill="rgb(211,33,43)" fg:x="648" fg:w="5"/><text x="29.1141%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::body::body::Sender&gt;&gt; (1 samples, 0.04%)</title><rect x="29.0869%" y="261" width="0.0445%" height="15" fill="rgb(245,58,50)" fg:x="653" fg:w="1"/><text x="29.3369%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::conn::State&gt; (6 samples, 0.27%)</title><rect x="29.1314%" y="261" width="0.2673%" height="15" fill="rgb(244,68,36)" fg:x="654" fg:w="6"/><text x="29.3814%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),hyper::error::Error&gt;&gt; (2 samples, 0.09%)</title><rect x="29.3096%" y="245" width="0.0891%" height="15" fill="rgb(232,229,15)" fg:x="658" fg:w="2"/><text x="29.5596%" y="255.50"></text></g><g><title>_int_free (8 samples, 0.36%)</title><rect x="29.3987%" y="229" width="0.3563%" height="15" fill="rgb(254,30,23)" fg:x="660" fg:w="8"/><text x="29.6487%" y="239.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="29.7550%" y="229" width="0.0891%" height="15" fill="rgb(235,160,14)" fg:x="668" fg:w="2"/><text x="30.0050%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.49%)</title><rect x="29.3987%" y="245" width="0.4900%" height="15" fill="rgb(212,155,44)" fg:x="660" fg:w="11"/><text x="29.6487%" y="255.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="29.8441%" y="229" width="0.0445%" height="15" fill="rgb(226,2,50)" fg:x="670" fg:w="1"/><text x="30.0941%" y="239.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.04%)</title><rect x="30.0223%" y="229" width="0.0445%" height="15" fill="rgb(234,177,6)" fg:x="674" fg:w="1"/><text x="30.2723%" y="239.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="30.0223%" y="213" width="0.0445%" height="15" fill="rgb(217,24,9)" fg:x="674" fg:w="1"/><text x="30.2723%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;hyper::client::dispatch::Envelope&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt;&gt; (5 samples, 0.22%)</title><rect x="29.8886%" y="245" width="0.2227%" height="15" fill="rgb(220,13,46)" fg:x="671" fg:w="5"/><text x="30.1386%" y="255.50"></text></g><g><title>tokio::sync::notify::Notify::notify_waiters (1 samples, 0.04%)</title><rect x="30.0668%" y="229" width="0.0445%" height="15" fill="rgb(239,221,27)" fg:x="675" fg:w="1"/><text x="30.3168%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::Client&lt;hyper::body::body::Body&gt;&gt; (18 samples, 0.80%)</title><rect x="29.3987%" y="261" width="0.8018%" height="15" fill="rgb(222,198,25)" fg:x="660" fg:w="18"/><text x="29.6487%" y="271.50"></text></g><g><title>want::Taker::cancel (2 samples, 0.09%)</title><rect x="30.1114%" y="245" width="0.0891%" height="15" fill="rgb(211,99,13)" fg:x="676" fg:w="2"/><text x="30.3614%" y="255.50"></text></g><g><title>want::&lt;impl core::convert::From&lt;want::State&gt; for usize&gt;::from (1 samples, 0.04%)</title><rect x="30.1559%" y="229" width="0.0445%" height="15" fill="rgb(232,111,31)" fg:x="677" fg:w="1"/><text x="30.4059%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (6 samples, 0.27%)</title><rect x="30.2004%" y="261" width="0.2673%" height="15" fill="rgb(245,82,37)" fg:x="678" fg:w="6"/><text x="30.4504%" y="271.50"></text></g><g><title>&lt;tokio::runtime::io::registration::Registration as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="30.2895%" y="245" width="0.1782%" height="15" fill="rgb(227,149,46)" fg:x="680" fg:w="4"/><text x="30.5395%" y="255.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (490 samples, 21.83%)</title><rect x="8.6860%" y="293" width="21.8263%" height="15" fill="rgb(218,36,50)" fg:x="195" fg:w="490"/><text x="8.9360%" y="303.50">&lt;futures_util::future::future::map..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection&lt;tokio::net::tcp::stream::TcpStream,hyper::body::body::Body&gt;&gt;&gt; (77 samples, 3.43%)</title><rect x="27.0824%" y="277" width="3.4298%" height="15" fill="rgb(226,80,48)" fg:x="608" fg:w="77"/><text x="27.3324%" y="287.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;want::Taker&gt; (1 samples, 0.04%)</title><rect x="30.4677%" y="261" width="0.0445%" height="15" fill="rgb(238,224,15)" fg:x="684" fg:w="1"/><text x="30.7177%" y="271.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (494 samples, 22.00%)</title><rect x="8.5523%" y="309" width="22.0045%" height="15" fill="rgb(241,136,10)" fg:x="192" fg:w="494"/><text x="8.8023%" y="319.50">&lt;futures_util::future::future::map:..</text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="30.5122%" y="293" width="0.0445%" height="15" fill="rgb(208,32,45)" fg:x="685" fg:w="1"/><text x="30.7622%" y="303.50"></text></g><g><title>&lt;hyper::client::pool::IdleTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.09%)</title><rect x="30.5568%" y="309" width="0.0891%" height="15" fill="rgb(207,135,9)" fg:x="686" fg:w="2"/><text x="30.8068%" y="319.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="30.6459%" y="309" width="0.1782%" height="15" fill="rgb(206,86,44)" fg:x="688" fg:w="4"/><text x="30.8959%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="30.8241%" y="309" width="0.0445%" height="15" fill="rgb(245,177,15)" fg:x="692" fg:w="1"/><text x="31.0741%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="30.8686%" y="309" width="0.0445%" height="15" fill="rgb(206,64,50)" fg:x="693" fg:w="1"/><text x="31.1186%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="30.9131%" y="293" width="0.0445%" height="15" fill="rgb(234,36,40)" fg:x="694" fg:w="1"/><text x="31.1631%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="30.9577%" y="293" width="0.0445%" height="15" fill="rgb(213,64,8)" fg:x="695" fg:w="1"/><text x="31.2077%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (3 samples, 0.13%)</title><rect x="30.9131%" y="309" width="0.1336%" height="15" fill="rgb(210,75,36)" fg:x="694" fg:w="3"/><text x="31.1631%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1 samples, 0.04%)</title><rect x="31.0022%" y="293" width="0.0445%" height="15" fill="rgb(229,88,21)" fg:x="696" fg:w="1"/><text x="31.2522%" y="303.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="31.0022%" y="277" width="0.0445%" height="15" fill="rgb(252,204,47)" fg:x="696" fg:w="1"/><text x="31.2522%" y="287.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (3 samples, 0.13%)</title><rect x="31.7595%" y="261" width="0.1336%" height="15" fill="rgb(208,77,27)" fg:x="713" fg:w="3"/><text x="32.0095%" y="271.50"></text></g><g><title>hyper::common::date::CACHED::__getit (2 samples, 0.09%)</title><rect x="32.0713%" y="245" width="0.0891%" height="15" fill="rgb(221,76,26)" fg:x="720" fg:w="2"/><text x="32.3213%" y="255.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.31%)</title><rect x="32.2940%" y="229" width="0.3118%" height="15" fill="rgb(225,139,18)" fg:x="725" fg:w="7"/><text x="32.5440%" y="239.50"></text></g><g><title>__clock_gettime (6 samples, 0.27%)</title><rect x="32.3385%" y="213" width="0.2673%" height="15" fill="rgb(230,137,11)" fg:x="726" fg:w="6"/><text x="32.5885%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (20 samples, 0.89%)</title><rect x="31.8931%" y="261" width="0.8909%" height="15" fill="rgb(212,28,1)" fg:x="716" fg:w="20"/><text x="32.1431%" y="271.50"></text></g><g><title>hyper::common::date::CachedDate::check (14 samples, 0.62%)</title><rect x="32.1604%" y="245" width="0.6236%" height="15" fill="rgb(248,164,17)" fg:x="722" fg:w="14"/><text x="32.4104%" y="255.50"></text></g><g><title>std::time::SystemTime::now (4 samples, 0.18%)</title><rect x="32.6058%" y="229" width="0.1782%" height="15" fill="rgb(222,171,42)" fg:x="732" fg:w="4"/><text x="32.8558%" y="239.50"></text></g><g><title>hyper::proto::h1::conn::State::is_read_closed (2 samples, 0.09%)</title><rect x="32.7840%" y="261" width="0.0891%" height="15" fill="rgb(243,84,45)" fg:x="736" fg:w="2"/><text x="33.0340%" y="271.50"></text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::size_hint (3 samples, 0.13%)</title><rect x="34.7884%" y="245" width="0.1336%" height="15" fill="rgb(252,49,23)" fg:x="781" fg:w="3"/><text x="35.0384%" y="255.50"></text></g><g><title>&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (3 samples, 0.13%)</title><rect x="35.3675%" y="197" width="0.1336%" height="15" fill="rgb(215,19,7)" fg:x="794" fg:w="3"/><text x="35.6175%" y="207.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="35.5011%" y="181" width="0.0445%" height="15" fill="rgb(238,81,41)" fg:x="797" fg:w="1"/><text x="35.7511%" y="191.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodRouter&lt;S,B,E&gt; as core::clone::Clone&gt;::clone (9 samples, 0.40%)</title><rect x="35.1893%" y="213" width="0.4009%" height="15" fill="rgb(210,199,37)" fg:x="790" fg:w="9"/><text x="35.4393%" y="223.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="35.5011%" y="197" width="0.0891%" height="15" fill="rgb(244,192,49)" fg:x="797" fg:w="2"/><text x="35.7511%" y="207.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="35.5457%" y="181" width="0.0445%" height="15" fill="rgb(226,211,11)" fg:x="798" fg:w="1"/><text x="35.7957%" y="191.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="35.5457%" y="165" width="0.0445%" height="15" fill="rgb(236,162,54)" fg:x="798" fg:w="1"/><text x="35.7957%" y="175.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="35.5902%" y="213" width="0.0891%" height="15" fill="rgb(220,229,9)" fg:x="799" fg:w="2"/><text x="35.8402%" y="223.50"></text></g><g><title>__rust_dealloc (1 samples, 0.04%)</title><rect x="35.6793%" y="213" width="0.0445%" height="15" fill="rgb(250,87,22)" fg:x="801" fg:w="1"/><text x="35.9293%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="35.7684%" y="197" width="0.0445%" height="15" fill="rgb(239,43,17)" fg:x="803" fg:w="1"/><text x="36.0184%" y="207.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="35.7684%" y="181" width="0.0445%" height="15" fill="rgb(231,177,25)" fg:x="803" fg:w="1"/><text x="36.0184%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.09%)</title><rect x="35.8129%" y="181" width="0.0891%" height="15" fill="rgb(219,179,1)" fg:x="804" fg:w="2"/><text x="36.0629%" y="191.50"></text></g><g><title>axum::extract::matched_path::set_matched_path_for_request (5 samples, 0.22%)</title><rect x="35.7238%" y="213" width="0.2227%" height="15" fill="rgb(238,219,53)" fg:x="802" fg:w="5"/><text x="35.9738%" y="223.50"></text></g><g><title>http::extensions::Extensions::insert (3 samples, 0.13%)</title><rect x="35.8129%" y="197" width="0.1336%" height="15" fill="rgb(232,167,36)" fg:x="804" fg:w="3"/><text x="36.0629%" y="207.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="35.9020%" y="181" width="0.0445%" height="15" fill="rgb(244,19,51)" fg:x="806" fg:w="1"/><text x="36.1520%" y="191.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="35.9020%" y="165" width="0.0445%" height="15" fill="rgb(224,6,22)" fg:x="806" fg:w="1"/><text x="36.1520%" y="175.50"></text></g><g><title>__memcmp_sse4_1 (6 samples, 0.27%)</title><rect x="36.1693%" y="181" width="0.2673%" height="15" fill="rgb(224,145,5)" fg:x="812" fg:w="6"/><text x="36.4193%" y="191.50"></text></g><g><title>axum::routing::Node::at (12 samples, 0.53%)</title><rect x="35.9465%" y="213" width="0.5345%" height="15" fill="rgb(234,130,49)" fg:x="807" fg:w="12"/><text x="36.1965%" y="223.50"></text></g><g><title>matchit::tree::Node&lt;T&gt;::at (12 samples, 0.53%)</title><rect x="35.9465%" y="197" width="0.5345%" height="15" fill="rgb(254,6,2)" fg:x="807" fg:w="12"/><text x="36.1965%" y="207.50"></text></g><g><title>matchit::params::Params::new (1 samples, 0.04%)</title><rect x="36.4365%" y="181" width="0.0445%" height="15" fill="rgb(208,96,46)" fg:x="818" fg:w="1"/><text x="36.6865%" y="191.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.22%)</title><rect x="36.5702%" y="197" width="0.2227%" height="15" fill="rgb(239,3,39)" fg:x="821" fg:w="5"/><text x="36.8202%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="36.7038%" y="181" width="0.0891%" height="15" fill="rgb(233,210,1)" fg:x="824" fg:w="2"/><text x="36.9538%" y="191.50"></text></g><g><title>axum::routing::url_params::insert_url_params (11 samples, 0.49%)</title><rect x="36.4811%" y="213" width="0.4900%" height="15" fill="rgb(244,137,37)" fg:x="819" fg:w="11"/><text x="36.7311%" y="223.50"></text></g><g><title>http::extensions::Extensions::insert (4 samples, 0.18%)</title><rect x="36.7929%" y="197" width="0.1782%" height="15" fill="rgb(240,136,2)" fg:x="826" fg:w="4"/><text x="37.0429%" y="207.50"></text></g><g><title>malloc (3 samples, 0.13%)</title><rect x="36.8374%" y="181" width="0.1336%" height="15" fill="rgb(239,18,37)" fg:x="827" fg:w="3"/><text x="37.0874%" y="191.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="36.9265%" y="165" width="0.0445%" height="15" fill="rgb(218,185,22)" fg:x="829" fg:w="1"/><text x="37.1765%" y="175.50"></text></g><g><title>bytes::bytes::promotable_even_clone (1 samples, 0.04%)</title><rect x="36.9710%" y="213" width="0.0445%" height="15" fill="rgb(225,218,4)" fg:x="830" fg:w="1"/><text x="37.2210%" y="223.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (1 samples, 0.04%)</title><rect x="36.9710%" y="197" width="0.0445%" height="15" fill="rgb(230,182,32)" fg:x="830" fg:w="1"/><text x="37.2210%" y="207.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="36.9710%" y="181" width="0.0445%" height="15" fill="rgb(242,56,43)" fg:x="830" fg:w="1"/><text x="37.2210%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="37.0156%" y="213" width="0.0891%" height="15" fill="rgb(233,99,24)" fg:x="831" fg:w="2"/><text x="37.2656%" y="223.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="37.0156%" y="197" width="0.0891%" height="15" fill="rgb(234,209,42)" fg:x="831" fg:w="2"/><text x="37.2656%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::Fallback&lt;(),hyper::body::body::Body&gt;&gt; (2 samples, 0.09%)</title><rect x="37.1938%" y="197" width="0.0891%" height="15" fill="rgb(227,7,12)" fg:x="835" fg:w="2"/><text x="37.4438%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (9 samples, 0.40%)</title><rect x="37.1047%" y="213" width="0.4009%" height="15" fill="rgb(245,203,43)" fg:x="833" fg:w="9"/><text x="37.3547%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodEndpoint&lt;(),hyper::body::body::Body,core::convert::Infallible&gt;&gt; (5 samples, 0.22%)</title><rect x="37.2829%" y="197" width="0.2227%" height="15" fill="rgb(238,205,33)" fg:x="837" fg:w="5"/><text x="37.5329%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.22%)</title><rect x="37.5056%" y="197" width="0.2227%" height="15" fill="rgb(231,56,7)" fg:x="842" fg:w="5"/><text x="37.7556%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.09%)</title><rect x="37.6392%" y="181" width="0.0891%" height="15" fill="rgb(244,186,29)" fg:x="845" fg:w="2"/><text x="37.8892%" y="191.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="37.6837%" y="165" width="0.0445%" height="15" fill="rgb(234,111,31)" fg:x="846" fg:w="1"/><text x="37.9337%" y="175.50"></text></g><g><title>http::extensions::Extensions::insert (6 samples, 0.27%)</title><rect x="37.5056%" y="213" width="0.2673%" height="15" fill="rgb(241,149,10)" fg:x="842" fg:w="6"/><text x="37.7556%" y="223.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="37.7283%" y="197" width="0.0445%" height="15" fill="rgb(249,206,44)" fg:x="847" fg:w="1"/><text x="37.9783%" y="207.50"></text></g><g><title>http::uri::Uri::has_path (3 samples, 0.13%)</title><rect x="37.7728%" y="213" width="0.1336%" height="15" fill="rgb(251,153,30)" fg:x="848" fg:w="3"/><text x="38.0228%" y="223.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (72 samples, 3.21%)</title><rect x="34.9666%" y="229" width="3.2071%" height="15" fill="rgb(239,152,38)" fg:x="785" fg:w="72"/><text x="35.2166%" y="239.50">&lt;T ..</text></g><g><title>malloc (6 samples, 0.27%)</title><rect x="37.9065%" y="213" width="0.2673%" height="15" fill="rgb(249,139,47)" fg:x="851" fg:w="6"/><text x="38.1565%" y="223.50"></text></g><g><title>_int_malloc (5 samples, 0.22%)</title><rect x="37.9510%" y="197" width="0.2227%" height="15" fill="rgb(244,64,35)" fg:x="852" fg:w="5"/><text x="38.2010%" y="207.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="38.1737%" y="229" width="0.0445%" height="15" fill="rgb(216,46,15)" fg:x="857" fg:w="1"/><text x="38.4237%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.04%)</title><rect x="38.2183%" y="229" width="0.0445%" height="15" fill="rgb(250,74,19)" fg:x="858" fg:w="1"/><text x="38.4683%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.13%)</title><rect x="38.2628%" y="229" width="0.1336%" height="15" fill="rgb(249,42,33)" fg:x="859" fg:w="3"/><text x="38.5128%" y="239.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.04%)</title><rect x="38.3519%" y="213" width="0.0445%" height="15" fill="rgb(242,149,17)" fg:x="861" fg:w="1"/><text x="38.6019%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (80 samples, 3.56%)</title><rect x="34.9220%" y="245" width="3.5635%" height="15" fill="rgb(244,29,21)" fg:x="784" fg:w="80"/><text x="35.1720%" y="255.50">&lt;hyp..</text></g><g><title>http::request::Parts::new (2 samples, 0.09%)</title><rect x="38.3964%" y="229" width="0.0891%" height="15" fill="rgb(220,130,37)" fg:x="862" fg:w="2"/><text x="38.6464%" y="239.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (2 samples, 0.09%)</title><rect x="38.4855%" y="245" width="0.0891%" height="15" fill="rgb(211,67,2)" fg:x="864" fg:w="2"/><text x="38.7355%" y="255.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="38.9310%" y="197" width="0.0445%" height="15" fill="rgb(235,68,52)" fg:x="874" fg:w="1"/><text x="39.1810%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;hyper::body::body::Extra&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="38.9755%" y="197" width="0.0445%" height="15" fill="rgb(246,142,3)" fg:x="875" fg:w="1"/><text x="39.2255%" y="207.50"></text></g><g><title>bytes::bytes::promotable_even_drop (2 samples, 0.09%)</title><rect x="39.0200%" y="181" width="0.0891%" height="15" fill="rgb(241,25,7)" fg:x="876" fg:w="2"/><text x="39.2700%" y="191.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="39.0646%" y="165" width="0.0445%" height="15" fill="rgb(242,119,39)" fg:x="877" fg:w="1"/><text x="39.3146%" y="175.50"></text></g><g><title>_int_free (5 samples, 0.22%)</title><rect x="39.2428%" y="149" width="0.2227%" height="15" fill="rgb(241,98,45)" fg:x="881" fg:w="5"/><text x="39.4928%" y="159.50"></text></g><g><title>__lll_unlock_wake_private (1 samples, 0.04%)</title><rect x="39.4209%" y="133" width="0.0445%" height="15" fill="rgb(254,28,30)" fg:x="885" fg:w="1"/><text x="39.6709%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (10 samples, 0.45%)</title><rect x="39.1091%" y="181" width="0.4454%" height="15" fill="rgb(241,142,54)" fg:x="878" fg:w="10"/><text x="39.3591%" y="191.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (8 samples, 0.36%)</title><rect x="39.1982%" y="165" width="0.3563%" height="15" fill="rgb(222,85,15)" fg:x="880" fg:w="8"/><text x="39.4482%" y="175.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="39.4655%" y="149" width="0.0891%" height="15" fill="rgb(210,85,47)" fg:x="886" fg:w="2"/><text x="39.7155%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.13%)</title><rect x="39.5546%" y="181" width="0.1336%" height="15" fill="rgb(224,206,25)" fg:x="888" fg:w="3"/><text x="39.8046%" y="191.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.04%)</title><rect x="39.6437%" y="165" width="0.0445%" height="15" fill="rgb(243,201,19)" fg:x="890" fg:w="1"/><text x="39.8937%" y="175.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="39.7773%" y="165" width="0.0445%" height="15" fill="rgb(236,59,4)" fg:x="893" fg:w="1"/><text x="40.0273%" y="175.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4 samples, 0.18%)</title><rect x="39.8218%" y="165" width="0.1782%" height="15" fill="rgb(254,179,45)" fg:x="894" fg:w="4"/><text x="40.0718%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (3 samples, 0.13%)</title><rect x="40.0000%" y="165" width="0.1336%" height="15" fill="rgb(226,14,10)" fg:x="898" fg:w="3"/><text x="40.2500%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::url_params::UrlParams&gt; (3 samples, 0.13%)</title><rect x="40.1336%" y="165" width="0.1336%" height="15" fill="rgb(244,27,41)" fg:x="901" fg:w="3"/><text x="40.3836%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; (31 samples, 1.38%)</title><rect x="39.0200%" y="197" width="1.3808%" height="15" fill="rgb(235,35,32)" fg:x="876" fg:w="31"/><text x="39.2700%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (16 samples, 0.71%)</title><rect x="39.6882%" y="181" width="0.7127%" height="15" fill="rgb(218,68,31)" fg:x="891" fg:w="16"/><text x="39.9382%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.13%)</title><rect x="40.2673%" y="165" width="0.1336%" height="15" fill="rgb(207,120,37)" fg:x="904" fg:w="3"/><text x="40.5173%" y="175.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.04%)</title><rect x="40.3563%" y="149" width="0.0445%" height="15" fill="rgb(227,98,0)" fg:x="906" fg:w="1"/><text x="40.6063%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (3 samples, 0.13%)</title><rect x="40.4009%" y="197" width="0.1336%" height="15" fill="rgb(207,7,3)" fg:x="907" fg:w="3"/><text x="40.6509%" y="207.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call (38 samples, 1.69%)</title><rect x="38.9310%" y="213" width="1.6927%" height="15" fill="rgb(206,98,19)" fg:x="874" fg:w="38"/><text x="39.1810%" y="223.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="40.5345%" y="197" width="0.0891%" height="15" fill="rgb(217,5,26)" fg:x="910" fg:w="2"/><text x="40.7845%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="40.5791%" y="181" width="0.0445%" height="15" fill="rgb(235,190,38)" fg:x="911" fg:w="1"/><text x="40.8291%" y="191.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="40.6236%" y="213" width="0.0891%" height="15" fill="rgb(247,86,24)" fg:x="912" fg:w="2"/><text x="40.8736%" y="223.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (42 samples, 1.87%)</title><rect x="38.8864%" y="229" width="1.8708%" height="15" fill="rgb(205,101,16)" fg:x="873" fg:w="42"/><text x="39.1364%" y="239.50">&lt;..</text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="40.7127%" y="213" width="0.0445%" height="15" fill="rgb(246,168,33)" fg:x="914" fg:w="1"/><text x="40.9627%" y="223.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.04%)</title><rect x="42.4053%" y="133" width="0.0445%" height="15" fill="rgb(231,114,1)" fg:x="952" fg:w="1"/><text x="42.6553%" y="143.50"></text></g><g><title>&lt;[(K,V): N] as axum_core::response::into_response_parts::IntoResponseParts&gt;::into_response_parts (9 samples, 0.40%)</title><rect x="42.3608%" y="149" width="0.4009%" height="15" fill="rgb(207,184,53)" fg:x="951" fg:w="9"/><text x="42.6108%" y="159.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (7 samples, 0.31%)</title><rect x="42.4499%" y="133" width="0.3118%" height="15" fill="rgb(224,95,51)" fg:x="953" fg:w="7"/><text x="42.6999%" y="143.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.04%)</title><rect x="42.7171%" y="117" width="0.0445%" height="15" fill="rgb(212,188,45)" fg:x="959" fg:w="1"/><text x="42.9671%" y="127.50"></text></g><g><title>&lt;http_body::full::Full&lt;bytes::bytes::Bytes&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response (4 samples, 0.18%)</title><rect x="42.9399%" y="133" width="0.1782%" height="15" fill="rgb(223,154,38)" fg:x="964" fg:w="4"/><text x="43.1899%" y="143.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="43.0735%" y="117" width="0.0445%" height="15" fill="rgb(251,22,52)" fg:x="967" fg:w="1"/><text x="43.3235%" y="127.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (2 samples, 0.09%)</title><rect x="43.1626%" y="117" width="0.0891%" height="15" fill="rgb(229,209,22)" fg:x="969" fg:w="2"/><text x="43.4126%" y="127.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (4 samples, 0.18%)</title><rect x="43.1180%" y="133" width="0.1782%" height="15" fill="rgb(234,138,34)" fg:x="968" fg:w="4"/><text x="43.3680%" y="143.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.04%)</title><rect x="43.2517%" y="117" width="0.0445%" height="15" fill="rgb(212,95,11)" fg:x="971" fg:w="1"/><text x="43.5017%" y="127.50"></text></g><g><title>&lt;bytes::bytes::Bytes as axum_core::response::into_response::IntoResponse&gt;::into_response (13 samples, 0.58%)</title><rect x="42.7617%" y="149" width="0.5791%" height="15" fill="rgb(240,179,47)" fg:x="960" fg:w="13"/><text x="43.0117%" y="159.50"></text></g><g><title>http::header::value::is_visible_ascii (1 samples, 0.04%)</title><rect x="43.2962%" y="133" width="0.0445%" height="15" fill="rgb(240,163,11)" fg:x="972" fg:w="1"/><text x="43.5462%" y="143.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3 samples, 0.13%)</title><rect x="43.3853%" y="133" width="0.1336%" height="15" fill="rgb(236,37,12)" fg:x="974" fg:w="3"/><text x="43.6353%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="43.4744%" y="117" width="0.0445%" height="15" fill="rgb(232,164,16)" fg:x="976" fg:w="1"/><text x="43.7244%" y="127.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (6 samples, 0.27%)</title><rect x="43.3408%" y="149" width="0.2673%" height="15" fill="rgb(244,205,15)" fg:x="973" fg:w="6"/><text x="43.5908%" y="159.50"></text></g><g><title>bytes::bytes_mut::rebuild_vec (2 samples, 0.09%)</title><rect x="43.5189%" y="133" width="0.0891%" height="15" fill="rgb(223,117,47)" fg:x="977" fg:w="2"/><text x="43.7689%" y="143.50"></text></g><g><title>http::header::value::is_visible_ascii (1 samples, 0.04%)</title><rect x="43.6080%" y="149" width="0.0445%" height="15" fill="rgb(244,107,35)" fg:x="979" fg:w="1"/><text x="43.8580%" y="159.50"></text></g><g><title>mime::Source::as_ref (2 samples, 0.09%)</title><rect x="43.6526%" y="149" width="0.0891%" height="15" fill="rgb(205,140,8)" fg:x="980" fg:w="2"/><text x="43.9026%" y="159.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (2 samples, 0.09%)</title><rect x="43.8307%" y="117" width="0.0891%" height="15" fill="rgb(228,84,46)" fg:x="984" fg:w="2"/><text x="44.0807%" y="127.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="43.8753%" y="101" width="0.0445%" height="15" fill="rgb(254,188,9)" fg:x="985" fg:w="1"/><text x="44.1253%" y="111.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.45%)</title><rect x="43.7416%" y="133" width="0.4454%" height="15" fill="rgb(206,112,54)" fg:x="982" fg:w="10"/><text x="43.9916%" y="143.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.27%)</title><rect x="43.9198%" y="117" width="0.2673%" height="15" fill="rgb(216,84,49)" fg:x="986" fg:w="6"/><text x="44.1698%" y="127.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (4 samples, 0.18%)</title><rect x="44.0089%" y="101" width="0.1782%" height="15" fill="rgb(214,194,35)" fg:x="988" fg:w="4"/><text x="44.2589%" y="111.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="44.1425%" y="85" width="0.0445%" height="15" fill="rgb(249,28,3)" fg:x="991" fg:w="1"/><text x="44.3925%" y="95.50"></text></g><g><title>&lt;axum::json::Json&lt;T&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response (48 samples, 2.14%)</title><rect x="42.1381%" y="165" width="2.1381%" height="15" fill="rgb(222,56,52)" fg:x="946" fg:w="48"/><text x="42.3881%" y="175.50">&lt;..</text></g><g><title>rust_axum::data::_::&lt;impl serde::ser::Serialize for rust_axum::data::IOCall&gt;::serialize (12 samples, 0.53%)</title><rect x="43.7416%" y="149" width="0.5345%" height="15" fill="rgb(245,217,50)" fg:x="982" fg:w="12"/><text x="43.9916%" y="159.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (2 samples, 0.09%)</title><rect x="44.1871%" y="133" width="0.0891%" height="15" fill="rgb(213,201,24)" fg:x="992" fg:w="2"/><text x="44.4371%" y="143.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="44.2316%" y="117" width="0.0445%" height="15" fill="rgb(248,116,28)" fg:x="993" fg:w="1"/><text x="44.4816%" y="127.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="44.4098%" y="101" width="0.0891%" height="15" fill="rgb(219,72,43)" fg:x="997" fg:w="2"/><text x="44.6598%" y="111.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.09%)</title><rect x="44.5880%" y="85" width="0.0891%" height="15" fill="rgb(209,138,14)" fg:x="1001" fg:w="2"/><text x="44.8380%" y="95.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.22%)</title><rect x="44.4989%" y="101" width="0.2227%" height="15" fill="rgb(222,18,33)" fg:x="999" fg:w="5"/><text x="44.7489%" y="111.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="44.6771%" y="85" width="0.0445%" height="15" fill="rgb(213,199,7)" fg:x="1003" fg:w="1"/><text x="44.9271%" y="95.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (14 samples, 0.62%)</title><rect x="44.2762%" y="165" width="0.6236%" height="15" fill="rgb(250,110,10)" fg:x="994" fg:w="14"/><text x="44.5262%" y="175.50"></text></g><g><title>hyper::body::body::Body::poll_inner (13 samples, 0.58%)</title><rect x="44.3207%" y="149" width="0.5791%" height="15" fill="rgb(248,123,6)" fg:x="995" fg:w="13"/><text x="44.5707%" y="159.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.53%)</title><rect x="44.3653%" y="133" width="0.5345%" height="15" fill="rgb(206,91,31)" fg:x="996" fg:w="12"/><text x="44.6153%" y="143.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (11 samples, 0.49%)</title><rect x="44.4098%" y="117" width="0.4900%" height="15" fill="rgb(211,154,13)" fg:x="997" fg:w="11"/><text x="44.6598%" y="127.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (4 samples, 0.18%)</title><rect x="44.7216%" y="101" width="0.1782%" height="15" fill="rgb(225,148,7)" fg:x="1004" fg:w="4"/><text x="44.9716%" y="111.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="44.8107%" y="85" width="0.0891%" height="15" fill="rgb(220,160,43)" fg:x="1006" fg:w="2"/><text x="45.0607%" y="95.50"></text></g><g><title>&lt;hyper::client::client::Builder as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="44.8998%" y="165" width="0.0445%" height="15" fill="rgb(213,52,39)" fg:x="1008" fg:w="1"/><text x="45.1498%" y="175.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (6 samples, 0.27%)</title><rect x="44.9443%" y="165" width="0.2673%" height="15" fill="rgb(243,137,7)" fg:x="1009" fg:w="6"/><text x="45.1943%" y="175.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1 samples, 0.04%)</title><rect x="45.1670%" y="149" width="0.0445%" height="15" fill="rgb(230,79,13)" fg:x="1014" fg:w="1"/><text x="45.4170%" y="159.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="45.2116%" y="165" width="0.0891%" height="15" fill="rgb(247,105,23)" fg:x="1015" fg:w="2"/><text x="45.4616%" y="175.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="45.3007%" y="165" width="0.0891%" height="15" fill="rgb(223,179,41)" fg:x="1017" fg:w="2"/><text x="45.5507%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="45.3898%" y="117" width="0.0445%" height="15" fill="rgb(218,9,34)" fg:x="1019" fg:w="1"/><text x="45.6398%" y="127.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (4 samples, 0.18%)</title><rect x="45.3898%" y="165" width="0.1782%" height="15" fill="rgb(222,106,8)" fg:x="1019" fg:w="4"/><text x="45.6398%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.18%)</title><rect x="45.3898%" y="149" width="0.1782%" height="15" fill="rgb(211,220,0)" fg:x="1019" fg:w="4"/><text x="45.6398%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.18%)</title><rect x="45.3898%" y="133" width="0.1782%" height="15" fill="rgb(229,52,16)" fg:x="1019" fg:w="4"/><text x="45.6398%" y="143.50"></text></g><g><title>malloc (3 samples, 0.13%)</title><rect x="45.4343%" y="117" width="0.1336%" height="15" fill="rgb(212,155,18)" fg:x="1020" fg:w="3"/><text x="45.6843%" y="127.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="45.5234%" y="101" width="0.0445%" height="15" fill="rgb(242,21,14)" fg:x="1022" fg:w="1"/><text x="45.7734%" y="111.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="45.7906%" y="149" width="0.0891%" height="15" fill="rgb(222,19,48)" fg:x="1028" fg:w="2"/><text x="46.0406%" y="159.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="45.9243%" y="133" width="0.0445%" height="15" fill="rgb(232,45,27)" fg:x="1031" fg:w="1"/><text x="46.1743%" y="143.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.09%)</title><rect x="46.0134%" y="117" width="0.0891%" height="15" fill="rgb(249,103,42)" fg:x="1033" fg:w="2"/><text x="46.2634%" y="127.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.04%)</title><rect x="46.0579%" y="101" width="0.0445%" height="15" fill="rgb(246,81,33)" fg:x="1034" fg:w="1"/><text x="46.3079%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::PoolTx&lt;hyper::body::body::Body&gt;&gt; (4 samples, 0.18%)</title><rect x="45.9688%" y="133" width="0.1782%" height="15" fill="rgb(252,33,42)" fg:x="1032" fg:w="4"/><text x="46.2188%" y="143.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (1 samples, 0.04%)</title><rect x="46.1024%" y="117" width="0.0445%" height="15" fill="rgb(209,212,41)" fg:x="1035" fg:w="1"/><text x="46.3524%" y="127.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="46.2361%" y="117" width="0.0445%" height="15" fill="rgb(207,154,6)" fg:x="1038" fg:w="1"/><text x="46.4861%" y="127.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.76%)</title><rect x="45.5679%" y="165" width="0.7572%" height="15" fill="rgb(223,64,47)" fg:x="1023" fg:w="17"/><text x="45.8179%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;((http::uri::scheme::Scheme,http::uri::authority::Authority),alloc::vec::Vec&lt;hyper::client::pool::Idle&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt;)&gt; (10 samples, 0.45%)</title><rect x="45.8797%" y="149" width="0.4454%" height="15" fill="rgb(211,161,38)" fg:x="1030" fg:w="10"/><text x="46.1297%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Idle&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (4 samples, 0.18%)</title><rect x="46.1470%" y="133" width="0.1782%" height="15" fill="rgb(219,138,40)" fg:x="1036" fg:w="4"/><text x="46.3970%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::connect::ExtraEnvelope&lt;hyper::client::connect::http::HttpInfo&gt;&gt; (1 samples, 0.04%)</title><rect x="46.2806%" y="117" width="0.0445%" height="15" fill="rgb(241,228,46)" fg:x="1039" fg:w="1"/><text x="46.5306%" y="127.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (2 samples, 0.09%)</title><rect x="46.3252%" y="149" width="0.0891%" height="15" fill="rgb(223,209,38)" fg:x="1040" fg:w="2"/><text x="46.5752%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.04%)</title><rect x="46.3697%" y="133" width="0.0445%" height="15" fill="rgb(236,164,45)" fg:x="1041" fg:w="1"/><text x="46.6197%" y="143.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (3 samples, 0.13%)</title><rect x="46.3252%" y="165" width="0.1336%" height="15" fill="rgb(231,15,5)" fg:x="1040" fg:w="3"/><text x="46.5752%" y="175.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="46.4143%" y="149" width="0.0445%" height="15" fill="rgb(252,35,15)" fg:x="1042" fg:w="1"/><text x="46.6643%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="46.4588%" y="149" width="0.0445%" height="15" fill="rgb(248,181,18)" fg:x="1043" fg:w="1"/><text x="46.7088%" y="159.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.09%)</title><rect x="46.5479%" y="133" width="0.0891%" height="15" fill="rgb(233,39,42)" fg:x="1045" fg:w="2"/><text x="46.7979%" y="143.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="46.6370%" y="133" width="0.0445%" height="15" fill="rgb(238,110,33)" fg:x="1047" fg:w="1"/><text x="46.8870%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (5 samples, 0.22%)</title><rect x="46.5033%" y="149" width="0.2227%" height="15" fill="rgb(233,195,10)" fg:x="1044" fg:w="5"/><text x="46.7533%" y="159.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.04%)</title><rect x="46.6815%" y="133" width="0.0445%" height="15" fill="rgb(254,105,3)" fg:x="1048" fg:w="1"/><text x="46.9315%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt; (9 samples, 0.40%)</title><rect x="46.4588%" y="165" width="0.4009%" height="15" fill="rgb(221,225,9)" fg:x="1043" fg:w="9"/><text x="46.7088%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (3 samples, 0.13%)</title><rect x="46.7261%" y="149" width="0.1336%" height="15" fill="rgb(224,227,45)" fg:x="1049" fg:w="3"/><text x="46.9761%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h2::ping::KeepAliveTimedOut&gt; (1 samples, 0.04%)</title><rect x="46.8151%" y="133" width="0.0445%" height="15" fill="rgb(229,198,43)" fg:x="1051" fg:w="1"/><text x="47.0651%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::aggregate::aggregate&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="46.8597%" y="165" width="0.0445%" height="15" fill="rgb(206,209,35)" fg:x="1052" fg:w="1"/><text x="47.1097%" y="175.50"></text></g><g><title>&lt;hyper::common::watch::Sender as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="47.0379%" y="149" width="0.0891%" height="15" fill="rgb(245,195,53)" fg:x="1056" fg:w="2"/><text x="47.2879%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.09%)</title><rect x="47.1269%" y="149" width="0.0891%" height="15" fill="rgb(240,92,26)" fg:x="1058" fg:w="2"/><text x="47.3769%" y="159.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.04%)</title><rect x="47.2160%" y="149" width="0.0445%" height="15" fill="rgb(207,40,23)" fg:x="1060" fg:w="1"/><text x="47.4660%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.09%)</title><rect x="47.2606%" y="133" width="0.0891%" height="15" fill="rgb(223,111,35)" fg:x="1061" fg:w="2"/><text x="47.5106%" y="143.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="47.2606%" y="117" width="0.0891%" height="15" fill="rgb(229,147,28)" fg:x="1061" fg:w="2"/><text x="47.5106%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.09%)</title><rect x="47.2606%" y="101" width="0.0891%" height="15" fill="rgb(211,29,28)" fg:x="1061" fg:w="2"/><text x="47.5106%" y="111.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.09%)</title><rect x="47.2606%" y="85" width="0.0891%" height="15" fill="rgb(228,72,33)" fg:x="1061" fg:w="2"/><text x="47.5106%" y="95.50"></text></g><g><title>tokio::runtime::task::raw::schedule (2 samples, 0.09%)</title><rect x="47.3497%" y="133" width="0.0891%" height="15" fill="rgb(205,214,31)" fg:x="1063" fg:w="2"/><text x="47.5997%" y="143.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (1 samples, 0.04%)</title><rect x="47.3942%" y="117" width="0.0445%" height="15" fill="rgb(224,111,15)" fg:x="1064" fg:w="1"/><text x="47.6442%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (14 samples, 0.62%)</title><rect x="46.9042%" y="165" width="0.6236%" height="15" fill="rgb(253,21,26)" fg:x="1053" fg:w="14"/><text x="47.1542%" y="175.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (6 samples, 0.27%)</title><rect x="47.2606%" y="149" width="0.2673%" height="15" fill="rgb(245,139,43)" fg:x="1061" fg:w="6"/><text x="47.5106%" y="159.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.09%)</title><rect x="47.4388%" y="133" width="0.0891%" height="15" fill="rgb(252,170,7)" fg:x="1065" fg:w="2"/><text x="47.6888%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;hyper::client::connect::http::HttpConnector&gt;&gt; (1 samples, 0.04%)</title><rect x="47.5278%" y="165" width="0.0445%" height="15" fill="rgb(231,118,14)" fg:x="1067" fg:w="1"/><text x="47.7778%" y="175.50"></text></g><g><title>bytes::bytes::Bytes::split_to (6 samples, 0.27%)</title><rect x="47.7506%" y="149" width="0.2673%" height="15" fill="rgb(238,83,0)" fg:x="1072" fg:w="6"/><text x="48.0006%" y="159.50"></text></g><g><title>bytes::bytes::promotable_even_clone (4 samples, 0.18%)</title><rect x="47.8396%" y="133" width="0.1782%" height="15" fill="rgb(221,39,39)" fg:x="1074" fg:w="4"/><text x="48.0896%" y="143.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (2 samples, 0.09%)</title><rect x="47.9287%" y="117" width="0.0891%" height="15" fill="rgb(222,119,46)" fg:x="1076" fg:w="2"/><text x="48.1787%" y="127.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="48.0178%" y="149" width="0.0445%" height="15" fill="rgb(222,165,49)" fg:x="1078" fg:w="1"/><text x="48.2678%" y="159.50"></text></g><g><title>http::uri::Uri::from_shared (14 samples, 0.62%)</title><rect x="47.5724%" y="165" width="0.6236%" height="15" fill="rgb(219,113,52)" fg:x="1068" fg:w="14"/><text x="47.8224%" y="175.50"></text></g><g><title>http::uri::authority::Authority::parse (3 samples, 0.13%)</title><rect x="48.0624%" y="149" width="0.1336%" height="15" fill="rgb(214,7,15)" fg:x="1079" fg:w="3"/><text x="48.3124%" y="159.50"></text></g><g><title>hyper::client::connect::http::HttpConnector::new (2 samples, 0.09%)</title><rect x="48.1960%" y="149" width="0.0891%" height="15" fill="rgb(235,32,4)" fg:x="1082" fg:w="2"/><text x="48.4460%" y="159.50"></text></g><g><title>__rust_alloc (2 samples, 0.09%)</title><rect x="48.1960%" y="133" width="0.0891%" height="15" fill="rgb(238,90,54)" fg:x="1082" fg:w="2"/><text x="48.4460%" y="143.50"></text></g><g><title>hyper::client::pool::Config::is_enabled (1 samples, 0.04%)</title><rect x="48.2851%" y="149" width="0.0445%" height="15" fill="rgb(213,208,19)" fg:x="1084" fg:w="1"/><text x="48.5351%" y="159.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="48.4187%" y="133" width="0.0445%" height="15" fill="rgb(233,156,4)" fg:x="1087" fg:w="1"/><text x="48.6687%" y="143.50"></text></g><g><title>hyper::client::pool::Config::is_enabled (2 samples, 0.09%)</title><rect x="48.4633%" y="133" width="0.0891%" height="15" fill="rgb(207,194,5)" fg:x="1088" fg:w="2"/><text x="48.7133%" y="143.50"></text></g><g><title>hyper::client::client::Builder::build_http (9 samples, 0.40%)</title><rect x="48.1960%" y="165" width="0.4009%" height="15" fill="rgb(206,111,30)" fg:x="1082" fg:w="9"/><text x="48.4460%" y="175.50"></text></g><g><title>hyper::client::pool::Pool&lt;T&gt;::new (6 samples, 0.27%)</title><rect x="48.3296%" y="149" width="0.2673%" height="15" fill="rgb(243,70,54)" fg:x="1085" fg:w="6"/><text x="48.5796%" y="159.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="48.5523%" y="133" width="0.0445%" height="15" fill="rgb(242,28,8)" fg:x="1090" fg:w="1"/><text x="48.8023%" y="143.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::get (2 samples, 0.09%)</title><rect x="48.5969%" y="165" width="0.0891%" height="15" fill="rgb(219,106,18)" fg:x="1091" fg:w="2"/><text x="48.8469%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.09%)</title><rect x="49.4878%" y="117" width="0.0891%" height="15" fill="rgb(244,222,10)" fg:x="1111" fg:w="2"/><text x="49.7378%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="49.5323%" y="101" width="0.0445%" height="15" fill="rgb(236,179,52)" fg:x="1112" fg:w="1"/><text x="49.7823%" y="111.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="49.5323%" y="85" width="0.0445%" height="15" fill="rgb(213,23,39)" fg:x="1112" fg:w="1"/><text x="49.7823%" y="95.50"></text></g><g><title>core::str::converts::from_utf8 (5 samples, 0.22%)</title><rect x="49.5768%" y="117" width="0.2227%" height="15" fill="rgb(238,48,10)" fg:x="1113" fg:w="5"/><text x="49.8268%" y="127.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (23 samples, 1.02%)</title><rect x="49.1314%" y="133" width="1.0245%" height="15" fill="rgb(251,196,23)" fg:x="1103" fg:w="23"/><text x="49.3814%" y="143.50"></text></g><g><title>serde_json::read::next_or_eof (8 samples, 0.36%)</title><rect x="49.7996%" y="117" width="0.3563%" height="15" fill="rgb(250,152,24)" fg:x="1118" fg:w="8"/><text x="50.0496%" y="127.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (5 samples, 0.22%)</title><rect x="49.9332%" y="101" width="0.2227%" height="15" fill="rgb(209,150,17)" fg:x="1121" fg:w="5"/><text x="50.1832%" y="111.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="50.1114%" y="85" width="0.0445%" height="15" fill="rgb(234,202,34)" fg:x="1125" fg:w="1"/><text x="50.3614%" y="95.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="50.5122%" y="101" width="0.0445%" height="15" fill="rgb(253,148,53)" fg:x="1134" fg:w="1"/><text x="50.7622%" y="111.50"></text></g><g><title>_int_free (6 samples, 0.27%)</title><rect x="50.5568%" y="85" width="0.2673%" height="15" fill="rgb(218,129,16)" fg:x="1135" fg:w="6"/><text x="50.8068%" y="95.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.71%)</title><rect x="50.1559%" y="133" width="0.7127%" height="15" fill="rgb(216,85,19)" fg:x="1126" fg:w="16"/><text x="50.4059%" y="143.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (14 samples, 0.62%)</title><rect x="50.2450%" y="117" width="0.6236%" height="15" fill="rgb(235,228,7)" fg:x="1128" fg:w="14"/><text x="50.4950%" y="127.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (7 samples, 0.31%)</title><rect x="50.5568%" y="101" width="0.3118%" height="15" fill="rgb(245,175,0)" fg:x="1135" fg:w="7"/><text x="50.8068%" y="111.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="50.8241%" y="85" width="0.0445%" height="15" fill="rgb(208,168,36)" fg:x="1141" fg:w="1"/><text x="51.0741%" y="95.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="51.5367%" y="85" width="0.0445%" height="15" fill="rgb(246,171,24)" fg:x="1157" fg:w="1"/><text x="51.7867%" y="95.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (1 samples, 0.04%)</title><rect x="51.5367%" y="69" width="0.0445%" height="15" fill="rgb(215,142,24)" fg:x="1157" fg:w="1"/><text x="51.7867%" y="79.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (4 samples, 0.18%)</title><rect x="51.4477%" y="101" width="0.1782%" height="15" fill="rgb(250,187,7)" fg:x="1155" fg:w="4"/><text x="51.6977%" y="111.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::next_char (1 samples, 0.04%)</title><rect x="51.5813%" y="85" width="0.0445%" height="15" fill="rgb(228,66,33)" fg:x="1158" fg:w="1"/><text x="51.8313%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_i64 (9 samples, 0.40%)</title><rect x="51.2695%" y="117" width="0.4009%" height="15" fill="rgb(234,215,21)" fg:x="1151" fg:w="9"/><text x="51.5195%" y="127.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (1 samples, 0.04%)</title><rect x="51.6258%" y="101" width="0.0445%" height="15" fill="rgb(222,191,20)" fg:x="1159" fg:w="1"/><text x="51.8758%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.31%)</title><rect x="51.8486%" y="85" width="0.3118%" height="15" fill="rgb(245,79,54)" fg:x="1164" fg:w="7"/><text x="52.0986%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.27%)</title><rect x="51.8931%" y="69" width="0.2673%" height="15" fill="rgb(240,10,37)" fg:x="1165" fg:w="6"/><text x="52.1431%" y="79.50"></text></g><g><title>realloc (6 samples, 0.27%)</title><rect x="51.8931%" y="53" width="0.2673%" height="15" fill="rgb(214,192,32)" fg:x="1165" fg:w="6"/><text x="52.1431%" y="63.50"></text></g><g><title>_int_realloc (3 samples, 0.13%)</title><rect x="52.0267%" y="37" width="0.1336%" height="15" fill="rgb(209,36,54)" fg:x="1168" fg:w="3"/><text x="52.2767%" y="47.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="52.2049%" y="53" width="0.0445%" height="15" fill="rgb(220,10,11)" fg:x="1172" fg:w="1"/><text x="52.4549%" y="63.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (12 samples, 0.53%)</title><rect x="51.7595%" y="101" width="0.5345%" height="15" fill="rgb(221,106,17)" fg:x="1162" fg:w="12"/><text x="52.0095%" y="111.50"></text></g><g><title>serde_json::read::next_or_eof (3 samples, 0.13%)</title><rect x="52.1604%" y="85" width="0.1336%" height="15" fill="rgb(251,142,44)" fg:x="1171" fg:w="3"/><text x="52.4104%" y="95.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (2 samples, 0.09%)</title><rect x="52.2049%" y="69" width="0.0891%" height="15" fill="rgb(238,13,15)" fg:x="1172" fg:w="2"/><text x="52.4549%" y="79.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="52.2494%" y="53" width="0.0445%" height="15" fill="rgb(208,107,27)" fg:x="1173" fg:w="1"/><text x="52.4994%" y="63.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (15 samples, 0.67%)</title><rect x="51.6704%" y="117" width="0.6682%" height="15" fill="rgb(205,136,37)" fg:x="1160" fg:w="15"/><text x="51.9204%" y="127.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="52.2940%" y="101" width="0.0445%" height="15" fill="rgb(250,205,27)" fg:x="1174" fg:w="1"/><text x="52.5440%" y="111.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (37 samples, 1.65%)</title><rect x="50.8686%" y="133" width="1.6481%" height="15" fill="rgb(210,80,43)" fg:x="1142" fg:w="37"/><text x="51.1186%" y="143.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (4 samples, 0.18%)</title><rect x="52.3385%" y="117" width="0.1782%" height="15" fill="rgb(247,160,36)" fg:x="1175" fg:w="4"/><text x="52.5885%" y="127.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="52.3831%" y="101" width="0.1336%" height="15" fill="rgb(234,13,49)" fg:x="1176" fg:w="3"/><text x="52.6331%" y="111.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (2 samples, 0.09%)</title><rect x="52.4276%" y="85" width="0.0891%" height="15" fill="rgb(234,122,0)" fg:x="1177" fg:w="2"/><text x="52.6776%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (88 samples, 3.92%)</title><rect x="48.6860%" y="149" width="3.9198%" height="15" fill="rgb(207,146,38)" fg:x="1093" fg:w="88"/><text x="48.9360%" y="159.50">&lt;&amp;mu..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (2 samples, 0.09%)</title><rect x="52.5167%" y="133" width="0.0891%" height="15" fill="rgb(207,177,25)" fg:x="1179" fg:w="2"/><text x="52.7667%" y="143.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="52.5612%" y="117" width="0.0445%" height="15" fill="rgb(211,178,42)" fg:x="1180" fg:w="1"/><text x="52.8112%" y="127.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (1 samples, 0.04%)</title><rect x="52.5612%" y="101" width="0.0445%" height="15" fill="rgb(230,69,54)" fg:x="1180" fg:w="1"/><text x="52.8112%" y="111.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="52.5612%" y="85" width="0.0445%" height="15" fill="rgb(214,135,41)" fg:x="1180" fg:w="1"/><text x="52.8112%" y="95.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="52.6058%" y="149" width="0.0445%" height="15" fill="rgb(237,67,25)" fg:x="1181" fg:w="1"/><text x="52.8558%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="52.6058%" y="133" width="0.0445%" height="15" fill="rgb(222,189,50)" fg:x="1181" fg:w="1"/><text x="52.8558%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="52.6503%" y="149" width="0.0445%" height="15" fill="rgb(245,148,34)" fg:x="1182" fg:w="1"/><text x="52.9003%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="52.6949%" y="133" width="0.0891%" height="15" fill="rgb(222,29,6)" fg:x="1183" fg:w="2"/><text x="52.9449%" y="143.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call::_{{closure}} (258 samples, 11.49%)</title><rect x="41.3363%" y="181" width="11.4922%" height="15" fill="rgb(221,189,43)" fg:x="928" fg:w="258"/><text x="41.5863%" y="191.50">&lt;F as axum::handl..</text></g><g><title>serde_json::de::from_reader (93 samples, 4.14%)</title><rect x="48.6860%" y="165" width="4.1425%" height="15" fill="rgb(207,36,27)" fg:x="1093" fg:w="93"/><text x="48.9360%" y="175.50">serde..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;bytes::buf::reader::Reader&lt;hyper::common::buf::BufList&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt;&gt; (3 samples, 0.13%)</title><rect x="52.6949%" y="149" width="0.1336%" height="15" fill="rgb(217,90,24)" fg:x="1183" fg:w="3"/><text x="52.9449%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="52.7840%" y="133" width="0.0445%" height="15" fill="rgb(224,66,35)" fg:x="1185" fg:w="1"/><text x="53.0340%" y="143.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (272 samples, 12.12%)</title><rect x="40.7572%" y="229" width="12.1158%" height="15" fill="rgb(221,13,50)" fg:x="915" fg:w="272"/><text x="41.0072%" y="239.50">&lt;tower::util::map_..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (270 samples, 12.03%)</title><rect x="40.8463%" y="213" width="12.0267%" height="15" fill="rgb(236,68,49)" fg:x="917" fg:w="270"/><text x="41.0963%" y="223.50">&lt;futures_util::fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (263 samples, 11.71%)</title><rect x="41.1581%" y="197" width="11.7149%" height="15" fill="rgb(229,146,28)" fg:x="924" fg:w="263"/><text x="41.4081%" y="207.50">&lt;futures_util::fu..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;rust_axum::io_call as axum::handler::Handler&lt;((),),()&gt;&gt;::call::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="52.8285%" y="181" width="0.0445%" height="15" fill="rgb(225,31,38)" fg:x="1186" fg:w="1"/><text x="53.0785%" y="191.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="52.8731%" y="229" width="0.0445%" height="15" fill="rgb(250,208,3)" fg:x="1187" fg:w="1"/><text x="53.1231%" y="239.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="52.9176%" y="229" width="0.0445%" height="15" fill="rgb(246,54,23)" fg:x="1188" fg:w="1"/><text x="53.1676%" y="239.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (325 samples, 14.48%)</title><rect x="38.5746%" y="245" width="14.4766%" height="15" fill="rgb(243,76,11)" fg:x="866" fg:w="325"/><text x="38.8246%" y="255.50">&lt;tower::util::oneshot:..</text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="52.9621%" y="229" width="0.0891%" height="15" fill="rgb(245,21,50)" fg:x="1189" fg:w="2"/><text x="53.2121%" y="239.50"></text></g><g><title>_ZN4core3ptr603drop_in_place$LT$tower..util..map_response..MapResponseFuture$LT$axum..handler..future..IntoServiceFuture$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$dyn$u20$core..future..future..Future$u2b$Output$u20$$u3d$$u20$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$u2b$core..marker..Send$GT$$GT$$GT$$C$$LT$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$u20$as$u20$axum_core..response..into_response..IntoResponse$GT$..into_response$GT$$GT$17hd1ed69fc947b5c9aE (2 samples, 0.09%)</title><rect x="52.9621%" y="213" width="0.0891%" height="15" fill="rgb(228,9,43)" fg:x="1189" fg:w="2"/><text x="53.2121%" y="223.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="53.0512%" y="245" width="0.0891%" height="15" fill="rgb(208,100,47)" fg:x="1191" fg:w="2"/><text x="53.3012%" y="255.50"></text></g><g><title>axum::routing::route::set_allow_header (1 samples, 0.04%)</title><rect x="53.1403%" y="245" width="0.0445%" height="15" fill="rgb(232,26,8)" fg:x="1193" fg:w="1"/><text x="53.3903%" y="255.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="53.3630%" y="213" width="0.0445%" height="15" fill="rgb(216,166,38)" fg:x="1198" fg:w="1"/><text x="53.6130%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.04%)</title><rect x="53.3630%" y="197" width="0.0445%" height="15" fill="rgb(251,202,51)" fg:x="1198" fg:w="1"/><text x="53.6130%" y="207.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (4 samples, 0.18%)</title><rect x="53.2739%" y="229" width="0.1782%" height="15" fill="rgb(254,216,34)" fg:x="1196" fg:w="4"/><text x="53.5239%" y="239.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="53.4076%" y="213" width="0.0445%" height="15" fill="rgb(251,32,27)" fg:x="1199" fg:w="1"/><text x="53.6576%" y="223.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::contains_key (4 samples, 0.18%)</title><rect x="53.4521%" y="229" width="0.1782%" height="15" fill="rgb(208,127,28)" fg:x="1200" fg:w="4"/><text x="53.7021%" y="239.50"></text></g><g><title>http::header::map::hash_elem_using (3 samples, 0.13%)</title><rect x="53.4967%" y="213" width="0.1336%" height="15" fill="rgb(224,137,22)" fg:x="1201" fg:w="3"/><text x="53.7467%" y="223.50"></text></g><g><title>axum::routing::route::set_content_length (16 samples, 0.71%)</title><rect x="53.1849%" y="245" width="0.7127%" height="15" fill="rgb(254,70,32)" fg:x="1194" fg:w="16"/><text x="53.4349%" y="255.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (6 samples, 0.27%)</title><rect x="53.6303%" y="229" width="0.2673%" height="15" fill="rgb(229,75,37)" fg:x="1204" fg:w="6"/><text x="53.8803%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::route::RouteFuture&lt;hyper::body::body::Body,core::convert::Infallible&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="53.8976%" y="245" width="0.0445%" height="15" fill="rgb(252,64,23)" fg:x="1210" fg:w="1"/><text x="54.1476%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body::combinators::map_err::MapErr&lt;http_body::full::Full&lt;bytes::bytes::Bytes&gt;,axum_core::error::Error::new&lt;core::convert::Infallible&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="53.9421%" y="245" width="0.0445%" height="15" fill="rgb(232,162,48)" fg:x="1211" fg:w="1"/><text x="54.1921%" y="255.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (4 samples, 0.18%)</title><rect x="53.9866%" y="245" width="0.1782%" height="15" fill="rgb(246,160,12)" fg:x="1212" fg:w="4"/><text x="54.2366%" y="255.50"></text></g><g><title>hyper::body::body::Body::new (3 samples, 0.13%)</title><rect x="54.1648%" y="245" width="0.1336%" height="15" fill="rgb(247,166,0)" fg:x="1216" fg:w="3"/><text x="54.4148%" y="255.50"></text></g><g><title>hyper::proto::h1::Wants::contains (1 samples, 0.04%)</title><rect x="54.2984%" y="245" width="0.0445%" height="15" fill="rgb(249,219,21)" fg:x="1219" fg:w="1"/><text x="54.5484%" y="255.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (1 samples, 0.04%)</title><rect x="54.3430%" y="229" width="0.0445%" height="15" fill="rgb(205,209,3)" fg:x="1220" fg:w="1"/><text x="54.5930%" y="239.50"></text></g><g><title>hyper::proto::h1::conn::State::wants_keep_alive (1 samples, 0.04%)</title><rect x="54.3875%" y="229" width="0.0445%" height="15" fill="rgb(243,44,1)" fg:x="1221" fg:w="1"/><text x="54.6375%" y="239.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="55.1002%" y="197" width="0.0891%" height="15" fill="rgb(206,159,16)" fg:x="1237" fg:w="2"/><text x="55.3502%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="55.1893%" y="197" width="0.0445%" height="15" fill="rgb(244,77,30)" fg:x="1239" fg:w="1"/><text x="55.4393%" y="207.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="55.2784%" y="181" width="0.0445%" height="15" fill="rgb(218,69,12)" fg:x="1241" fg:w="1"/><text x="55.5284%" y="191.50"></text></g><g><title>bytes::bytes::promotable_even_drop (4 samples, 0.18%)</title><rect x="55.2339%" y="197" width="0.1782%" height="15" fill="rgb(212,87,7)" fg:x="1240" fg:w="4"/><text x="55.4839%" y="207.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="55.3229%" y="181" width="0.0891%" height="15" fill="rgb(245,114,25)" fg:x="1242" fg:w="2"/><text x="55.5729%" y="191.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (26 samples, 1.16%)</title><rect x="54.4766%" y="213" width="1.1581%" height="15" fill="rgb(210,61,42)" fg:x="1223" fg:w="26"/><text x="54.7266%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.22%)</title><rect x="55.4120%" y="197" width="0.2227%" height="15" fill="rgb(211,52,33)" fg:x="1244" fg:w="5"/><text x="55.6620%" y="207.50"></text></g><g><title>hyper::common::date::CACHED::__getit (4 samples, 0.18%)</title><rect x="55.4566%" y="181" width="0.1782%" height="15" fill="rgb(234,58,33)" fg:x="1245" fg:w="4"/><text x="55.7066%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.04%)</title><rect x="55.6347%" y="213" width="0.0445%" height="15" fill="rgb(220,115,36)" fg:x="1249" fg:w="1"/><text x="55.8847%" y="223.50"></text></g><g><title>tracing_core::metadata::Metadata::name (1 samples, 0.04%)</title><rect x="55.6347%" y="197" width="0.0445%" height="15" fill="rgb(243,153,54)" fg:x="1249" fg:w="1"/><text x="55.8847%" y="207.50"></text></g><g><title>tracing::span::Span::record_all (2 samples, 0.09%)</title><rect x="55.6793%" y="213" width="0.0891%" height="15" fill="rgb(251,47,18)" fg:x="1250" fg:w="2"/><text x="55.9293%" y="223.50"></text></g><g><title>tracing_core::span::Record::new (1 samples, 0.04%)</title><rect x="55.7238%" y="197" width="0.0445%" height="15" fill="rgb(242,102,42)" fg:x="1251" fg:w="1"/><text x="55.9738%" y="207.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (33 samples, 1.47%)</title><rect x="54.3430%" y="245" width="1.4699%" height="15" fill="rgb(234,31,38)" fg:x="1220" fg:w="33"/><text x="54.5930%" y="255.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (31 samples, 1.38%)</title><rect x="54.4321%" y="229" width="1.3808%" height="15" fill="rgb(221,117,51)" fg:x="1222" fg:w="31"/><text x="54.6821%" y="239.50"></text></g><g><title>tracing_core::metadata::Metadata::fields (1 samples, 0.04%)</title><rect x="55.7684%" y="213" width="0.0445%" height="15" fill="rgb(212,20,18)" fg:x="1252" fg:w="1"/><text x="56.0184%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (2 samples, 0.09%)</title><rect x="56.3920%" y="213" width="0.0891%" height="15" fill="rgb(245,133,36)" fg:x="1266" fg:w="2"/><text x="56.6420%" y="223.50"></text></g><g><title>hyper::proto::h1::conn::KA::idle (1 samples, 0.04%)</title><rect x="56.4811%" y="213" width="0.0445%" height="15" fill="rgb(212,6,19)" fg:x="1268" fg:w="1"/><text x="56.7311%" y="223.50"></text></g><g><title>hyper::proto::h1::conn::KA::status (2 samples, 0.09%)</title><rect x="56.5256%" y="213" width="0.0891%" height="15" fill="rgb(218,1,36)" fg:x="1269" fg:w="2"/><text x="56.7756%" y="223.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (11 samples, 0.49%)</title><rect x="56.1693%" y="229" width="0.4900%" height="15" fill="rgb(246,84,54)" fg:x="1261" fg:w="11"/><text x="56.4193%" y="239.50"></text></g><g><title>hyper::proto::h1::conn::State::is_idle (1 samples, 0.04%)</title><rect x="56.6147%" y="213" width="0.0445%" height="15" fill="rgb(242,110,6)" fg:x="1271" fg:w="1"/><text x="56.8647%" y="223.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="56.9265%" y="213" width="0.0445%" height="15" fill="rgb(214,47,5)" fg:x="1278" fg:w="1"/><text x="57.1765%" y="223.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.09%)</title><rect x="57.3274%" y="133" width="0.0891%" height="15" fill="rgb(218,159,25)" fg:x="1287" fg:w="2"/><text x="57.5774%" y="143.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (10 samples, 0.45%)</title><rect x="57.0156%" y="181" width="0.4454%" height="15" fill="rgb(215,211,28)" fg:x="1280" fg:w="10"/><text x="57.2656%" y="191.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (9 samples, 0.40%)</title><rect x="57.0601%" y="165" width="0.4009%" height="15" fill="rgb(238,59,32)" fg:x="1281" fg:w="9"/><text x="57.3101%" y="175.50"></text></g><g><title>__libc_send (7 samples, 0.31%)</title><rect x="57.1492%" y="149" width="0.3118%" height="15" fill="rgb(226,82,3)" fg:x="1283" fg:w="7"/><text x="57.3992%" y="159.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="57.4165%" y="133" width="0.0445%" height="15" fill="rgb(240,164,32)" fg:x="1289" fg:w="1"/><text x="57.6665%" y="143.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (15 samples, 0.67%)</title><rect x="56.9710%" y="213" width="0.6682%" height="15" fill="rgb(232,46,7)" fg:x="1279" fg:w="15"/><text x="57.2210%" y="223.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (15 samples, 0.67%)</title><rect x="56.9710%" y="197" width="0.6682%" height="15" fill="rgb(229,129,53)" fg:x="1279" fg:w="15"/><text x="57.2210%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (4 samples, 0.18%)</title><rect x="57.4610%" y="181" width="0.1782%" height="15" fill="rgb(234,188,29)" fg:x="1290" fg:w="4"/><text x="57.7110%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.04%)</title><rect x="57.5947%" y="165" width="0.0445%" height="15" fill="rgb(246,141,4)" fg:x="1293" fg:w="1"/><text x="57.8447%" y="175.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (42 samples, 1.87%)</title><rect x="55.8129%" y="245" width="1.8708%" height="15" fill="rgb(229,23,39)" fg:x="1253" fg:w="42"/><text x="56.0629%" y="255.50">h..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (23 samples, 1.02%)</title><rect x="56.6592%" y="229" width="1.0245%" height="15" fill="rgb(206,12,3)" fg:x="1272" fg:w="23"/><text x="56.9092%" y="239.50"></text></g><g><title>hyper::proto::h1::io::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;::reset (1 samples, 0.04%)</title><rect x="57.6392%" y="213" width="0.0445%" height="15" fill="rgb(252,226,20)" fg:x="1294" fg:w="1"/><text x="57.8892%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (1 samples, 0.04%)</title><rect x="57.8619%" y="229" width="0.0445%" height="15" fill="rgb(216,123,35)" fg:x="1299" fg:w="1"/><text x="58.1119%" y="239.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="57.9065%" y="229" width="0.0891%" height="15" fill="rgb(212,68,40)" fg:x="1300" fg:w="2"/><text x="58.1565%" y="239.50"></text></g><g><title>__memcpy_ssse3 (7 samples, 0.31%)</title><rect x="58.2183%" y="213" width="0.3118%" height="15" fill="rgb(254,125,32)" fg:x="1307" fg:w="7"/><text x="58.4683%" y="223.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::next (1 samples, 0.04%)</title><rect x="58.6192%" y="197" width="0.0445%" height="15" fill="rgb(253,97,22)" fg:x="1316" fg:w="1"/><text x="58.8692%" y="207.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::record (1 samples, 0.04%)</title><rect x="58.6637%" y="197" width="0.0445%" height="15" fill="rgb(241,101,14)" fg:x="1317" fg:w="1"/><text x="58.9137%" y="207.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (6 samples, 0.27%)</title><rect x="58.7528%" y="181" width="0.2673%" height="15" fill="rgb(238,103,29)" fg:x="1319" fg:w="6"/><text x="59.0028%" y="191.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.22%)</title><rect x="58.7973%" y="165" width="0.2227%" height="15" fill="rgb(233,195,47)" fg:x="1320" fg:w="5"/><text x="59.0473%" y="175.50"></text></g><g><title>__libc_recv (5 samples, 0.22%)</title><rect x="58.7973%" y="149" width="0.2227%" height="15" fill="rgb(246,218,30)" fg:x="1320" fg:w="5"/><text x="59.0473%" y="159.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (13 samples, 0.58%)</title><rect x="58.5301%" y="213" width="0.5791%" height="15" fill="rgb(219,145,47)" fg:x="1314" fg:w="13"/><text x="58.7801%" y="223.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (9 samples, 0.40%)</title><rect x="58.7082%" y="197" width="0.4009%" height="15" fill="rgb(243,12,26)" fg:x="1318" fg:w="9"/><text x="58.9582%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.09%)</title><rect x="59.0200%" y="181" width="0.0891%" height="15" fill="rgb(214,87,16)" fg:x="1325" fg:w="2"/><text x="59.2700%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.04%)</title><rect x="59.0646%" y="165" width="0.0445%" height="15" fill="rgb(208,99,42)" fg:x="1326" fg:w="1"/><text x="59.3146%" y="175.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::max (2 samples, 0.09%)</title><rect x="59.1091%" y="213" width="0.0891%" height="15" fill="rgb(253,99,2)" fg:x="1327" fg:w="2"/><text x="59.3591%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (3 samples, 0.13%)</title><rect x="59.3764%" y="197" width="0.1336%" height="15" fill="rgb(220,168,23)" fg:x="1333" fg:w="3"/><text x="59.6264%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (3 samples, 0.13%)</title><rect x="59.5100%" y="197" width="0.1336%" height="15" fill="rgb(242,38,24)" fg:x="1336" fg:w="3"/><text x="59.7600%" y="207.50"></text></g><g><title>tracing::span::Span::log (1 samples, 0.04%)</title><rect x="59.5991%" y="181" width="0.0445%" height="15" fill="rgb(225,182,9)" fg:x="1338" fg:w="1"/><text x="59.8491%" y="191.50"></text></g><g><title>tracing_core::metadata::Metadata::level (1 samples, 0.04%)</title><rect x="59.5991%" y="165" width="0.0445%" height="15" fill="rgb(243,178,37)" fg:x="1338" fg:w="1"/><text x="59.8491%" y="175.50"></text></g><g><title>tracing_core::metadata::Metadata::level (1 samples, 0.04%)</title><rect x="59.7327%" y="181" width="0.0445%" height="15" fill="rgb(232,139,19)" fg:x="1341" fg:w="1"/><text x="59.9827%" y="191.50"></text></g><g><title>tracing::span::Span::record_all (4 samples, 0.18%)</title><rect x="59.6437%" y="197" width="0.1782%" height="15" fill="rgb(225,201,24)" fg:x="1339" fg:w="4"/><text x="59.8937%" y="207.50"></text></g><g><title>tracing_core::span::Record::new (1 samples, 0.04%)</title><rect x="59.7773%" y="181" width="0.0445%" height="15" fill="rgb(221,47,46)" fg:x="1342" fg:w="1"/><text x="60.0273%" y="191.50"></text></g><g><title>tracing_core::metadata::Metadata::fields (1 samples, 0.04%)</title><rect x="59.8218%" y="197" width="0.0445%" height="15" fill="rgb(249,23,13)" fg:x="1343" fg:w="1"/><text x="60.0718%" y="207.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (50 samples, 2.23%)</title><rect x="57.6837%" y="245" width="2.2272%" height="15" fill="rgb(219,9,5)" fg:x="1295" fg:w="50"/><text x="57.9337%" y="255.50">h..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (43 samples, 1.92%)</title><rect x="57.9955%" y="229" width="1.9154%" height="15" fill="rgb(254,171,16)" fg:x="1302" fg:w="43"/><text x="58.2455%" y="239.50">h..</text></g><g><title>hyper::proto::h1::role::parse_headers (16 samples, 0.71%)</title><rect x="59.1982%" y="213" width="0.7127%" height="15" fill="rgb(230,171,20)" fg:x="1329" fg:w="16"/><text x="59.4482%" y="223.50"></text></g><g><title>tracing_core::metadata::Metadata::name (1 samples, 0.04%)</title><rect x="59.8664%" y="197" width="0.0445%" height="15" fill="rgb(210,71,41)" fg:x="1344" fg:w="1"/><text x="60.1164%" y="207.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (11 samples, 0.49%)</title><rect x="60.4009%" y="197" width="0.4900%" height="15" fill="rgb(206,173,20)" fg:x="1356" fg:w="11"/><text x="60.6509%" y="207.50"></text></g><g><title>malloc (10 samples, 0.45%)</title><rect x="60.4454%" y="181" width="0.4454%" height="15" fill="rgb(233,88,34)" fg:x="1357" fg:w="10"/><text x="60.6954%" y="191.50"></text></g><g><title>_int_malloc (9 samples, 0.40%)</title><rect x="60.4900%" y="165" width="0.4009%" height="15" fill="rgb(223,209,46)" fg:x="1358" fg:w="9"/><text x="60.7400%" y="175.50"></text></g><g><title>malloc_consolidate (3 samples, 0.13%)</title><rect x="60.7572%" y="149" width="0.1336%" height="15" fill="rgb(250,43,18)" fg:x="1364" fg:w="3"/><text x="61.0072%" y="159.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::next (3 samples, 0.13%)</title><rect x="60.8909%" y="197" width="0.1336%" height="15" fill="rgb(208,13,10)" fg:x="1367" fg:w="3"/><text x="61.1409%" y="207.50"></text></g><g><title>hyper::server::tcp::addr_stream::_::&lt;impl hyper::server::tcp::addr_stream::AddrStream&gt;::project (1 samples, 0.04%)</title><rect x="61.0245%" y="197" width="0.0445%" height="15" fill="rgb(212,200,36)" fg:x="1370" fg:w="1"/><text x="61.2745%" y="207.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (31 samples, 1.38%)</title><rect x="60.0891%" y="229" width="1.3808%" height="15" fill="rgb(225,90,30)" fg:x="1349" fg:w="31"/><text x="60.3391%" y="239.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (27 samples, 1.20%)</title><rect x="60.2673%" y="213" width="1.2027%" height="15" fill="rgb(236,182,39)" fg:x="1353" fg:w="27"/><text x="60.5173%" y="223.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (9 samples, 0.40%)</title><rect x="61.0690%" y="197" width="0.4009%" height="15" fill="rgb(212,144,35)" fg:x="1371" fg:w="9"/><text x="61.3190%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (8 samples, 0.36%)</title><rect x="61.1136%" y="181" width="0.3563%" height="15" fill="rgb(228,63,44)" fg:x="1372" fg:w="8"/><text x="61.3636%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.22%)</title><rect x="61.2472%" y="165" width="0.2227%" height="15" fill="rgb(228,109,6)" fg:x="1375" fg:w="5"/><text x="61.4972%" y="175.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (39 samples, 1.74%)</title><rect x="59.9109%" y="245" width="1.7372%" height="15" fill="rgb(238,117,24)" fg:x="1345" fg:w="39"/><text x="60.1609%" y="255.50"></text></g><g><title>hyper::proto::h1::conn::State::is_read_closed (4 samples, 0.18%)</title><rect x="61.4699%" y="229" width="0.1782%" height="15" fill="rgb(242,26,26)" fg:x="1380" fg:w="4"/><text x="61.7199%" y="239.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="62.2272%" y="213" width="0.0445%" height="15" fill="rgb(221,92,48)" fg:x="1397" fg:w="1"/><text x="62.4772%" y="223.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="62.2717%" y="213" width="0.0445%" height="15" fill="rgb(209,209,32)" fg:x="1398" fg:w="1"/><text x="62.5217%" y="223.50"></text></g><g><title>bytes::bytes::shared_drop (3 samples, 0.13%)</title><rect x="62.3163%" y="213" width="0.1336%" height="15" fill="rgb(221,70,22)" fg:x="1399" fg:w="3"/><text x="62.5663%" y="223.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="62.4053%" y="197" width="0.0445%" height="15" fill="rgb(248,145,5)" fg:x="1401" fg:w="1"/><text x="62.6553%" y="207.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="62.4499%" y="213" width="0.0445%" height="15" fill="rgb(226,116,26)" fg:x="1402" fg:w="1"/><text x="62.6999%" y="223.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode_and_end (24 samples, 1.07%)</title><rect x="61.6481%" y="245" width="1.0690%" height="15" fill="rgb(244,5,17)" fg:x="1384" fg:w="24"/><text x="61.8981%" y="255.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (19 samples, 0.85%)</title><rect x="61.8708%" y="229" width="0.8463%" height="15" fill="rgb(252,159,33)" fg:x="1389" fg:w="19"/><text x="62.1208%" y="239.50"></text></g><g><title>hyper::proto::h1::io::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;::maybe_unshift (5 samples, 0.22%)</title><rect x="62.4944%" y="213" width="0.2227%" height="15" fill="rgb(206,71,0)" fg:x="1403" fg:w="5"/><text x="62.7444%" y="223.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (710 samples, 31.63%)</title><rect x="31.1359%" y="293" width="31.6258%" height="15" fill="rgb(233,118,54)" fg:x="699" fg:w="710"/><text x="31.3859%" y="303.50">&lt;hyper::server::conn::upgrades::UpgradeableConnecti..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (708 samples, 31.54%)</title><rect x="31.2249%" y="277" width="31.5367%" height="15" fill="rgb(234,83,48)" fg:x="701" fg:w="708"/><text x="31.4749%" y="287.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::p..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (671 samples, 29.89%)</title><rect x="32.8731%" y="261" width="29.8886%" height="15" fill="rgb(228,3,54)" fg:x="738" fg:w="671"/><text x="33.1231%" y="271.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;..</text></g><g><title>hyper::proto::h1::encode::Encoder::is_eof (1 samples, 0.04%)</title><rect x="62.7171%" y="245" width="0.0445%" height="15" fill="rgb(226,155,13)" fg:x="1408" fg:w="1"/><text x="62.9671%" y="255.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (9 samples, 0.40%)</title><rect x="62.7617%" y="293" width="0.4009%" height="15" fill="rgb(241,28,37)" fg:x="1409" fg:w="9"/><text x="63.0117%" y="303.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (6 samples, 0.27%)</title><rect x="63.1626%" y="293" width="0.2673%" height="15" fill="rgb(233,93,10)" fg:x="1418" fg:w="6"/><text x="63.4126%" y="303.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (728 samples, 32.43%)</title><rect x="31.0468%" y="309" width="32.4276%" height="15" fill="rgb(225,113,19)" fg:x="697" fg:w="728"/><text x="31.2968%" y="319.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_m..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.04%)</title><rect x="63.4298%" y="293" width="0.0445%" height="15" fill="rgb(241,2,18)" fg:x="1424" fg:w="1"/><text x="63.6798%" y="303.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,245 samples, 55.46%)</title><rect x="8.1069%" y="325" width="55.4566%" height="15" fill="rgb(228,207,21)" fg:x="182" fg:w="1245"/><text x="8.3569%" y="335.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.09%)</title><rect x="63.4744%" y="309" width="0.0891%" height="15" fill="rgb(213,211,35)" fg:x="1425" fg:w="2"/><text x="63.7244%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (3 samples, 0.13%)</title><rect x="63.5635%" y="325" width="0.1336%" height="15" fill="rgb(209,83,10)" fg:x="1427" fg:w="3"/><text x="63.8135%" y="335.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="63.6526%" y="309" width="0.0445%" height="15" fill="rgb(209,164,1)" fg:x="1429" fg:w="1"/><text x="63.9026%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="63.9198%" y="309" width="0.0445%" height="15" fill="rgb(213,184,43)" fg:x="1435" fg:w="1"/><text x="64.1698%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="63.9644%" y="309" width="0.0445%" height="15" fill="rgb(231,61,34)" fg:x="1436" fg:w="1"/><text x="64.2144%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (2 samples, 0.09%)</title><rect x="64.0089%" y="309" width="0.0891%" height="15" fill="rgb(235,75,3)" fg:x="1437" fg:w="2"/><text x="64.2589%" y="319.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="64.0535%" y="293" width="0.0445%" height="15" fill="rgb(220,106,47)" fg:x="1438" fg:w="1"/><text x="64.3035%" y="303.50"></text></g><g><title>_ZN4core3ptr676drop_in_place$LT$tokio..runtime..task..core..CoreStage$LT$futures_util..future..future..Map$LT$futures_util..future..try_future..MapErr$LT$hyper..client..conn..Connection$LT$tokio..net..tcp..stream..TcpStream$C$hyper..body..body..Body$GT$$C$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$GT$17hd7d5d5e40101185cE.llvm.8840561993816805872 (1 samples, 0.04%)</title><rect x="64.0980%" y="293" width="0.0445%" height="15" fill="rgb(210,196,33)" fg:x="1439" fg:w="1"/><text x="64.3480%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.09%)</title><rect x="64.0980%" y="309" width="0.0891%" height="15" fill="rgb(229,154,42)" fg:x="1439" fg:w="2"/><text x="64.3480%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="64.1425%" y="293" width="0.0445%" height="15" fill="rgb(228,114,26)" fg:x="1440" fg:w="1"/><text x="64.3925%" y="303.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (6 samples, 0.27%)</title><rect x="64.1871%" y="309" width="0.2673%" height="15" fill="rgb(208,144,1)" fg:x="1441" fg:w="6"/><text x="64.4371%" y="319.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (2 samples, 0.09%)</title><rect x="64.4543%" y="309" width="0.0891%" height="15" fill="rgb(239,112,37)" fg:x="1447" fg:w="2"/><text x="64.7043%" y="319.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (1 samples, 0.04%)</title><rect x="64.5434%" y="309" width="0.0445%" height="15" fill="rgb(210,96,50)" fg:x="1449" fg:w="1"/><text x="64.7934%" y="319.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (23 samples, 1.02%)</title><rect x="63.6971%" y="325" width="1.0245%" height="15" fill="rgb(222,178,2)" fg:x="1430" fg:w="23"/><text x="63.9471%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (3 samples, 0.13%)</title><rect x="64.5880%" y="309" width="0.1336%" height="15" fill="rgb(226,74,18)" fg:x="1450" fg:w="3"/><text x="64.8380%" y="319.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (5 samples, 0.22%)</title><rect x="64.7216%" y="325" width="0.2227%" height="15" fill="rgb(225,67,54)" fg:x="1453" fg:w="5"/><text x="64.9716%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (6 samples, 0.27%)</title><rect x="64.9443%" y="325" width="0.2673%" height="15" fill="rgb(251,92,32)" fg:x="1458" fg:w="6"/><text x="65.1943%" y="335.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,315 samples, 58.57%)</title><rect x="6.6815%" y="341" width="58.5746%" height="15" fill="rgb(228,149,22)" fg:x="150" fg:w="1315"/><text x="6.9315%" y="351.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::waker::raw_waker (1 samples, 0.04%)</title><rect x="65.2116%" y="325" width="0.0445%" height="15" fill="rgb(243,54,13)" fg:x="1464" fg:w="1"/><text x="65.4616%" y="335.50"></text></g><g><title>__clone (1,378 samples, 61.38%)</title><rect x="3.9644%" y="549" width="61.3808%" height="15" fill="rgb(243,180,28)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="559.50">__clone</text></g><g><title>start_thread (1,378 samples, 61.38%)</title><rect x="3.9644%" y="533" width="61.3808%" height="15" fill="rgb(208,167,24)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="543.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,378 samples, 61.38%)</title><rect x="3.9644%" y="517" width="61.3808%" height="15" fill="rgb(245,73,45)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="527.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,378 samples, 61.38%)</title><rect x="3.9644%" y="501" width="61.3808%" height="15" fill="rgb(237,203,48)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="511.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,378 samples, 61.38%)</title><rect x="3.9644%" y="485" width="61.3808%" height="15" fill="rgb(211,197,16)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="495.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,378 samples, 61.38%)</title><rect x="3.9644%" y="469" width="61.3808%" height="15" fill="rgb(243,99,51)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="479.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,378 samples, 61.38%)</title><rect x="3.9644%" y="453" width="61.3808%" height="15" fill="rgb(215,123,29)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="463.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,378 samples, 61.38%)</title><rect x="3.9644%" y="437" width="61.3808%" height="15" fill="rgb(239,186,37)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="447.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,378 samples, 61.38%)</title><rect x="3.9644%" y="421" width="61.3808%" height="15" fill="rgb(252,136,39)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="431.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,378 samples, 61.38%)</title><rect x="3.9644%" y="405" width="61.3808%" height="15" fill="rgb(223,213,32)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="415.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,378 samples, 61.38%)</title><rect x="3.9644%" y="389" width="61.3808%" height="15" fill="rgb(233,115,5)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="399.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,378 samples, 61.38%)</title><rect x="3.9644%" y="373" width="61.3808%" height="15" fill="rgb(207,226,44)" fg:x="89" fg:w="1378"/><text x="4.2144%" y="383.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,338 samples, 59.60%)</title><rect x="5.7461%" y="357" width="59.5991%" height="15" fill="rgb(208,126,0)" fg:x="129" fg:w="1338"/><text x="5.9961%" y="367.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.09%)</title><rect x="65.2561%" y="341" width="0.0891%" height="15" fill="rgb(244,66,21)" fg:x="1465" fg:w="2"/><text x="65.5061%" y="351.50"></text></g><g><title>bytes::bytes::Bytes::slice (4 samples, 0.18%)</title><rect x="65.3452%" y="213" width="0.1782%" height="15" fill="rgb(222,97,12)" fg:x="1467" fg:w="4"/><text x="65.5952%" y="223.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (3 samples, 0.13%)</title><rect x="65.3898%" y="197" width="0.1336%" height="15" fill="rgb(219,213,19)" fg:x="1468" fg:w="3"/><text x="65.6398%" y="207.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="65.5234%" y="197" width="0.0445%" height="15" fill="rgb(252,169,30)" fg:x="1471" fg:w="1"/><text x="65.7734%" y="207.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.04%)</title><rect x="65.5679%" y="197" width="0.0445%" height="15" fill="rgb(206,32,51)" fg:x="1472" fg:w="1"/><text x="65.8179%" y="207.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (3 samples, 0.13%)</title><rect x="65.5234%" y="213" width="0.1336%" height="15" fill="rgb(250,172,42)" fg:x="1471" fg:w="3"/><text x="65.7734%" y="223.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.6125%" y="197" width="0.0445%" height="15" fill="rgb(209,34,43)" fg:x="1473" fg:w="1"/><text x="65.8625%" y="207.50"></text></g><g><title>httparse::parse_code (1 samples, 0.04%)</title><rect x="65.7016%" y="181" width="0.0445%" height="15" fill="rgb(223,11,35)" fg:x="1475" fg:w="1"/><text x="65.9516%" y="191.50"></text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (4 samples, 0.18%)</title><rect x="65.6570%" y="213" width="0.1782%" height="15" fill="rgb(251,219,26)" fg:x="1474" fg:w="4"/><text x="65.9070%" y="223.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (4 samples, 0.18%)</title><rect x="65.6570%" y="197" width="0.1782%" height="15" fill="rgb(231,119,3)" fg:x="1474" fg:w="4"/><text x="65.9070%" y="207.50"></text></g><g><title>httparse::parse_reason (2 samples, 0.09%)</title><rect x="65.7461%" y="181" width="0.0891%" height="15" fill="rgb(216,97,11)" fg:x="1476" fg:w="2"/><text x="65.9961%" y="191.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (2 samples, 0.09%)</title><rect x="65.9243%" y="197" width="0.0891%" height="15" fill="rgb(223,59,9)" fg:x="1480" fg:w="2"/><text x="66.1743%" y="207.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="66.0134%" y="197" width="0.0445%" height="15" fill="rgb(233,93,31)" fg:x="1482" fg:w="1"/><text x="66.2634%" y="207.50"></text></g><g><title>hyper::headers::connection_has (6 samples, 0.27%)</title><rect x="65.8352%" y="213" width="0.2673%" height="15" fill="rgb(239,81,33)" fg:x="1478" fg:w="6"/><text x="66.0852%" y="223.50"></text></g><g><title>http::header::value::HeaderValue::to_str (1 samples, 0.04%)</title><rect x="66.0579%" y="197" width="0.0445%" height="15" fill="rgb(213,120,34)" fg:x="1483" fg:w="1"/><text x="66.3079%" y="207.50"></text></g><g><title>&lt;http::header::map::ValueIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.1915%" y="197" width="0.0445%" height="15" fill="rgb(243,49,53)" fg:x="1486" fg:w="1"/><text x="66.4415%" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (21 samples, 0.94%)</title><rect x="65.3452%" y="549" width="0.9354%" height="15" fill="rgb(247,216,33)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 0.94%)</title><rect x="65.3452%" y="533" width="0.9354%" height="15" fill="rgb(226,26,14)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="543.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (21 samples, 0.94%)</title><rect x="65.3452%" y="517" width="0.9354%" height="15" fill="rgb(215,49,53)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="501" width="0.9354%" height="15" fill="rgb(245,162,40)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="511.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="485" width="0.9354%" height="15" fill="rgb(229,68,17)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="495.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (21 samples, 0.94%)</title><rect x="65.3452%" y="469" width="0.9354%" height="15" fill="rgb(213,182,10)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (21 samples, 0.94%)</title><rect x="65.3452%" y="453" width="0.9354%" height="15" fill="rgb(245,125,30)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="463.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (21 samples, 0.94%)</title><rect x="65.3452%" y="437" width="0.9354%" height="15" fill="rgb(232,202,2)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (21 samples, 0.94%)</title><rect x="65.3452%" y="421" width="0.9354%" height="15" fill="rgb(237,140,51)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (21 samples, 0.94%)</title><rect x="65.3452%" y="405" width="0.9354%" height="15" fill="rgb(236,157,25)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="389" width="0.9354%" height="15" fill="rgb(219,209,0)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="399.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="373" width="0.9354%" height="15" fill="rgb(240,116,54)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="383.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="357" width="0.9354%" height="15" fill="rgb(216,10,36)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="367.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="341" width="0.9354%" height="15" fill="rgb(222,72,44)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="351.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="65.3452%" y="325" width="0.9354%" height="15" fill="rgb(232,159,9)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="335.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (21 samples, 0.94%)</title><rect x="65.3452%" y="309" width="0.9354%" height="15" fill="rgb(210,39,32)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="319.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (21 samples, 0.94%)</title><rect x="65.3452%" y="293" width="0.9354%" height="15" fill="rgb(216,194,45)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="303.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (21 samples, 0.94%)</title><rect x="65.3452%" y="277" width="0.9354%" height="15" fill="rgb(218,18,35)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="287.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (21 samples, 0.94%)</title><rect x="65.3452%" y="261" width="0.9354%" height="15" fill="rgb(207,83,51)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="271.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (21 samples, 0.94%)</title><rect x="65.3452%" y="245" width="0.9354%" height="15" fill="rgb(225,63,43)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="255.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (21 samples, 0.94%)</title><rect x="65.3452%" y="229" width="0.9354%" height="15" fill="rgb(207,57,36)" fg:x="1467" fg:w="21"/><text x="65.5952%" y="239.50"></text></g><g><title>hyper::headers::content_length_parse_all (4 samples, 0.18%)</title><rect x="66.1024%" y="213" width="0.1782%" height="15" fill="rgb(216,99,33)" fg:x="1484" fg:w="4"/><text x="66.3524%" y="223.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (1 samples, 0.04%)</title><rect x="66.2361%" y="197" width="0.0445%" height="15" fill="rgb(225,42,16)" fg:x="1487" fg:w="1"/><text x="66.4861%" y="207.50"></text></g><g><title>__memcpy_ssse3 (4 samples, 0.18%)</title><rect x="66.4143%" y="501" width="0.1782%" height="15" fill="rgb(220,201,45)" fg:x="1491" fg:w="4"/><text x="66.6643%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (3 samples, 0.13%)</title><rect x="66.5924%" y="501" width="0.1336%" height="15" fill="rgb(225,33,4)" fg:x="1495" fg:w="3"/><text x="66.8424%" y="511.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="66.8151%" y="485" width="0.0445%" height="15" fill="rgb(224,33,50)" fg:x="1500" fg:w="1"/><text x="67.0651%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (2 samples, 0.09%)</title><rect x="66.8597%" y="485" width="0.0891%" height="15" fill="rgb(246,198,51)" fg:x="1501" fg:w="2"/><text x="67.1097%" y="495.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="66.8597%" y="469" width="0.0891%" height="15" fill="rgb(205,22,4)" fg:x="1501" fg:w="2"/><text x="67.1097%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.09%)</title><rect x="66.8597%" y="453" width="0.0891%" height="15" fill="rgb(206,3,8)" fg:x="1501" fg:w="2"/><text x="67.1097%" y="463.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="66.9488%" y="469" width="0.0445%" height="15" fill="rgb(251,23,15)" fg:x="1503" fg:w="1"/><text x="67.1988%" y="479.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="67.0379%" y="453" width="0.0891%" height="15" fill="rgb(252,88,28)" fg:x="1505" fg:w="2"/><text x="67.2879%" y="463.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (5 samples, 0.22%)</title><rect x="66.9933%" y="469" width="0.2227%" height="15" fill="rgb(212,127,14)" fg:x="1504" fg:w="5"/><text x="67.2433%" y="479.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="67.1269%" y="453" width="0.0891%" height="15" fill="rgb(247,145,37)" fg:x="1507" fg:w="2"/><text x="67.3769%" y="463.50"></text></g><g><title>_int_malloc (2 samples, 0.09%)</title><rect x="67.1269%" y="437" width="0.0891%" height="15" fill="rgb(209,117,53)" fg:x="1507" fg:w="2"/><text x="67.3769%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Header::set_owner_id (3 samples, 0.13%)</title><rect x="67.2160%" y="469" width="0.1336%" height="15" fill="rgb(212,90,42)" fg:x="1509" fg:w="3"/><text x="67.4660%" y="479.50"></text></g><g><title>&lt;tokio::runtime::task::raw::RawTask as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="67.3497%" y="453" width="0.0445%" height="15" fill="rgb(218,164,37)" fg:x="1512" fg:w="1"/><text x="67.5997%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (16 samples, 0.71%)</title><rect x="66.7261%" y="501" width="0.7127%" height="15" fill="rgb(246,65,34)" fg:x="1498" fg:w="16"/><text x="66.9761%" y="511.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (11 samples, 0.49%)</title><rect x="66.9488%" y="485" width="0.4900%" height="15" fill="rgb(231,100,33)" fg:x="1503" fg:w="11"/><text x="67.1988%" y="495.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (2 samples, 0.09%)</title><rect x="67.3497%" y="469" width="0.0891%" height="15" fill="rgb(228,126,14)" fg:x="1512" fg:w="2"/><text x="67.5997%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (1 samples, 0.04%)</title><rect x="67.3942%" y="453" width="0.0445%" height="15" fill="rgb(215,173,21)" fg:x="1513" fg:w="1"/><text x="67.6442%" y="463.50"></text></g><g><title>tokio::runtime::task::id::Id::as_u64 (1 samples, 0.04%)</title><rect x="67.4388%" y="501" width="0.0445%" height="15" fill="rgb(210,6,40)" fg:x="1514" fg:w="1"/><text x="67.6888%" y="511.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connect_to::_{{closure}}::_{{closure}}::_{{closure}} (28 samples, 1.25%)</title><rect x="66.2806%" y="549" width="1.2472%" height="15" fill="rgb(212,48,18)" fg:x="1488" fg:w="28"/><text x="66.5306%" y="559.50"></text></g><g><title>hyper::common::exec::Exec::execute (28 samples, 1.25%)</title><rect x="66.2806%" y="533" width="1.2472%" height="15" fill="rgb(230,214,11)" fg:x="1488" fg:w="28"/><text x="66.5306%" y="543.50"></text></g><g><title>tokio::task::spawn::spawn (28 samples, 1.25%)</title><rect x="66.2806%" y="517" width="1.2472%" height="15" fill="rgb(254,105,39)" fg:x="1488" fg:w="28"/><text x="66.5306%" y="527.50"></text></g><g><title>tokio::runtime::task::id::Id::next (1 samples, 0.04%)</title><rect x="67.4833%" y="501" width="0.0445%" height="15" fill="rgb(245,158,5)" fg:x="1515" fg:w="1"/><text x="67.7333%" y="511.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as std::os::fd::raw::FromRawFd&gt;::from_raw_fd (5 samples, 0.22%)</title><rect x="69.1314%" y="421" width="0.2227%" height="15" fill="rgb(249,208,11)" fg:x="1552" fg:w="5"/><text x="69.3814%" y="431.50"></text></g><g><title>std::os::linux::process::&lt;impl core::convert::From&lt;std::os::linux::process::PidFd&gt; for std::os::fd::owned::OwnedFd&gt;::from (1 samples, 0.04%)</title><rect x="69.3096%" y="405" width="0.0445%" height="15" fill="rgb(210,39,28)" fg:x="1556" fg:w="1"/><text x="69.5596%" y="415.50"></text></g><g><title>&lt;socket2::sockaddr::SockAddr as core::convert::From&lt;std::net::socket_addr::SocketAddr&gt;&gt;::from (1 samples, 0.04%)</title><rect x="69.3541%" y="421" width="0.0445%" height="15" fill="rgb(211,56,53)" fg:x="1557" fg:w="1"/><text x="69.6041%" y="431.50"></text></g><g><title>__memcpy_ssse3 (15 samples, 0.67%)</title><rect x="69.3987%" y="421" width="0.6682%" height="15" fill="rgb(226,201,30)" fg:x="1558" fg:w="15"/><text x="69.6487%" y="431.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="70.0668%" y="421" width="0.0445%" height="15" fill="rgb(239,101,34)" fg:x="1573" fg:w="1"/><text x="70.3168%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="70.1114%" y="421" width="0.0445%" height="15" fill="rgb(226,209,5)" fg:x="1574" fg:w="1"/><text x="70.3614%" y="431.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.04%)</title><rect x="70.2004%" y="405" width="0.0445%" height="15" fill="rgb(250,105,47)" fg:x="1576" fg:w="1"/><text x="70.4504%" y="415.50"></text></g><g><title>bytes::bytes::promotable_even_drop (4 samples, 0.18%)</title><rect x="70.1559%" y="421" width="0.1782%" height="15" fill="rgb(230,72,3)" fg:x="1575" fg:w="4"/><text x="70.4059%" y="431.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="70.2450%" y="405" width="0.0891%" height="15" fill="rgb(232,218,39)" fg:x="1577" fg:w="2"/><text x="70.4950%" y="415.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="70.3341%" y="421" width="0.0891%" height="15" fill="rgb(248,166,6)" fg:x="1579" fg:w="2"/><text x="70.5841%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (5 samples, 0.22%)</title><rect x="70.4232%" y="421" width="0.2227%" height="15" fill="rgb(247,89,20)" fg:x="1581" fg:w="5"/><text x="70.6732%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::connect::http::ConnectingTcp::connect::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="70.6459%" y="421" width="0.0445%" height="15" fill="rgb(248,130,54)" fg:x="1586" fg:w="1"/><text x="70.8959%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::connect::http::connect::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="70.6904%" y="421" width="0.0445%" height="15" fill="rgb(234,196,4)" fg:x="1587" fg:w="1"/><text x="70.9404%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream::connect_mio::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="70.7350%" y="421" width="0.0445%" height="15" fill="rgb(250,143,31)" fg:x="1588" fg:w="1"/><text x="70.9850%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="70.8686%" y="405" width="0.0445%" height="15" fill="rgb(211,110,34)" fg:x="1591" fg:w="1"/><text x="71.1186%" y="415.50"></text></g><g><title>hyper::client::connect::dns::SocketAddrs::try_parse (5 samples, 0.22%)</title><rect x="70.7795%" y="421" width="0.2227%" height="15" fill="rgb(215,124,48)" fg:x="1589" fg:w="5"/><text x="71.0295%" y="431.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::ip_addr::Ipv4Addr&gt;::from_str (2 samples, 0.09%)</title><rect x="70.9131%" y="405" width="0.0891%" height="15" fill="rgb(216,46,13)" fg:x="1592" fg:w="2"/><text x="71.1631%" y="415.50"></text></g><g><title>std::net::parser::Parser::read_ipv4_addr (1 samples, 0.04%)</title><rect x="70.9577%" y="389" width="0.0445%" height="15" fill="rgb(205,184,25)" fg:x="1593" fg:w="1"/><text x="71.2077%" y="399.50"></text></g><g><title>hyper::client::connect::http::ConnectingTcp::connect (2 samples, 0.09%)</title><rect x="71.0022%" y="421" width="0.0891%" height="15" fill="rgb(228,1,10)" fg:x="1594" fg:w="2"/><text x="71.2522%" y="431.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="71.0022%" y="405" width="0.0891%" height="15" fill="rgb(213,116,27)" fg:x="1594" fg:w="2"/><text x="71.2522%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="71.1359%" y="373" width="0.0445%" height="15" fill="rgb(241,95,50)" fg:x="1597" fg:w="1"/><text x="71.3859%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="71.2695%" y="341" width="0.0445%" height="15" fill="rgb(238,48,32)" fg:x="1600" fg:w="1"/><text x="71.5195%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition (8 samples, 0.36%)</title><rect x="71.0913%" y="389" width="0.3563%" height="15" fill="rgb(235,113,49)" fg:x="1596" fg:w="8"/><text x="71.3413%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.27%)</title><rect x="71.1804%" y="373" width="0.2673%" height="15" fill="rgb(205,127,43)" fg:x="1598" fg:w="6"/><text x="71.4304%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.27%)</title><rect x="71.1804%" y="357" width="0.2673%" height="15" fill="rgb(250,162,2)" fg:x="1598" fg:w="6"/><text x="71.4304%" y="367.50"></text></g><g><title>malloc (3 samples, 0.13%)</title><rect x="71.3140%" y="341" width="0.1336%" height="15" fill="rgb(220,13,41)" fg:x="1601" fg:w="3"/><text x="71.5640%" y="351.50"></text></g><g><title>_int_malloc (2 samples, 0.09%)</title><rect x="71.3586%" y="325" width="0.0891%" height="15" fill="rgb(249,221,25)" fg:x="1602" fg:w="2"/><text x="71.6086%" y="335.50"></text></g><g><title>hyper::client::connect::http::ConnectingTcp::new (9 samples, 0.40%)</title><rect x="71.0913%" y="421" width="0.4009%" height="15" fill="rgb(215,208,19)" fg:x="1596" fg:w="9"/><text x="71.3413%" y="431.50"></text></g><g><title>hyper::client::connect::dns::SocketAddrs::split_by_preference (9 samples, 0.40%)</title><rect x="71.0913%" y="405" width="0.4009%" height="15" fill="rgb(236,175,2)" fg:x="1596" fg:w="9"/><text x="71.3413%" y="415.50"></text></g><g><title>std::net::socket_addr::SocketAddr::is_ipv6 (1 samples, 0.04%)</title><rect x="71.4477%" y="389" width="0.0445%" height="15" fill="rgb(241,52,2)" fg:x="1604" fg:w="1"/><text x="71.6977%" y="399.50"></text></g><g><title>socket2::Domain::for_address (2 samples, 0.09%)</title><rect x="71.6704%" y="405" width="0.0891%" height="15" fill="rgb(248,140,14)" fg:x="1609" fg:w="2"/><text x="71.9204%" y="415.50"></text></g><g><title>socket2::TcpKeepalive::new (2 samples, 0.09%)</title><rect x="71.7595%" y="405" width="0.0891%" height="15" fill="rgb(253,22,42)" fg:x="1611" fg:w="2"/><text x="72.0095%" y="415.50"></text></g><g><title>socket2::TcpKeepalive::with_time (1 samples, 0.04%)</title><rect x="71.8486%" y="405" width="0.0445%" height="15" fill="rgb(234,61,47)" fg:x="1613" fg:w="1"/><text x="72.0986%" y="415.50"></text></g><g><title>__socket (1 samples, 0.04%)</title><rect x="71.9376%" y="389" width="0.0445%" height="15" fill="rgb(208,226,15)" fg:x="1615" fg:w="1"/><text x="72.1876%" y="399.50"></text></g><g><title>socket2::socket::Socket::new (4 samples, 0.18%)</title><rect x="71.8931%" y="405" width="0.1782%" height="15" fill="rgb(217,221,4)" fg:x="1614" fg:w="4"/><text x="72.1431%" y="415.50"></text></g><g><title>std::os::linux::process::&lt;impl core::convert::From&lt;std::os::linux::process::PidFd&gt; for std::os::fd::owned::OwnedFd&gt;::from (2 samples, 0.09%)</title><rect x="71.9822%" y="389" width="0.0891%" height="15" fill="rgb(212,174,34)" fg:x="1616" fg:w="2"/><text x="72.2322%" y="399.50"></text></g><g><title>&lt;std::process::ExitStatus as std::sys_common::AsInner&lt;std::sys::unix::process::process_inner::ExitStatus&gt;&gt;::as_inner (4 samples, 0.18%)</title><rect x="72.1158%" y="389" width="0.1782%" height="15" fill="rgb(253,83,4)" fg:x="1619" fg:w="4"/><text x="72.3658%" y="399.50"></text></g><g><title>socket2::socket::Socket::set_nonblocking (9 samples, 0.40%)</title><rect x="72.0713%" y="405" width="0.4009%" height="15" fill="rgb(250,195,49)" fg:x="1618" fg:w="9"/><text x="72.3213%" y="415.50"></text></g><g><title>__libc_fcntl (4 samples, 0.18%)</title><rect x="72.2940%" y="389" width="0.1782%" height="15" fill="rgb(241,192,25)" fg:x="1623" fg:w="4"/><text x="72.5440%" y="399.50"></text></g><g><title>fcntl_common (4 samples, 0.18%)</title><rect x="72.2940%" y="373" width="0.1782%" height="15" fill="rgb(208,124,10)" fg:x="1623" fg:w="4"/><text x="72.5440%" y="383.50"></text></g><g><title>socket2::socket::Socket::set_tcp_keepalive (4 samples, 0.18%)</title><rect x="72.4722%" y="405" width="0.1782%" height="15" fill="rgb(222,33,0)" fg:x="1627" fg:w="4"/><text x="72.7222%" y="415.50"></text></g><g><title>__GI___setsockopt (3 samples, 0.13%)</title><rect x="72.5167%" y="389" width="0.1336%" height="15" fill="rgb(234,209,28)" fg:x="1628" fg:w="3"/><text x="72.7667%" y="399.50"></text></g><g><title>socket2::sys::&lt;impl std::os::fd::raw::IntoRawFd for socket2::socket::Socket&gt;::into_raw_fd (2 samples, 0.09%)</title><rect x="72.6503%" y="405" width="0.0891%" height="15" fill="rgb(224,11,23)" fg:x="1631" fg:w="2"/><text x="72.9003%" y="415.50"></text></g><g><title>std::os::linux::process::&lt;impl core::convert::From&lt;std::os::linux::process::PidFd&gt; for std::os::fd::owned::OwnedFd&gt;::from (2 samples, 0.09%)</title><rect x="72.6503%" y="389" width="0.0891%" height="15" fill="rgb(232,99,1)" fg:x="1631" fg:w="2"/><text x="72.9003%" y="399.50"></text></g><g><title>hyper::client::connect::http::connect (29 samples, 1.29%)</title><rect x="71.4922%" y="421" width="1.2918%" height="15" fill="rgb(237,95,45)" fg:x="1605" fg:w="29"/><text x="71.7422%" y="431.50"></text></g><g><title>socket2::sys::set_tcp_keepalive (1 samples, 0.04%)</title><rect x="72.7394%" y="405" width="0.0445%" height="15" fill="rgb(208,109,11)" fg:x="1633" fg:w="1"/><text x="72.9894%" y="415.50"></text></g><g><title>__GI___setsockopt (1 samples, 0.04%)</title><rect x="72.7394%" y="389" width="0.0445%" height="15" fill="rgb(216,190,48)" fg:x="1633" fg:w="1"/><text x="72.9894%" y="399.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::cmp::PartialEq&gt;::eq (4 samples, 0.18%)</title><rect x="72.8285%" y="405" width="0.1782%" height="15" fill="rgb(251,171,36)" fg:x="1635" fg:w="4"/><text x="73.0785%" y="415.50"></text></g><g><title>http::uri::Uri::port (9 samples, 0.40%)</title><rect x="73.0067%" y="405" width="0.4009%" height="15" fill="rgb(230,62,22)" fg:x="1639" fg:w="9"/><text x="73.2567%" y="415.50"></text></g><g><title>http::uri::authority::Authority::port (6 samples, 0.27%)</title><rect x="73.1403%" y="389" width="0.2673%" height="15" fill="rgb(225,114,35)" fg:x="1642" fg:w="6"/><text x="73.3903%" y="399.50"></text></g><g><title>core::str::pattern::StrSearcher::new (4 samples, 0.18%)</title><rect x="73.2294%" y="373" width="0.1782%" height="15" fill="rgb(215,118,42)" fg:x="1644" fg:w="4"/><text x="73.4794%" y="383.50"></text></g><g><title>__memcmp_sse4_1 (3 samples, 0.13%)</title><rect x="73.2739%" y="357" width="0.1336%" height="15" fill="rgb(243,119,21)" fg:x="1645" fg:w="3"/><text x="73.5239%" y="367.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="73.4076%" y="389" width="0.0445%" height="15" fill="rgb(252,177,53)" fg:x="1648" fg:w="1"/><text x="73.6576%" y="399.50"></text></g><g><title>hyper::client::connect::http::get_host_port (18 samples, 0.80%)</title><rect x="72.7840%" y="421" width="0.8018%" height="15" fill="rgb(237,209,29)" fg:x="1634" fg:w="18"/><text x="73.0340%" y="431.50"></text></g><g><title>http::uri::authority::host (4 samples, 0.18%)</title><rect x="73.4076%" y="405" width="0.1782%" height="15" fill="rgb(212,65,23)" fg:x="1648" fg:w="4"/><text x="73.6576%" y="415.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (3 samples, 0.13%)</title><rect x="73.4521%" y="389" width="0.1336%" height="15" fill="rgb(230,222,46)" fg:x="1649" fg:w="3"/><text x="73.7021%" y="399.50"></text></g><g><title>core::slice::memchr::memrchr (2 samples, 0.09%)</title><rect x="73.4967%" y="373" width="0.0891%" height="15" fill="rgb(215,135,32)" fg:x="1650" fg:w="2"/><text x="73.7467%" y="383.50"></text></g><g><title>__libc_connect (6 samples, 0.27%)</title><rect x="73.6303%" y="405" width="0.2673%" height="15" fill="rgb(246,101,22)" fg:x="1653" fg:w="6"/><text x="73.8803%" y="415.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="73.8530%" y="389" width="0.0445%" height="15" fill="rgb(206,107,13)" fg:x="1658" fg:w="1"/><text x="74.1030%" y="399.50"></text></g><g><title>socket2::socket::Socket::connect (11 samples, 0.49%)</title><rect x="73.5857%" y="421" width="0.4900%" height="15" fill="rgb(250,100,44)" fg:x="1652" fg:w="11"/><text x="73.8357%" y="431.50"></text></g><g><title>std::sys::unix::os::errno (4 samples, 0.18%)</title><rect x="73.8976%" y="405" width="0.1782%" height="15" fill="rgb(231,147,38)" fg:x="1659" fg:w="4"/><text x="74.1476%" y="415.50"></text></g><g><title>__errno_location (4 samples, 0.18%)</title><rect x="73.8976%" y="389" width="0.1782%" height="15" fill="rgb(229,8,40)" fg:x="1659" fg:w="4"/><text x="74.1476%" y="399.50"></text></g><g><title>std::net::tcp::TcpStream::set_nodelay (2 samples, 0.09%)</title><rect x="74.0757%" y="421" width="0.0891%" height="15" fill="rgb(221,135,30)" fg:x="1663" fg:w="2"/><text x="74.3257%" y="431.50"></text></g><g><title>__GI___setsockopt (2 samples, 0.09%)</title><rect x="74.0757%" y="405" width="0.0891%" height="15" fill="rgb(249,193,18)" fg:x="1663" fg:w="2"/><text x="74.3257%" y="415.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::take_error (2 samples, 0.09%)</title><rect x="74.1648%" y="421" width="0.0891%" height="15" fill="rgb(209,133,39)" fg:x="1665" fg:w="2"/><text x="74.4148%" y="431.50"></text></g><g><title>__GI___getsockopt (2 samples, 0.09%)</title><rect x="74.1648%" y="405" width="0.0891%" height="15" fill="rgb(232,100,14)" fg:x="1665" fg:w="2"/><text x="74.4148%" y="415.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_mio (3 samples, 0.13%)</title><rect x="74.2539%" y="421" width="0.1336%" height="15" fill="rgb(224,185,1)" fg:x="1667" fg:w="3"/><text x="74.5039%" y="431.50"></text></g><g><title>mio::interest::Interest::add (1 samples, 0.04%)</title><rect x="74.5212%" y="389" width="0.0445%" height="15" fill="rgb(223,139,8)" fg:x="1673" fg:w="1"/><text x="74.7712%" y="399.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register (2 samples, 0.09%)</title><rect x="74.6102%" y="357" width="0.0891%" height="15" fill="rgb(232,213,38)" fg:x="1675" fg:w="2"/><text x="74.8602%" y="367.50"></text></g><g><title>epoll_ctl (2 samples, 0.09%)</title><rect x="74.6102%" y="341" width="0.0891%" height="15" fill="rgb(207,94,22)" fg:x="1675" fg:w="2"/><text x="74.8602%" y="351.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (9 samples, 0.40%)</title><rect x="74.5657%" y="389" width="0.4009%" height="15" fill="rgb(219,183,54)" fg:x="1674" fg:w="9"/><text x="74.8157%" y="399.50"></text></g><g><title>tokio::runtime::io::Handle::add_source (8 samples, 0.36%)</title><rect x="74.6102%" y="373" width="0.3563%" height="15" fill="rgb(216,185,54)" fg:x="1675" fg:w="8"/><text x="74.8602%" y="383.50"></text></g><g><title>tokio::runtime::io::Handle::allocate (6 samples, 0.27%)</title><rect x="74.6993%" y="357" width="0.2673%" height="15" fill="rgb(254,217,39)" fg:x="1677" fg:w="6"/><text x="74.9493%" y="367.50"></text></g><g><title>tokio::util::slab::Allocator&lt;T&gt;::allocate (6 samples, 0.27%)</title><rect x="74.6993%" y="341" width="0.2673%" height="15" fill="rgb(240,178,23)" fg:x="1677" fg:w="6"/><text x="74.9493%" y="351.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (16 samples, 0.71%)</title><rect x="74.3875%" y="421" width="0.7127%" height="15" fill="rgb(218,11,47)" fg:x="1670" fg:w="16"/><text x="74.6375%" y="431.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (16 samples, 0.71%)</title><rect x="74.3875%" y="405" width="0.7127%" height="15" fill="rgb(218,51,51)" fg:x="1670" fg:w="16"/><text x="74.6375%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (3 samples, 0.13%)</title><rect x="74.9666%" y="389" width="0.1336%" height="15" fill="rgb(238,126,27)" fg:x="1683" fg:w="3"/><text x="75.2166%" y="399.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (177 samples, 7.88%)</title><rect x="67.5278%" y="549" width="7.8842%" height="15" fill="rgb(249,202,22)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="559.50">hyper::clie..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (177 samples, 7.88%)</title><rect x="67.5278%" y="533" width="7.8842%" height="15" fill="rgb(254,195,49)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="543.50">&lt;futures_ut..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (177 samples, 7.88%)</title><rect x="67.5278%" y="517" width="7.8842%" height="15" fill="rgb(208,123,14)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="527.50">&lt;hyper::com..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (177 samples, 7.88%)</title><rect x="67.5278%" y="501" width="7.8842%" height="15" fill="rgb(224,200,8)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="511.50">&lt;futures_ut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (177 samples, 7.88%)</title><rect x="67.5278%" y="485" width="7.8842%" height="15" fill="rgb(217,61,36)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="495.50">&lt;futures_ut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (177 samples, 7.88%)</title><rect x="67.5278%" y="469" width="7.8842%" height="15" fill="rgb(206,35,45)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="479.50">&lt;futures_ut..</text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (177 samples, 7.88%)</title><rect x="67.5278%" y="453" width="7.8842%" height="15" fill="rgb(217,65,33)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="463.50">&lt;hyper::ser..</text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (177 samples, 7.88%)</title><rect x="67.5278%" y="437" width="7.8842%" height="15" fill="rgb(222,158,48)" fg:x="1516" fg:w="177"/><text x="67.7778%" y="447.50">&lt;hyper::cli..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (7 samples, 0.31%)</title><rect x="75.1002%" y="421" width="0.3118%" height="15" fill="rgb(254,2,54)" fg:x="1686" fg:w="7"/><text x="75.3502%" y="431.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (5 samples, 0.22%)</title><rect x="75.1893%" y="405" width="0.2227%" height="15" fill="rgb(250,143,38)" fg:x="1688" fg:w="5"/><text x="75.4393%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.18%)</title><rect x="75.2339%" y="389" width="0.1782%" height="15" fill="rgb(248,25,0)" fg:x="1689" fg:w="4"/><text x="75.4839%" y="399.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (2 samples, 0.09%)</title><rect x="75.3229%" y="373" width="0.0891%" height="15" fill="rgb(206,152,27)" fg:x="1691" fg:w="2"/><text x="75.5729%" y="383.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (1 samples, 0.04%)</title><rect x="75.4120%" y="549" width="0.0445%" height="15" fill="rgb(240,77,30)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="559.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="533" width="0.0445%" height="15" fill="rgb(231,5,3)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="543.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="517" width="0.0445%" height="15" fill="rgb(207,226,32)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="527.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="501" width="0.0445%" height="15" fill="rgb(222,207,47)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="511.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="485" width="0.0445%" height="15" fill="rgb(229,115,45)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="495.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call::_{{closure}} (1 samples, 0.04%)</title><rect x="75.4120%" y="469" width="0.0445%" height="15" fill="rgb(224,191,6)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="479.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="453" width="0.0445%" height="15" fill="rgb(230,227,24)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="463.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1 samples, 0.04%)</title><rect x="75.4120%" y="437" width="0.0445%" height="15" fill="rgb(228,80,19)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="447.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="421" width="0.0445%" height="15" fill="rgb(247,229,0)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="431.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="405" width="0.0445%" height="15" fill="rgb(237,194,15)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="415.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="75.4120%" y="389" width="0.0445%" height="15" fill="rgb(219,203,20)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="399.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connect_to::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="75.4120%" y="373" width="0.0445%" height="15" fill="rgb(234,128,8)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="383.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="75.4120%" y="357" width="0.0445%" height="15" fill="rgb(248,202,8)" fg:x="1693" fg:w="1"/><text x="75.6620%" y="367.50"></text></g><g><title>__memcmp_sse4_1 (2 samples, 0.09%)</title><rect x="75.8575%" y="181" width="0.0891%" height="15" fill="rgb(206,104,37)" fg:x="1703" fg:w="2"/><text x="76.1075%" y="191.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.04%)</title><rect x="75.9465%" y="181" width="0.0445%" height="15" fill="rgb(223,8,27)" fg:x="1705" fg:w="1"/><text x="76.1965%" y="191.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.04%)</title><rect x="75.9911%" y="181" width="0.0445%" height="15" fill="rgb(216,217,28)" fg:x="1706" fg:w="1"/><text x="76.2411%" y="191.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.04%)</title><rect x="76.0356%" y="181" width="0.0445%" height="15" fill="rgb(249,199,1)" fg:x="1707" fg:w="1"/><text x="76.2856%" y="191.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (2 samples, 0.09%)</title><rect x="76.0802%" y="181" width="0.0891%" height="15" fill="rgb(240,85,17)" fg:x="1708" fg:w="2"/><text x="76.3302%" y="191.50"></text></g><g><title>http::status::StatusCode::canonical_reason (3 samples, 0.13%)</title><rect x="76.1693%" y="181" width="0.1336%" height="15" fill="rgb(206,108,45)" fg:x="1710" fg:w="3"/><text x="76.4193%" y="191.50"></text></g><g><title>httparse::ParserConfig::obsolete_multiline_headers_in_responses_are_allowed (1 samples, 0.04%)</title><rect x="76.3029%" y="181" width="0.0445%" height="15" fill="rgb(245,210,41)" fg:x="1713" fg:w="1"/><text x="76.5529%" y="191.50"></text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (2 samples, 0.09%)</title><rect x="76.3474%" y="181" width="0.0891%" height="15" fill="rgb(206,13,37)" fg:x="1714" fg:w="2"/><text x="76.5974%" y="191.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (1 samples, 0.04%)</title><rect x="76.3920%" y="165" width="0.0445%" height="15" fill="rgb(250,61,18)" fg:x="1715" fg:w="1"/><text x="76.6420%" y="175.50"></text></g><g><title>hyper::headers::connection_has (1 samples, 0.04%)</title><rect x="76.4365%" y="181" width="0.0445%" height="15" fill="rgb(235,172,48)" fg:x="1716" fg:w="1"/><text x="76.6865%" y="191.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (24 samples, 1.07%)</title><rect x="75.4566%" y="325" width="1.0690%" height="15" fill="rgb(249,201,17)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (24 samples, 1.07%)</title><rect x="75.4566%" y="309" width="1.0690%" height="15" fill="rgb(219,208,6)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="319.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (24 samples, 1.07%)</title><rect x="75.4566%" y="293" width="1.0690%" height="15" fill="rgb(248,31,23)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="303.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (24 samples, 1.07%)</title><rect x="75.4566%" y="277" width="1.0690%" height="15" fill="rgb(245,15,42)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="287.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (24 samples, 1.07%)</title><rect x="75.4566%" y="261" width="1.0690%" height="15" fill="rgb(222,217,39)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="271.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (24 samples, 1.07%)</title><rect x="75.4566%" y="245" width="1.0690%" height="15" fill="rgb(210,219,27)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="255.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (24 samples, 1.07%)</title><rect x="75.4566%" y="229" width="1.0690%" height="15" fill="rgb(252,166,36)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="239.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (24 samples, 1.07%)</title><rect x="75.4566%" y="213" width="1.0690%" height="15" fill="rgb(245,132,34)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="223.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (24 samples, 1.07%)</title><rect x="75.4566%" y="197" width="1.0690%" height="15" fill="rgb(236,54,3)" fg:x="1694" fg:w="24"/><text x="75.7066%" y="207.50"></text></g><g><title>hyper::proto::h1::role::record_header_indices (1 samples, 0.04%)</title><rect x="76.4811%" y="181" width="0.0445%" height="15" fill="rgb(241,173,43)" fg:x="1717" fg:w="1"/><text x="76.7311%" y="191.50"></text></g><g><title>&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (1 samples, 0.04%)</title><rect x="76.6147%" y="213" width="0.0445%" height="15" fill="rgb(215,190,9)" fg:x="1720" fg:w="1"/><text x="76.8647%" y="223.50"></text></g><g><title>start_thread (28 samples, 1.25%)</title><rect x="75.4566%" y="549" width="1.2472%" height="15" fill="rgb(242,101,16)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="559.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (28 samples, 1.25%)</title><rect x="75.4566%" y="533" width="1.2472%" height="15" fill="rgb(223,190,21)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (28 samples, 1.25%)</title><rect x="75.4566%" y="517" width="1.2472%" height="15" fill="rgb(215,228,25)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 1.25%)</title><rect x="75.4566%" y="501" width="1.2472%" height="15" fill="rgb(225,36,22)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="511.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (28 samples, 1.25%)</title><rect x="75.4566%" y="485" width="1.2472%" height="15" fill="rgb(251,106,46)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28 samples, 1.25%)</title><rect x="75.4566%" y="469" width="1.2472%" height="15" fill="rgb(208,90,1)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (28 samples, 1.25%)</title><rect x="75.4566%" y="453" width="1.2472%" height="15" fill="rgb(243,10,4)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="463.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28 samples, 1.25%)</title><rect x="75.4566%" y="437" width="1.2472%" height="15" fill="rgb(212,137,27)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (28 samples, 1.25%)</title><rect x="75.4566%" y="421" width="1.2472%" height="15" fill="rgb(231,220,49)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="431.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (28 samples, 1.25%)</title><rect x="75.4566%" y="405" width="1.2472%" height="15" fill="rgb(237,96,20)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (28 samples, 1.25%)</title><rect x="75.4566%" y="389" width="1.2472%" height="15" fill="rgb(239,229,30)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (28 samples, 1.25%)</title><rect x="75.4566%" y="373" width="1.2472%" height="15" fill="rgb(219,65,33)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28 samples, 1.25%)</title><rect x="75.4566%" y="357" width="1.2472%" height="15" fill="rgb(243,134,7)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (28 samples, 1.25%)</title><rect x="75.4566%" y="341" width="1.2472%" height="15" fill="rgb(216,177,54)" fg:x="1694" fg:w="28"/><text x="75.7066%" y="351.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.18%)</title><rect x="76.5256%" y="325" width="0.1782%" height="15" fill="rgb(211,160,20)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="335.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (4 samples, 0.18%)</title><rect x="76.5256%" y="309" width="0.1782%" height="15" fill="rgb(239,85,39)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="319.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (4 samples, 0.18%)</title><rect x="76.5256%" y="293" width="0.1782%" height="15" fill="rgb(232,125,22)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="303.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (4 samples, 0.18%)</title><rect x="76.5256%" y="277" width="0.1782%" height="15" fill="rgb(244,57,34)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="287.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (4 samples, 0.18%)</title><rect x="76.5256%" y="261" width="0.1782%" height="15" fill="rgb(214,203,32)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="271.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (4 samples, 0.18%)</title><rect x="76.5256%" y="245" width="0.1782%" height="15" fill="rgb(207,58,43)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="255.50"></text></g><g><title>axum::routing::method_routing::MethodRouter&lt;S,B,E&gt;::call_with_state (4 samples, 0.18%)</title><rect x="76.5256%" y="229" width="0.1782%" height="15" fill="rgb(215,193,15)" fg:x="1718" fg:w="4"/><text x="76.7756%" y="239.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="76.6592%" y="213" width="0.0445%" height="15" fill="rgb(232,15,44)" fg:x="1721" fg:w="1"/><text x="76.9092%" y="223.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.04%)</title><rect x="76.7038%" y="197" width="0.0445%" height="15" fill="rgb(212,3,48)" fg:x="1722" fg:w="1"/><text x="76.9538%" y="207.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.13%)</title><rect x="76.7038%" y="549" width="0.1336%" height="15" fill="rgb(218,128,7)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.13%)</title><rect x="76.7038%" y="533" width="0.1336%" height="15" fill="rgb(226,216,39)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.13%)</title><rect x="76.7038%" y="517" width="0.1336%" height="15" fill="rgb(243,47,51)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3 samples, 0.13%)</title><rect x="76.7038%" y="501" width="0.1336%" height="15" fill="rgb(241,183,40)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="485" width="0.1336%" height="15" fill="rgb(231,217,32)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="469" width="0.1336%" height="15" fill="rgb(229,61,38)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="479.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.13%)</title><rect x="76.7038%" y="453" width="0.1336%" height="15" fill="rgb(225,210,5)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (3 samples, 0.13%)</title><rect x="76.7038%" y="437" width="0.1336%" height="15" fill="rgb(231,79,45)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="447.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.13%)</title><rect x="76.7038%" y="421" width="0.1336%" height="15" fill="rgb(224,100,7)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (3 samples, 0.13%)</title><rect x="76.7038%" y="405" width="0.1336%" height="15" fill="rgb(241,198,18)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (3 samples, 0.13%)</title><rect x="76.7038%" y="389" width="0.1336%" height="15" fill="rgb(252,97,53)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="373" width="0.1336%" height="15" fill="rgb(220,88,7)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="357" width="0.1336%" height="15" fill="rgb(213,176,14)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="367.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="341" width="0.1336%" height="15" fill="rgb(246,73,7)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="351.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="325" width="0.1336%" height="15" fill="rgb(245,64,36)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="335.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.13%)</title><rect x="76.7038%" y="309" width="0.1336%" height="15" fill="rgb(245,80,10)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="319.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.13%)</title><rect x="76.7038%" y="293" width="0.1336%" height="15" fill="rgb(232,107,50)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="303.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 0.13%)</title><rect x="76.7038%" y="277" width="0.1336%" height="15" fill="rgb(253,3,0)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="287.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (3 samples, 0.13%)</title><rect x="76.7038%" y="261" width="0.1336%" height="15" fill="rgb(212,99,53)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="271.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (3 samples, 0.13%)</title><rect x="76.7038%" y="245" width="0.1336%" height="15" fill="rgb(249,111,54)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="255.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (3 samples, 0.13%)</title><rect x="76.7038%" y="229" width="0.1336%" height="15" fill="rgb(249,55,30)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="239.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (3 samples, 0.13%)</title><rect x="76.7038%" y="213" width="0.1336%" height="15" fill="rgb(237,47,42)" fg:x="1722" fg:w="3"/><text x="76.9538%" y="223.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::contains_key (2 samples, 0.09%)</title><rect x="76.7483%" y="197" width="0.0891%" height="15" fill="rgb(211,20,18)" fg:x="1723" fg:w="2"/><text x="76.9983%" y="207.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (8 samples, 0.36%)</title><rect x="76.8374%" y="229" width="0.3563%" height="15" fill="rgb(231,203,46)" fg:x="1725" fg:w="8"/><text x="77.0874%" y="239.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (6 samples, 0.27%)</title><rect x="77.1938%" y="229" width="0.2673%" height="15" fill="rgb(237,142,3)" fg:x="1733" fg:w="6"/><text x="77.4438%" y="239.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (6 samples, 0.27%)</title><rect x="77.1938%" y="213" width="0.2673%" height="15" fill="rgb(241,107,1)" fg:x="1733" fg:w="6"/><text x="77.4438%" y="223.50"></text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (14 samples, 0.62%)</title><rect x="77.4610%" y="229" width="0.6236%" height="15" fill="rgb(229,83,13)" fg:x="1739" fg:w="14"/><text x="77.7110%" y="239.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (14 samples, 0.62%)</title><rect x="77.4610%" y="213" width="0.6236%" height="15" fill="rgb(241,91,40)" fg:x="1739" fg:w="14"/><text x="77.7110%" y="223.50"></text></g><g><title>httparse::parse_headers_iter_uninit (14 samples, 0.62%)</title><rect x="77.4610%" y="197" width="0.6236%" height="15" fill="rgb(225,3,45)" fg:x="1739" fg:w="14"/><text x="77.7110%" y="207.50"></text></g><g><title>httparse::simd::runtime::match_header_value_vectored (4 samples, 0.18%)</title><rect x="77.9065%" y="181" width="0.1782%" height="15" fill="rgb(244,223,14)" fg:x="1749" fg:w="4"/><text x="78.1565%" y="191.50"></text></g><g><title>httparse::simd::avx2::match_header_value_char_32_avx (1 samples, 0.04%)</title><rect x="78.0401%" y="165" width="0.0445%" height="15" fill="rgb(224,124,37)" fg:x="1752" fg:w="1"/><text x="78.2901%" y="175.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 1.29%)</title><rect x="76.8374%" y="549" width="1.2918%" height="15" fill="rgb(251,171,30)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="559.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (29 samples, 1.29%)</title><rect x="76.8374%" y="533" width="1.2918%" height="15" fill="rgb(236,46,54)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="517" width="1.2918%" height="15" fill="rgb(245,213,5)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="527.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="501" width="1.2918%" height="15" fill="rgb(230,144,27)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (29 samples, 1.29%)</title><rect x="76.8374%" y="485" width="1.2918%" height="15" fill="rgb(220,86,6)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (29 samples, 1.29%)</title><rect x="76.8374%" y="469" width="1.2918%" height="15" fill="rgb(240,20,13)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="479.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (29 samples, 1.29%)</title><rect x="76.8374%" y="453" width="1.2918%" height="15" fill="rgb(217,89,34)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (29 samples, 1.29%)</title><rect x="76.8374%" y="437" width="1.2918%" height="15" fill="rgb(229,13,5)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (29 samples, 1.29%)</title><rect x="76.8374%" y="421" width="1.2918%" height="15" fill="rgb(244,67,35)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="431.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="405" width="1.2918%" height="15" fill="rgb(221,40,2)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="415.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="389" width="1.2918%" height="15" fill="rgb(237,157,21)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="399.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="373" width="1.2918%" height="15" fill="rgb(222,94,11)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="383.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="357" width="1.2918%" height="15" fill="rgb(249,113,6)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="367.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (29 samples, 1.29%)</title><rect x="76.8374%" y="341" width="1.2918%" height="15" fill="rgb(238,137,36)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="351.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (29 samples, 1.29%)</title><rect x="76.8374%" y="325" width="1.2918%" height="15" fill="rgb(210,102,26)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="335.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (29 samples, 1.29%)</title><rect x="76.8374%" y="309" width="1.2918%" height="15" fill="rgb(218,30,30)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="319.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (29 samples, 1.29%)</title><rect x="76.8374%" y="293" width="1.2918%" height="15" fill="rgb(214,67,26)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="303.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (29 samples, 1.29%)</title><rect x="76.8374%" y="277" width="1.2918%" height="15" fill="rgb(251,9,53)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="287.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (29 samples, 1.29%)</title><rect x="76.8374%" y="261" width="1.2918%" height="15" fill="rgb(228,204,25)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="271.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (29 samples, 1.29%)</title><rect x="76.8374%" y="245" width="1.2918%" height="15" fill="rgb(207,153,8)" fg:x="1725" fg:w="29"/><text x="77.0874%" y="255.50"></text></g><g><title>hyper::headers::content_length_parse_all (1 samples, 0.04%)</title><rect x="78.0846%" y="229" width="0.0445%" height="15" fill="rgb(242,9,16)" fg:x="1753" fg:w="1"/><text x="78.3346%" y="239.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (1 samples, 0.04%)</title><rect x="78.0846%" y="213" width="0.0445%" height="15" fill="rgb(217,211,10)" fg:x="1753" fg:w="1"/><text x="78.3346%" y="223.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="78.1737%" y="293" width="0.0445%" height="15" fill="rgb(219,228,52)" fg:x="1755" fg:w="1"/><text x="78.4237%" y="303.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="78.3964%" y="277" width="0.0891%" height="15" fill="rgb(231,92,29)" fg:x="1760" fg:w="2"/><text x="78.6464%" y="287.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="78.4855%" y="277" width="0.0891%" height="15" fill="rgb(232,8,23)" fg:x="1762" fg:w="2"/><text x="78.7355%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="78.5746%" y="277" width="0.0445%" height="15" fill="rgb(216,211,34)" fg:x="1764" fg:w="1"/><text x="78.8246%" y="287.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.04%)</title><rect x="78.6192%" y="261" width="0.0445%" height="15" fill="rgb(236,151,0)" fg:x="1765" fg:w="1"/><text x="78.8692%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.09%)</title><rect x="78.6192%" y="277" width="0.0891%" height="15" fill="rgb(209,168,3)" fg:x="1765" fg:w="2"/><text x="78.8692%" y="287.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task (1 samples, 0.04%)</title><rect x="78.6637%" y="261" width="0.0445%" height="15" fill="rgb(208,129,28)" fg:x="1766" fg:w="1"/><text x="78.9137%" y="271.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (1 samples, 0.04%)</title><rect x="78.7082%" y="277" width="0.0445%" height="15" fill="rgb(229,78,22)" fg:x="1767" fg:w="1"/><text x="78.9582%" y="287.50"></text></g><g><title>tokio::runtime::coop::Budget::unconstrained (1 samples, 0.04%)</title><rect x="78.7528%" y="277" width="0.0445%" height="15" fill="rgb(228,187,13)" fg:x="1768" fg:w="1"/><text x="79.0028%" y="287.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (1 samples, 0.04%)</title><rect x="78.7973%" y="277" width="0.0445%" height="15" fill="rgb(240,119,24)" fg:x="1769" fg:w="1"/><text x="79.0473%" y="287.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (1 samples, 0.04%)</title><rect x="78.8419%" y="277" width="0.0445%" height="15" fill="rgb(209,194,42)" fg:x="1770" fg:w="1"/><text x="79.0919%" y="287.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.04%)</title><rect x="78.8864%" y="277" width="0.0445%" height="15" fill="rgb(247,200,46)" fg:x="1771" fg:w="1"/><text x="79.1364%" y="287.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.80%)</title><rect x="78.2183%" y="293" width="0.8018%" height="15" fill="rgb(218,76,16)" fg:x="1756" fg:w="18"/><text x="78.4683%" y="303.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (2 samples, 0.09%)</title><rect x="78.9310%" y="277" width="0.0891%" height="15" fill="rgb(225,21,48)" fg:x="1772" fg:w="2"/><text x="79.1810%" y="287.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.04%)</title><rect x="78.9755%" y="261" width="0.0445%" height="15" fill="rgb(239,223,50)" fg:x="1773" fg:w="1"/><text x="79.2255%" y="271.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="78.1292%" y="373" width="0.9354%" height="15" fill="rgb(244,45,21)" fg:x="1754" fg:w="21"/><text x="78.3792%" y="383.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="78.1292%" y="357" width="0.9354%" height="15" fill="rgb(232,33,43)" fg:x="1754" fg:w="21"/><text x="78.3792%" y="367.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="78.1292%" y="341" width="0.9354%" height="15" fill="rgb(209,8,3)" fg:x="1754" fg:w="21"/><text x="78.3792%" y="351.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="78.1292%" y="325" width="0.9354%" height="15" fill="rgb(214,25,53)" fg:x="1754" fg:w="21"/><text x="78.3792%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.94%)</title><rect x="78.1292%" y="309" width="0.9354%" height="15" fill="rgb(254,186,54)" fg:x="1754" fg:w="21"/><text x="78.3792%" y="319.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="79.0200%" y="293" width="0.0445%" height="15" fill="rgb(208,174,49)" fg:x="1774" fg:w="1"/><text x="79.2700%" y="303.50"></text></g><g><title>__memcpy_ssse3 (5 samples, 0.22%)</title><rect x="79.2873%" y="293" width="0.2227%" height="15" fill="rgb(233,191,51)" fg:x="1780" fg:w="5"/><text x="79.5373%" y="303.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="79.5100%" y="293" width="0.0445%" height="15" fill="rgb(222,134,10)" fg:x="1785" fg:w="1"/><text x="79.7600%" y="303.50"></text></g><g><title>hyper::client::connect::Connected::extra (1 samples, 0.04%)</title><rect x="79.6437%" y="277" width="0.0445%" height="15" fill="rgb(230,226,20)" fg:x="1788" fg:w="1"/><text x="79.8937%" y="287.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="79.6437%" y="261" width="0.0445%" height="15" fill="rgb(251,111,25)" fg:x="1788" fg:w="1"/><text x="79.8937%" y="271.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::local_addr (7 samples, 0.31%)</title><rect x="79.6882%" y="277" width="0.3118%" height="15" fill="rgb(224,40,46)" fg:x="1789" fg:w="7"/><text x="79.9382%" y="287.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::local_addr (6 samples, 0.27%)</title><rect x="79.7327%" y="261" width="0.2673%" height="15" fill="rgb(236,108,47)" fg:x="1790" fg:w="6"/><text x="79.9827%" y="271.50"></text></g><g><title>std::net::tcp::TcpListener::local_addr (6 samples, 0.27%)</title><rect x="79.7327%" y="245" width="0.2673%" height="15" fill="rgb(234,93,0)" fg:x="1790" fg:w="6"/><text x="79.9827%" y="255.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr (5 samples, 0.22%)</title><rect x="79.7773%" y="229" width="0.2227%" height="15" fill="rgb(224,213,32)" fg:x="1791" fg:w="5"/><text x="80.0273%" y="239.50"></text></g><g><title>__GI___getsockname (2 samples, 0.09%)</title><rect x="79.9109%" y="213" width="0.0891%" height="15" fill="rgb(251,11,48)" fg:x="1794" fg:w="2"/><text x="80.1609%" y="223.50"></text></g><g><title>hyper::client::connect::http::&lt;impl hyper::client::connect::Connection for tokio::net::tcp::stream::TcpStream&gt;::connected (16 samples, 0.71%)</title><rect x="79.5546%" y="293" width="0.7127%" height="15" fill="rgb(236,173,5)" fg:x="1786" fg:w="16"/><text x="79.8046%" y="303.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::peer_addr (6 samples, 0.27%)</title><rect x="80.0000%" y="277" width="0.2673%" height="15" fill="rgb(230,95,12)" fg:x="1796" fg:w="6"/><text x="80.2500%" y="287.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::peer_addr (5 samples, 0.22%)</title><rect x="80.0445%" y="261" width="0.2227%" height="15" fill="rgb(232,209,1)" fg:x="1797" fg:w="5"/><text x="80.2945%" y="271.50"></text></g><g><title>std::net::tcp::TcpStream::peer_addr (5 samples, 0.22%)</title><rect x="80.0445%" y="245" width="0.2227%" height="15" fill="rgb(232,6,1)" fg:x="1797" fg:w="5"/><text x="80.2945%" y="255.50"></text></g><g><title>std::sys_common::net::TcpStream::peer_addr (3 samples, 0.13%)</title><rect x="80.1336%" y="229" width="0.1336%" height="15" fill="rgb(210,224,50)" fg:x="1799" fg:w="3"/><text x="80.3836%" y="239.50"></text></g><g><title>__GI___getpeername (2 samples, 0.09%)</title><rect x="80.1782%" y="213" width="0.0891%" height="15" fill="rgb(228,127,35)" fg:x="1800" fg:w="2"/><text x="80.4282%" y="223.50"></text></g><g><title>&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (36 samples, 1.60%)</title><rect x="79.1091%" y="309" width="1.6036%" height="15" fill="rgb(245,102,45)" fg:x="1776" fg:w="36"/><text x="79.3591%" y="319.50"></text></g><g><title>malloc (10 samples, 0.45%)</title><rect x="80.2673%" y="293" width="0.4454%" height="15" fill="rgb(214,1,49)" fg:x="1802" fg:w="10"/><text x="80.5173%" y="303.50"></text></g><g><title>_int_malloc (9 samples, 0.40%)</title><rect x="80.3118%" y="277" width="0.4009%" height="15" fill="rgb(226,163,40)" fg:x="1803" fg:w="9"/><text x="80.5618%" y="287.50"></text></g><g><title>malloc_consolidate (2 samples, 0.09%)</title><rect x="80.6236%" y="261" width="0.0891%" height="15" fill="rgb(239,212,28)" fg:x="1810" fg:w="2"/><text x="80.8736%" y="271.50"></text></g><g><title>_int_free (4 samples, 0.18%)</title><rect x="80.8018%" y="293" width="0.1782%" height="15" fill="rgb(220,20,13)" fg:x="1814" fg:w="4"/><text x="81.0518%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="80.9800%" y="293" width="0.0445%" height="15" fill="rgb(210,164,35)" fg:x="1818" fg:w="1"/><text x="81.2300%" y="303.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.45%)</title><rect x="80.7127%" y="309" width="0.4454%" height="15" fill="rgb(248,109,41)" fg:x="1812" fg:w="10"/><text x="80.9627%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;hyper::client::connect::http::HttpConnector,http::uri::Uri&gt;&gt;&gt; (3 samples, 0.13%)</title><rect x="81.0245%" y="293" width="0.1336%" height="15" fill="rgb(238,23,50)" fg:x="1819" fg:w="3"/><text x="81.2745%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;hyper::client::connect::http::HttpConnector as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}}&gt; (2 samples, 0.09%)</title><rect x="81.0690%" y="277" width="0.0891%" height="15" fill="rgb(211,48,49)" fg:x="1820" fg:w="2"/><text x="81.3190%" y="287.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (69 samples, 3.07%)</title><rect x="78.1292%" y="485" width="3.0735%" height="15" fill="rgb(223,36,21)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="495.50">&lt;to..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (69 samples, 3.07%)</title><rect x="78.1292%" y="469" width="3.0735%" height="15" fill="rgb(207,123,46)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="479.50">&lt;to..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (69 samples, 3.07%)</title><rect x="78.1292%" y="453" width="3.0735%" height="15" fill="rgb(240,218,32)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="463.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (69 samples, 3.07%)</title><rect x="78.1292%" y="437" width="3.0735%" height="15" fill="rgb(252,5,43)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="447.50">&lt;fu..</text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call::_{{closure}} (69 samples, 3.07%)</title><rect x="78.1292%" y="421" width="3.0735%" height="15" fill="rgb(252,84,19)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="431.50">&lt;F ..</text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (69 samples, 3.07%)</title><rect x="78.1292%" y="405" width="3.0735%" height="15" fill="rgb(243,152,39)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="415.50">&lt;hy..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (69 samples, 3.07%)</title><rect x="78.1292%" y="389" width="3.0735%" height="15" fill="rgb(234,160,15)" fg:x="1754" fg:w="69"/><text x="78.3792%" y="399.50">hyp..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (48 samples, 2.14%)</title><rect x="79.0646%" y="373" width="2.1381%" height="15" fill="rgb(237,34,20)" fg:x="1775" fg:w="48"/><text x="79.3146%" y="383.50">&lt;..</text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (48 samples, 2.14%)</title><rect x="79.0646%" y="357" width="2.1381%" height="15" fill="rgb(229,97,13)" fg:x="1775" fg:w="48"/><text x="79.3146%" y="367.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (48 samples, 2.14%)</title><rect x="79.0646%" y="341" width="2.1381%" height="15" fill="rgb(234,71,50)" fg:x="1775" fg:w="48"/><text x="79.3146%" y="351.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (48 samples, 2.14%)</title><rect x="79.0646%" y="325" width="2.1381%" height="15" fill="rgb(253,155,4)" fg:x="1775" fg:w="48"/><text x="79.3146%" y="335.50">&lt;..</text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="81.1581%" y="309" width="0.0445%" height="15" fill="rgb(222,185,37)" fg:x="1822" fg:w="1"/><text x="81.4081%" y="319.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="81.4699%" y="421" width="0.0445%" height="15" fill="rgb(251,177,13)" fg:x="1829" fg:w="1"/><text x="81.7199%" y="431.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="81.5145%" y="421" width="0.0445%" height="15" fill="rgb(250,179,40)" fg:x="1830" fg:w="1"/><text x="81.7645%" y="431.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="81.6481%" y="405" width="0.0445%" height="15" fill="rgb(242,44,2)" fg:x="1833" fg:w="1"/><text x="81.8981%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.04%)</title><rect x="81.6481%" y="389" width="0.0445%" height="15" fill="rgb(216,177,13)" fg:x="1833" fg:w="1"/><text x="81.8981%" y="399.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="81.6927%" y="405" width="0.0445%" height="15" fill="rgb(216,106,43)" fg:x="1834" fg:w="1"/><text x="81.9427%" y="415.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (6 samples, 0.27%)</title><rect x="81.5590%" y="421" width="0.2673%" height="15" fill="rgb(216,183,2)" fg:x="1831" fg:w="6"/><text x="81.8090%" y="431.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="81.7372%" y="405" width="0.0891%" height="15" fill="rgb(249,75,3)" fg:x="1835" fg:w="2"/><text x="81.9872%" y="415.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.04%)</title><rect x="81.8263%" y="421" width="0.0445%" height="15" fill="rgb(219,67,39)" fg:x="1837" fg:w="1"/><text x="82.0763%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (2 samples, 0.09%)</title><rect x="81.8708%" y="405" width="0.0891%" height="15" fill="rgb(253,228,2)" fg:x="1838" fg:w="2"/><text x="82.1208%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (4 samples, 0.18%)</title><rect x="81.8708%" y="421" width="0.1782%" height="15" fill="rgb(235,138,27)" fg:x="1838" fg:w="4"/><text x="82.1208%" y="431.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="81.9599%" y="405" width="0.0891%" height="15" fill="rgb(236,97,51)" fg:x="1840" fg:w="2"/><text x="82.2099%" y="415.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (3 samples, 0.13%)</title><rect x="82.0490%" y="421" width="0.1336%" height="15" fill="rgb(240,80,30)" fg:x="1842" fg:w="3"/><text x="82.2990%" y="431.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (1 samples, 0.04%)</title><rect x="82.3608%" y="405" width="0.0445%" height="15" fill="rgb(230,178,19)" fg:x="1849" fg:w="1"/><text x="82.6108%" y="415.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (6 samples, 0.27%)</title><rect x="82.1826%" y="421" width="0.2673%" height="15" fill="rgb(210,190,27)" fg:x="1845" fg:w="6"/><text x="82.4326%" y="431.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.04%)</title><rect x="82.4053%" y="405" width="0.0445%" height="15" fill="rgb(222,107,31)" fg:x="1850" fg:w="1"/><text x="82.6553%" y="415.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (2 samples, 0.09%)</title><rect x="82.4499%" y="421" width="0.0891%" height="15" fill="rgb(216,127,34)" fg:x="1851" fg:w="2"/><text x="82.6999%" y="431.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (12 samples, 0.53%)</title><rect x="82.5390%" y="421" width="0.5345%" height="15" fill="rgb(234,116,52)" fg:x="1853" fg:w="12"/><text x="82.7890%" y="431.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (6 samples, 0.27%)</title><rect x="82.8062%" y="405" width="0.2673%" height="15" fill="rgb(222,124,15)" fg:x="1859" fg:w="6"/><text x="83.0562%" y="415.50"></text></g><g><title>http::uri::Uri::from_shared (5 samples, 0.22%)</title><rect x="83.0735%" y="421" width="0.2227%" height="15" fill="rgb(231,179,28)" fg:x="1865" fg:w="5"/><text x="83.3235%" y="431.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (1 samples, 0.04%)</title><rect x="83.2517%" y="405" width="0.0445%" height="15" fill="rgb(226,93,45)" fg:x="1869" fg:w="1"/><text x="83.5017%" y="415.50"></text></g><g><title>httparse::parse_headers_iter_uninit (6 samples, 0.27%)</title><rect x="83.4298%" y="389" width="0.2673%" height="15" fill="rgb(215,8,51)" fg:x="1873" fg:w="6"/><text x="83.6798%" y="399.50"></text></g><g><title>httparse::simd::runtime::match_header_value_vectored (2 samples, 0.09%)</title><rect x="83.6080%" y="373" width="0.0891%" height="15" fill="rgb(223,106,5)" fg:x="1877" fg:w="2"/><text x="83.8580%" y="383.50"></text></g><g><title>httparse::simd::sse42::match_header_value_char_16_sse (2 samples, 0.09%)</title><rect x="83.6080%" y="357" width="0.0891%" height="15" fill="rgb(250,191,5)" fg:x="1877" fg:w="2"/><text x="83.8580%" y="367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (127 samples, 5.66%)</title><rect x="78.1292%" y="549" width="5.6570%" height="15" fill="rgb(242,132,44)" fg:x="1754" fg:w="127"/><text x="78.3792%" y="559.50">tokio::..</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (127 samples, 5.66%)</title><rect x="78.1292%" y="533" width="5.6570%" height="15" fill="rgb(251,152,29)" fg:x="1754" fg:w="127"/><text x="78.3792%" y="543.50">&lt;hyper:..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (127 samples, 5.66%)</title><rect x="78.1292%" y="517" width="5.6570%" height="15" fill="rgb(218,179,5)" fg:x="1754" fg:w="127"/><text x="78.3792%" y="527.50">hyper::..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (127 samples, 5.66%)</title><rect x="78.1292%" y="501" width="5.6570%" height="15" fill="rgb(227,67,19)" fg:x="1754" fg:w="127"/><text x="78.3792%" y="511.50">hyper::..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (58 samples, 2.58%)</title><rect x="81.2027%" y="485" width="2.5835%" height="15" fill="rgb(233,119,31)" fg:x="1823" fg:w="58"/><text x="81.4527%" y="495.50">hy..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (58 samples, 2.58%)</title><rect x="81.2027%" y="469" width="2.5835%" height="15" fill="rgb(241,120,22)" fg:x="1823" fg:w="58"/><text x="81.4527%" y="479.50">hy..</text></g><g><title>hyper::proto::h1::role::parse_headers (58 samples, 2.58%)</title><rect x="81.2027%" y="453" width="2.5835%" height="15" fill="rgb(224,102,30)" fg:x="1823" fg:w="58"/><text x="81.4527%" y="463.50">hy..</text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (58 samples, 2.58%)</title><rect x="81.2027%" y="437" width="2.5835%" height="15" fill="rgb(210,164,37)" fg:x="1823" fg:w="58"/><text x="81.4527%" y="447.50">&lt;h..</text></g><g><title>httparse::Request::parse_with_uninit_headers (11 samples, 0.49%)</title><rect x="83.2962%" y="421" width="0.4900%" height="15" fill="rgb(226,191,16)" fg:x="1870" fg:w="11"/><text x="83.5462%" y="431.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (10 samples, 0.45%)</title><rect x="83.3408%" y="405" width="0.4454%" height="15" fill="rgb(214,40,45)" fg:x="1871" fg:w="10"/><text x="83.5908%" y="415.50"></text></g><g><title>httparse::simd::runtime::match_uri_vectored (2 samples, 0.09%)</title><rect x="83.6971%" y="389" width="0.0891%" height="15" fill="rgb(244,29,26)" fg:x="1879" fg:w="2"/><text x="83.9471%" y="399.50"></text></g><g><title>httparse::simd::avx2::match_url_char_32_avx (1 samples, 0.04%)</title><rect x="83.7416%" y="373" width="0.0445%" height="15" fill="rgb(216,16,5)" fg:x="1880" fg:w="1"/><text x="83.9916%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="83.7862%" y="229" width="0.0445%" height="15" fill="rgb(249,76,35)" fg:x="1881" fg:w="1"/><text x="84.0362%" y="239.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (2 samples, 0.09%)</title><rect x="83.8307%" y="229" width="0.0891%" height="15" fill="rgb(207,11,44)" fg:x="1882" fg:w="2"/><text x="84.0807%" y="239.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5 samples, 0.22%)</title><rect x="83.7862%" y="549" width="0.2227%" height="15" fill="rgb(228,190,49)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="533" width="0.2227%" height="15" fill="rgb(214,173,12)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="517" width="0.2227%" height="15" fill="rgb(218,26,35)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="527.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.22%)</title><rect x="83.7862%" y="501" width="0.2227%" height="15" fill="rgb(220,200,19)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (5 samples, 0.22%)</title><rect x="83.7862%" y="485" width="0.2227%" height="15" fill="rgb(239,95,49)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="495.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5 samples, 0.22%)</title><rect x="83.7862%" y="469" width="0.2227%" height="15" fill="rgb(235,85,53)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5 samples, 0.22%)</title><rect x="83.7862%" y="453" width="0.2227%" height="15" fill="rgb(233,133,31)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (5 samples, 0.22%)</title><rect x="83.7862%" y="437" width="0.2227%" height="15" fill="rgb(218,25,20)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="421" width="0.2227%" height="15" fill="rgb(252,210,38)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="405" width="0.2227%" height="15" fill="rgb(242,134,21)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="415.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="389" width="0.2227%" height="15" fill="rgb(213,28,48)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="399.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="373" width="0.2227%" height="15" fill="rgb(250,196,2)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="383.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (5 samples, 0.22%)</title><rect x="83.7862%" y="357" width="0.2227%" height="15" fill="rgb(227,5,17)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="367.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (5 samples, 0.22%)</title><rect x="83.7862%" y="341" width="0.2227%" height="15" fill="rgb(221,226,24)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="351.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (5 samples, 0.22%)</title><rect x="83.7862%" y="325" width="0.2227%" height="15" fill="rgb(211,5,48)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="335.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (5 samples, 0.22%)</title><rect x="83.7862%" y="309" width="0.2227%" height="15" fill="rgb(219,150,6)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="319.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (5 samples, 0.22%)</title><rect x="83.7862%" y="293" width="0.2227%" height="15" fill="rgb(251,46,16)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="303.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (5 samples, 0.22%)</title><rect x="83.7862%" y="277" width="0.2227%" height="15" fill="rgb(220,204,40)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="287.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (5 samples, 0.22%)</title><rect x="83.7862%" y="261" width="0.2227%" height="15" fill="rgb(211,85,2)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="271.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (5 samples, 0.22%)</title><rect x="83.7862%" y="245" width="0.2227%" height="15" fill="rgb(229,17,7)" fg:x="1881" fg:w="5"/><text x="84.0362%" y="255.50"></text></g><g><title>http::header::map::hash_elem_using (2 samples, 0.09%)</title><rect x="83.9198%" y="229" width="0.0891%" height="15" fill="rgb(239,72,28)" fg:x="1884" fg:w="2"/><text x="84.1698%" y="239.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (7 samples, 0.31%)</title><rect x="85.9243%" y="325" width="0.3118%" height="15" fill="rgb(230,47,54)" fg:x="1929" fg:w="7"/><text x="86.1743%" y="335.50"></text></g><g><title>http::extensions::Extensions::insert (5 samples, 0.22%)</title><rect x="86.0134%" y="309" width="0.2227%" height="15" fill="rgb(214,50,8)" fg:x="1931" fg:w="5"/><text x="86.2634%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.09%)</title><rect x="86.1470%" y="293" width="0.0891%" height="15" fill="rgb(216,198,43)" fg:x="1934" fg:w="2"/><text x="86.3970%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="86.1915%" y="277" width="0.0445%" height="15" fill="rgb(234,20,35)" fg:x="1935" fg:w="1"/><text x="86.4415%" y="287.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="86.2361%" y="325" width="0.0445%" height="15" fill="rgb(254,45,19)" fg:x="1936" fg:w="1"/><text x="86.4861%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="86.2806%" y="325" width="0.0445%" height="15" fill="rgb(219,14,44)" fg:x="1937" fg:w="1"/><text x="86.5306%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::connect::ExtraEnvelope&lt;hyper::client::connect::http::HttpInfo&gt;&gt; (1 samples, 0.04%)</title><rect x="86.3252%" y="325" width="0.0445%" height="15" fill="rgb(217,220,26)" fg:x="1938" fg:w="1"/><text x="86.5752%" y="335.50"></text></g><g><title>&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (14 samples, 0.62%)</title><rect x="85.8352%" y="341" width="0.6236%" height="15" fill="rgb(213,158,28)" fg:x="1927" fg:w="14"/><text x="86.0852%" y="351.50"></text></g><g><title>hyper::client::connect::Extra::set (2 samples, 0.09%)</title><rect x="86.3697%" y="325" width="0.0891%" height="15" fill="rgb(252,51,52)" fg:x="1939" fg:w="2"/><text x="86.6197%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.04%)</title><rect x="86.7261%" y="293" width="0.0445%" height="15" fill="rgb(246,89,16)" fg:x="1947" fg:w="1"/><text x="86.9761%" y="303.50"></text></g><g><title>_ZN4core3ptr717drop_in_place$LT$futures_util..future..future..flatten..Flatten$LT$futures_util..future..future..Map$LT$tokio..sync..oneshot..Receiver$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$C$hyper..client..conn..Http2SendRequest$LT$hyper..body..body..Body$GT$..send_request_retryable..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$GT$$GT$17h3aa88c9091cd0d37E.llvm.17386046841555904596 (1 samples, 0.04%)</title><rect x="86.7706%" y="293" width="0.0445%" height="15" fill="rgb(216,158,49)" fg:x="1948" fg:w="1"/><text x="87.0206%" y="303.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.36%)</title><rect x="86.5479%" y="325" width="0.3563%" height="15" fill="rgb(236,107,19)" fg:x="1943" fg:w="8"/><text x="86.7979%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (6 samples, 0.27%)</title><rect x="86.6370%" y="309" width="0.2673%" height="15" fill="rgb(228,185,30)" fg:x="1945" fg:w="6"/><text x="86.8870%" y="319.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="86.8151%" y="293" width="0.0891%" height="15" fill="rgb(246,134,8)" fg:x="1949" fg:w="2"/><text x="87.0651%" y="303.50"></text></g><g><title>_ZN4core3ptr1921drop_in_place$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..future..Then$LT$tokio..sync..oneshot..Receiver$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$C$hyper..client..conn..SendRequest$LT$hyper..body..body..Body$GT$..send_request_retryable..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$GT$$C$futures_util..future..either..Either$LT$futures_util..future..future..Then$LT$tokio..sync..oneshot..Receiver$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$C$hyper..client..conn..Http2SendRequest$LT$hyper..body..body..Body$GT$..send_request_retryable..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$http..response..Response$LT$hyper..body..body..Body$GT$$C$$LP$hyper..error..Error$C$core..option..Option$LT$http..request..Request$LT$hyper..body..body..Body$GT$$GT$$RP$$GT$$GT$$GT$$GT$$GT$17hafcaaa8b80a58a8bE.llvm.2465781205226999329 (4 samples, 0.18%)</title><rect x="86.9042%" y="325" width="0.1782%" height="15" fill="rgb(214,143,50)" fg:x="1951" fg:w="4"/><text x="87.1542%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.71%)</title><rect x="86.4588%" y="341" width="0.7127%" height="15" fill="rgb(228,75,8)" fg:x="1941" fg:w="16"/><text x="86.7088%" y="351.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="87.0824%" y="325" width="0.0891%" height="15" fill="rgb(207,175,4)" fg:x="1955" fg:w="2"/><text x="87.3324%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (33 samples, 1.47%)</title><rect x="85.7461%" y="357" width="1.4699%" height="15" fill="rgb(205,108,24)" fg:x="1925" fg:w="33"/><text x="85.9961%" y="367.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="87.1715%" y="341" width="0.0445%" height="15" fill="rgb(244,120,49)" fg:x="1957" fg:w="1"/><text x="87.4215%" y="351.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.04%)</title><rect x="88.1514%" y="309" width="0.0445%" height="15" fill="rgb(223,47,38)" fg:x="1979" fg:w="1"/><text x="88.4014%" y="319.50"></text></g><g><title>&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.27%)</title><rect x="87.9733%" y="325" width="0.2673%" height="15" fill="rgb(229,179,11)" fg:x="1975" fg:w="6"/><text x="88.2233%" y="335.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.04%)</title><rect x="88.1960%" y="309" width="0.0445%" height="15" fill="rgb(231,122,1)" fg:x="1980" fg:w="1"/><text x="88.4460%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (7 samples, 0.31%)</title><rect x="88.2405%" y="325" width="0.3118%" height="15" fill="rgb(245,119,9)" fg:x="1981" fg:w="7"/><text x="88.4905%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.22%)</title><rect x="88.3296%" y="309" width="0.2227%" height="15" fill="rgb(241,163,25)" fg:x="1983" fg:w="5"/><text x="88.5796%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="88.4633%" y="293" width="0.0891%" height="15" fill="rgb(217,214,3)" fg:x="1986" fg:w="2"/><text x="88.7133%" y="303.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="88.5078%" y="277" width="0.0445%" height="15" fill="rgb(240,86,28)" fg:x="1987" fg:w="1"/><text x="88.7578%" y="287.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="88.7305%" y="293" width="0.0891%" height="15" fill="rgb(215,47,9)" fg:x="1992" fg:w="2"/><text x="88.9805%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="88.7751%" y="277" width="0.0445%" height="15" fill="rgb(252,25,45)" fg:x="1993" fg:w="1"/><text x="89.0251%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (9 samples, 0.40%)</title><rect x="88.5523%" y="325" width="0.4009%" height="15" fill="rgb(251,164,9)" fg:x="1988" fg:w="9"/><text x="88.8023%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.31%)</title><rect x="88.6414%" y="309" width="0.3118%" height="15" fill="rgb(233,194,0)" fg:x="1990" fg:w="7"/><text x="88.8914%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="88.8196%" y="293" width="0.1336%" height="15" fill="rgb(249,111,24)" fg:x="1994" fg:w="3"/><text x="89.0696%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.31%)</title><rect x="88.9532%" y="309" width="0.3118%" height="15" fill="rgb(250,223,3)" fg:x="1997" fg:w="7"/><text x="89.2032%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="89.1314%" y="293" width="0.1336%" height="15" fill="rgb(236,178,37)" fg:x="2001" fg:w="3"/><text x="89.3814%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (14 samples, 0.62%)</title><rect x="88.9532%" y="325" width="0.6236%" height="15" fill="rgb(241,158,50)" fg:x="1997" fg:w="14"/><text x="89.2032%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.31%)</title><rect x="89.2650%" y="309" width="0.3118%" height="15" fill="rgb(213,121,41)" fg:x="2004" fg:w="7"/><text x="89.5150%" y="319.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="89.4878%" y="293" width="0.0891%" height="15" fill="rgb(240,92,3)" fg:x="2009" fg:w="2"/><text x="89.7378%" y="303.50"></text></g><g><title>hyper::client::pool::Expiration::new (2 samples, 0.09%)</title><rect x="89.5768%" y="325" width="0.0891%" height="15" fill="rgb(205,123,3)" fg:x="2011" fg:w="2"/><text x="89.8268%" y="335.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 2.18%)</title><rect x="87.5724%" y="341" width="2.1826%" height="15" fill="rgb(205,97,47)" fg:x="1966" fg:w="49"/><text x="87.8224%" y="351.50">&lt;..</text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="89.6659%" y="325" width="0.0891%" height="15" fill="rgb(247,152,14)" fg:x="2013" fg:w="2"/><text x="89.9159%" y="335.50"></text></g><g><title>_int_malloc (2 samples, 0.09%)</title><rect x="89.6659%" y="309" width="0.0891%" height="15" fill="rgb(248,195,53)" fg:x="2013" fg:w="2"/><text x="89.9159%" y="319.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.09%)</title><rect x="90.0668%" y="309" width="0.0891%" height="15" fill="rgb(226,201,16)" fg:x="2022" fg:w="2"/><text x="90.3168%" y="319.50"></text></g><g><title>_ZN4core3ptr986drop_in_place$LT$futures_util..future..try_future..try_flatten..TryFlatten$LT$futures_util..future..try_future..MapOk$LT$futures_util..future..try_future..MapErr$LT$hyper..service..oneshot..Oneshot$LT$hyper..client..connect..http..HttpConnector$C$http..uri..Uri$GT$$C$hyper..error..Error..new_connect$LT$hyper..client..connect..http..ConnectError$GT$$GT$$C$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$futures_util..future..either..Either$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$hyper..client..pool..Pooled$LT$hyper..client..client..PoolClient$LT$hyper..body..body..Body$GT$$GT$$C$hyper..error..Error$GT$$GT$$GT$$GT$$GT$17hd9e992f3deb19465E (1 samples, 0.04%)</title><rect x="90.1559%" y="309" width="0.0445%" height="15" fill="rgb(205,98,0)" fg:x="2024" fg:w="1"/><text x="90.4059%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="90.2004%" y="309" width="0.0891%" height="15" fill="rgb(214,191,48)" fg:x="2025" fg:w="2"/><text x="90.4504%" y="319.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (8 samples, 0.36%)</title><rect x="89.9777%" y="325" width="0.3563%" height="15" fill="rgb(237,112,39)" fg:x="2020" fg:w="8"/><text x="90.2277%" y="335.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connect_to::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.04%)</title><rect x="90.2895%" y="309" width="0.0445%" height="15" fill="rgb(247,203,27)" fg:x="2027" fg:w="1"/><text x="90.5395%" y="319.50"></text></g><g><title>_ZN4core3ptr1319drop_in_place$LT$hyper..common..lazy..Inner$LT$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..either..Either$LT$futures_util..future..try_future..AndThen$LT$futures_util..future..try_future..MapErr$LT$hyper..service..oneshot..Oneshot$LT$hyper..client..connect..http..HttpConnector$C$http..uri..Uri$GT$$C$hyper..error..Error..new_connect$LT$hyper..client..connect..http..ConnectError$GT$$GT$$C$futures_util..future..either..Either$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$hyper..client..pool..Pooled$LT$hyper..client..client..PoolClient$LT$hyper..body..body..Body$GT$$GT$$C$hyper..error..Error$GT$$GT$$GT$$C$hyper..client..client..Client$LT$hyper..client..connect..http..HttpConnector$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$hyper..client..pool..Pooled$LT$hyper..client..client..PoolClient$LT$hyper..body..body..Body$GT$$GT$$C$hyper..error..Error$GT$$GT$$GT$$GT$$GT$17h69ed0b754fa00694E.llvm.15914995798233221983 (2 samples, 0.09%)</title><rect x="90.3341%" y="325" width="0.0891%" height="15" fill="rgb(235,124,28)" fg:x="2028" fg:w="2"/><text x="90.5841%" y="335.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (17 samples, 0.76%)</title><rect x="89.7550%" y="341" width="0.7572%" height="15" fill="rgb(208,207,46)" fg:x="2015" fg:w="17"/><text x="90.0050%" y="351.50"></text></g><g><title>__memcpy_ssse3 (2 samples, 0.09%)</title><rect x="90.4232%" y="325" width="0.0891%" height="15" fill="rgb(234,176,4)" fg:x="2030" fg:w="2"/><text x="90.6732%" y="335.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (80 samples, 3.56%)</title><rect x="87.2160%" y="357" width="3.5635%" height="15" fill="rgb(230,133,28)" fg:x="1958" fg:w="80"/><text x="87.4660%" y="367.50">&lt;fut..</text></g><g><title>__memcpy_ssse3 (6 samples, 0.27%)</title><rect x="90.5122%" y="341" width="0.2673%" height="15" fill="rgb(211,137,40)" fg:x="2032" fg:w="6"/><text x="90.7622%" y="351.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="90.7795%" y="357" width="0.0891%" height="15" fill="rgb(254,35,13)" fg:x="2038" fg:w="2"/><text x="91.0295%" y="367.50"></text></g><g><title>bytes::bytes::shared_clone (2 samples, 0.09%)</title><rect x="90.7795%" y="341" width="0.0891%" height="15" fill="rgb(225,49,51)" fg:x="2038" fg:w="2"/><text x="91.0295%" y="351.50"></text></g><g><title>__memcpy_ssse3 (12 samples, 0.53%)</title><rect x="90.8686%" y="357" width="0.5345%" height="15" fill="rgb(251,10,15)" fg:x="2040" fg:w="12"/><text x="91.1186%" y="367.50"></text></g><g><title>__memmove_ssse3 (2 samples, 0.09%)</title><rect x="91.4031%" y="357" width="0.0891%" height="15" fill="rgb(228,207,15)" fg:x="2052" fg:w="2"/><text x="91.6531%" y="367.50"></text></g><g><title>bytes::bytes::shared_drop (2 samples, 0.09%)</title><rect x="91.4922%" y="357" width="0.0891%" height="15" fill="rgb(241,99,19)" fg:x="2054" fg:w="2"/><text x="91.7422%" y="367.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.04%)</title><rect x="91.5813%" y="357" width="0.0445%" height="15" fill="rgb(207,104,49)" fg:x="2056" fg:w="1"/><text x="91.8313%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (5 samples, 0.22%)</title><rect x="91.6258%" y="357" width="0.2227%" height="15" fill="rgb(234,99,18)" fg:x="2057" fg:w="5"/><text x="91.8758%" y="367.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="91.8040%" y="341" width="0.0445%" height="15" fill="rgb(213,191,49)" fg:x="2061" fg:w="1"/><text x="92.0540%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;hyper::client::connect::http::HttpConnector&gt;::connection_for::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="91.8486%" y="357" width="0.0445%" height="15" fill="rgb(210,226,19)" fg:x="2062" fg:w="1"/><text x="92.0986%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;hyper::client::connect::http::HttpConnector&gt;::send_request::{{closure}}&gt; (2 samples, 0.09%)</title><rect x="91.8931%" y="357" width="0.0891%" height="15" fill="rgb(229,97,18)" fg:x="2063" fg:w="2"/><text x="92.1431%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;hyper::client::connect::http::HttpConnector&gt;&gt; (3 samples, 0.13%)</title><rect x="91.9822%" y="357" width="0.1336%" height="15" fill="rgb(211,167,15)" fg:x="2065" fg:w="3"/><text x="92.2322%" y="367.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="92.4722%" y="325" width="0.0891%" height="15" fill="rgb(210,169,34)" fg:x="2076" fg:w="2"/><text x="92.7222%" y="335.50"></text></g><g><title>&lt;http::uri::authority::Authority as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="92.5612%" y="325" width="0.0445%" height="15" fill="rgb(241,121,31)" fg:x="2078" fg:w="1"/><text x="92.8112%" y="335.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="92.6058%" y="325" width="0.0891%" height="15" fill="rgb(232,40,11)" fg:x="2079" fg:w="2"/><text x="92.8558%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.04%)</title><rect x="92.6949%" y="325" width="0.0445%" height="15" fill="rgb(205,86,26)" fg:x="2081" fg:w="1"/><text x="92.9449%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="92.7394%" y="325" width="0.0445%" height="15" fill="rgb(231,126,28)" fg:x="2082" fg:w="1"/><text x="92.9894%" y="335.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain (4 samples, 0.18%)</title><rect x="92.7840%" y="325" width="0.1782%" height="15" fill="rgb(219,221,18)" fg:x="2083" fg:w="4"/><text x="93.0340%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="92.9176%" y="309" width="0.0445%" height="15" fill="rgb(211,40,0)" fg:x="2086" fg:w="1"/><text x="93.1676%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.31%)</title><rect x="92.9621%" y="325" width="0.3118%" height="15" fill="rgb(239,85,43)" fg:x="2087" fg:w="7"/><text x="93.2121%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="93.1849%" y="309" width="0.0891%" height="15" fill="rgb(231,55,21)" fg:x="2092" fg:w="2"/><text x="93.4349%" y="319.50"></text></g><g><title>&lt;http::uri::authority::Authority as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="93.2739%" y="309" width="0.0445%" height="15" fill="rgb(225,184,43)" fg:x="2094" fg:w="1"/><text x="93.5239%" y="319.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="93.3185%" y="309" width="0.0891%" height="15" fill="rgb(251,158,41)" fg:x="2095" fg:w="2"/><text x="93.5685%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Checkout&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (32 samples, 1.43%)</title><rect x="92.1158%" y="357" width="1.4254%" height="15" fill="rgb(234,159,37)" fg:x="2068" fg:w="32"/><text x="92.3658%" y="367.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 1.43%)</title><rect x="92.1158%" y="341" width="1.4254%" height="15" fill="rgb(216,204,22)" fg:x="2068" fg:w="32"/><text x="92.3658%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (6 samples, 0.27%)</title><rect x="93.2739%" y="325" width="0.2673%" height="15" fill="rgb(214,17,3)" fg:x="2094" fg:w="6"/><text x="93.5239%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.13%)</title><rect x="93.4076%" y="309" width="0.1336%" height="15" fill="rgb(212,111,17)" fg:x="2097" fg:w="3"/><text x="93.6576%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="93.4076%" y="293" width="0.1336%" height="15" fill="rgb(221,157,24)" fg:x="2097" fg:w="3"/><text x="93.6576%" y="303.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="94.0312%" y="309" width="0.0445%" height="15" fill="rgb(252,16,13)" fg:x="2111" fg:w="1"/><text x="94.2812%" y="319.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="94.2094%" y="277" width="0.0445%" height="15" fill="rgb(221,62,2)" fg:x="2115" fg:w="1"/><text x="94.4594%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="94.2094%" y="261" width="0.0445%" height="15" fill="rgb(247,87,22)" fg:x="2115" fg:w="1"/><text x="94.4594%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.18%)</title><rect x="94.1203%" y="293" width="0.1782%" height="15" fill="rgb(215,73,9)" fg:x="2113" fg:w="4"/><text x="94.3703%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="94.2539%" y="277" width="0.0445%" height="15" fill="rgb(207,175,33)" fg:x="2116" fg:w="1"/><text x="94.5039%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="94.4766%" y="277" width="0.0445%" height="15" fill="rgb(243,129,54)" fg:x="2121" fg:w="1"/><text x="94.7266%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 0.53%)</title><rect x="94.0757%" y="309" width="0.5345%" height="15" fill="rgb(227,119,45)" fg:x="2112" fg:w="12"/><text x="94.3257%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.31%)</title><rect x="94.2984%" y="293" width="0.3118%" height="15" fill="rgb(205,109,36)" fg:x="2117" fg:w="7"/><text x="94.5484%" y="303.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="94.5212%" y="277" width="0.0891%" height="15" fill="rgb(205,6,39)" fg:x="2122" fg:w="2"/><text x="94.7712%" y="287.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (1 samples, 0.04%)</title><rect x="94.6102%" y="293" width="0.0445%" height="15" fill="rgb(221,32,16)" fg:x="2124" fg:w="1"/><text x="94.8602%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (1 samples, 0.04%)</title><rect x="94.6993%" y="277" width="0.0445%" height="15" fill="rgb(228,144,50)" fg:x="2126" fg:w="1"/><text x="94.9493%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::CURRENT::FOO::__getit (1 samples, 0.04%)</title><rect x="94.7884%" y="229" width="0.0445%" height="15" fill="rgb(229,201,53)" fg:x="2128" fg:w="1"/><text x="95.0384%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (4 samples, 0.18%)</title><rect x="94.7439%" y="261" width="0.1782%" height="15" fill="rgb(249,153,27)" fg:x="2127" fg:w="4"/><text x="94.9939%" y="271.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.13%)</title><rect x="94.7884%" y="245" width="0.1336%" height="15" fill="rgb(227,106,25)" fg:x="2128" fg:w="3"/><text x="95.0384%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.09%)</title><rect x="94.8330%" y="229" width="0.0891%" height="15" fill="rgb(230,65,29)" fg:x="2129" fg:w="2"/><text x="95.0830%" y="239.50"></text></g><g><title>&lt;tokio::util::slab::Ref&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.09%)</title><rect x="94.9666%" y="245" width="0.0891%" height="15" fill="rgb(221,57,46)" fg:x="2132" fg:w="2"/><text x="95.2166%" y="255.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.09%)</title><rect x="95.0557%" y="245" width="0.0891%" height="15" fill="rgb(229,161,17)" fg:x="2134" fg:w="2"/><text x="95.3057%" y="255.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="95.1002%" y="229" width="0.0445%" height="15" fill="rgb(222,213,11)" fg:x="2135" fg:w="1"/><text x="95.3502%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (12 samples, 0.53%)</title><rect x="94.7439%" y="277" width="0.5345%" height="15" fill="rgb(235,35,13)" fg:x="2127" fg:w="12"/><text x="94.9939%" y="287.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (8 samples, 0.36%)</title><rect x="94.9220%" y="261" width="0.3563%" height="15" fill="rgb(233,158,34)" fg:x="2131" fg:w="8"/><text x="95.1720%" y="271.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (3 samples, 0.13%)</title><rect x="95.1448%" y="245" width="0.1336%" height="15" fill="rgb(215,151,48)" fg:x="2136" fg:w="3"/><text x="95.3948%" y="255.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (2 samples, 0.09%)</title><rect x="95.1893%" y="229" width="0.0891%" height="15" fill="rgb(229,84,14)" fg:x="2137" fg:w="2"/><text x="95.4393%" y="239.50"></text></g><g><title>hyper::common::exec::Exec::execute (18 samples, 0.80%)</title><rect x="94.6102%" y="309" width="0.8018%" height="15" fill="rgb(229,68,14)" fg:x="2124" fg:w="18"/><text x="94.8602%" y="319.50"></text></g><g><title>tokio::task::spawn::spawn (17 samples, 0.76%)</title><rect x="94.6548%" y="293" width="0.7572%" height="15" fill="rgb(243,106,26)" fg:x="2125" fg:w="17"/><text x="94.9048%" y="303.50"></text></g><g><title>tokio::runtime::task::id::Id::next (3 samples, 0.13%)</title><rect x="95.2784%" y="277" width="0.1336%" height="15" fill="rgb(206,45,38)" fg:x="2139" fg:w="3"/><text x="95.5284%" y="287.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="95.4120%" y="309" width="0.0445%" height="15" fill="rgb(226,6,15)" fg:x="2142" fg:w="1"/><text x="95.6620%" y="319.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="95.5011%" y="293" width="0.0445%" height="15" fill="rgb(232,22,54)" fg:x="2144" fg:w="1"/><text x="95.7511%" y="303.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 2.09%)</title><rect x="93.5412%" y="341" width="2.0935%" height="15" fill="rgb(229,222,32)" fg:x="2100" fg:w="47"/><text x="93.7912%" y="351.50">&lt;..</text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (43 samples, 1.92%)</title><rect x="93.7194%" y="325" width="1.9154%" height="15" fill="rgb(228,62,29)" fg:x="2104" fg:w="43"/><text x="93.9694%" y="335.50">h..</text></g><g><title>tokio::time::interval::interval (4 samples, 0.18%)</title><rect x="95.4566%" y="309" width="0.1782%" height="15" fill="rgb(251,103,34)" fg:x="2143" fg:w="4"/><text x="95.7066%" y="319.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="95.5457%" y="293" width="0.0891%" height="15" fill="rgb(233,12,30)" fg:x="2145" fg:w="2"/><text x="95.7957%" y="303.50"></text></g><g><title>_int_malloc (2 samples, 0.09%)</title><rect x="95.5457%" y="277" width="0.0891%" height="15" fill="rgb(238,52,0)" fg:x="2145" fg:w="2"/><text x="95.7957%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (49 samples, 2.18%)</title><rect x="93.5412%" y="357" width="2.1826%" height="15" fill="rgb(223,98,5)" fg:x="2100" fg:w="49"/><text x="93.7912%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="95.6347%" y="341" width="0.0891%" height="15" fill="rgb(228,75,37)" fg:x="2147" fg:w="2"/><text x="95.8847%" y="351.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (2 samples, 0.09%)</title><rect x="95.9465%" y="325" width="0.0891%" height="15" fill="rgb(205,115,49)" fg:x="2154" fg:w="2"/><text x="96.1965%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.04%)</title><rect x="95.9911%" y="309" width="0.0445%" height="15" fill="rgb(250,154,43)" fg:x="2155" fg:w="1"/><text x="96.2411%" y="319.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="96.0356%" y="325" width="0.0445%" height="15" fill="rgb(226,43,29)" fg:x="2156" fg:w="1"/><text x="96.2856%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="96.0802%" y="325" width="0.0445%" height="15" fill="rgb(249,228,39)" fg:x="2157" fg:w="1"/><text x="96.3302%" y="335.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (5 samples, 0.22%)</title><rect x="95.9465%" y="341" width="0.2227%" height="15" fill="rgb(216,79,43)" fg:x="2154" fg:w="5"/><text x="96.1965%" y="351.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="96.1247%" y="325" width="0.0445%" height="15" fill="rgb(228,95,12)" fg:x="2158" fg:w="1"/><text x="96.3747%" y="335.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_phase_two (1 samples, 0.04%)</title><rect x="96.1693%" y="341" width="0.0445%" height="15" fill="rgb(249,221,15)" fg:x="2159" fg:w="1"/><text x="96.4193%" y="351.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="96.3029%" y="325" width="0.0445%" height="15" fill="rgb(233,34,13)" fg:x="2162" fg:w="1"/><text x="96.5529%" y="335.50"></text></g><g><title>http::uri::authority::host (9 samples, 0.40%)</title><rect x="96.2138%" y="341" width="0.4009%" height="15" fill="rgb(214,103,39)" fg:x="2160" fg:w="9"/><text x="96.4638%" y="351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (6 samples, 0.27%)</title><rect x="96.3474%" y="325" width="0.2673%" height="15" fill="rgb(251,126,39)" fg:x="2163" fg:w="6"/><text x="96.5974%" y="335.50"></text></g><g><title>core::slice::memchr::memrchr (3 samples, 0.13%)</title><rect x="96.4811%" y="309" width="0.1336%" height="15" fill="rgb(214,216,36)" fg:x="2166" fg:w="3"/><text x="96.7311%" y="319.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (31 samples, 1.38%)</title><rect x="95.7238%" y="357" width="1.3808%" height="15" fill="rgb(220,221,8)" fg:x="2149" fg:w="31"/><text x="95.9738%" y="367.50"></text></g><g><title>hyper::client::client::get_non_default_port (11 samples, 0.49%)</title><rect x="96.6147%" y="341" width="0.4900%" height="15" fill="rgb(240,216,3)" fg:x="2169" fg:w="11"/><text x="96.8647%" y="351.50"></text></g><g><title>http::uri::Uri::port (10 samples, 0.45%)</title><rect x="96.6592%" y="325" width="0.4454%" height="15" fill="rgb(232,218,17)" fg:x="2170" fg:w="10"/><text x="96.9092%" y="335.50"></text></g><g><title>http::uri::authority::Authority::port (9 samples, 0.40%)</title><rect x="96.7038%" y="309" width="0.4009%" height="15" fill="rgb(229,163,45)" fg:x="2171" fg:w="9"/><text x="96.9538%" y="319.50"></text></g><g><title>core::str::pattern::StrSearcher::new (6 samples, 0.27%)</title><rect x="96.8374%" y="293" width="0.2673%" height="15" fill="rgb(231,110,42)" fg:x="2174" fg:w="6"/><text x="97.0874%" y="303.50"></text></g><g><title>__memcmp_sse4_1 (2 samples, 0.09%)</title><rect x="97.0156%" y="277" width="0.0891%" height="15" fill="rgb(208,170,48)" fg:x="2178" fg:w="2"/><text x="97.2656%" y="287.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="97.1492%" y="325" width="0.0445%" height="15" fill="rgb(239,116,25)" fg:x="2181" fg:w="1"/><text x="97.3992%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.04%)</title><rect x="97.1938%" y="325" width="0.0445%" height="15" fill="rgb(219,200,50)" fg:x="2182" fg:w="1"/><text x="97.4438%" y="335.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::entry (4 samples, 0.18%)</title><rect x="97.1047%" y="357" width="0.1782%" height="15" fill="rgb(245,200,0)" fg:x="2180" fg:w="4"/><text x="97.3547%" y="367.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (3 samples, 0.13%)</title><rect x="97.1492%" y="341" width="0.1336%" height="15" fill="rgb(245,119,33)" fg:x="2181" fg:w="3"/><text x="97.3992%" y="351.50"></text></g><g><title>http::header::map::Danger::is_yellow (1 samples, 0.04%)</title><rect x="97.2383%" y="325" width="0.0445%" height="15" fill="rgb(231,125,12)" fg:x="2183" fg:w="1"/><text x="97.4883%" y="335.50"></text></g><g><title>http::uri::builder::Builder::build (4 samples, 0.18%)</title><rect x="97.3719%" y="341" width="0.1782%" height="15" fill="rgb(216,96,41)" fg:x="2186" fg:w="4"/><text x="97.6219%" y="351.50"></text></g><g><title>http::uri::Uri::from_parts (3 samples, 0.13%)</title><rect x="97.4165%" y="325" width="0.1336%" height="15" fill="rgb(248,43,45)" fg:x="2187" fg:w="3"/><text x="97.6665%" y="335.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="97.7283%" y="309" width="0.0445%" height="15" fill="rgb(217,222,7)" fg:x="2194" fg:w="1"/><text x="97.9783%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.04%)</title><rect x="97.7283%" y="293" width="0.0445%" height="15" fill="rgb(233,28,6)" fg:x="2194" fg:w="1"/><text x="97.9783%" y="303.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (3 samples, 0.13%)</title><rect x="97.6837%" y="325" width="0.1336%" height="15" fill="rgb(231,218,15)" fg:x="2193" fg:w="3"/><text x="97.9337%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="97.7728%" y="309" width="0.0445%" height="15" fill="rgb(226,171,48)" fg:x="2195" fg:w="1"/><text x="98.0228%" y="319.50"></text></g><g><title>http::uri::builder::Builder::path_and_query (7 samples, 0.31%)</title><rect x="97.5501%" y="341" width="0.3118%" height="15" fill="rgb(235,201,9)" fg:x="2190" fg:w="7"/><text x="97.8001%" y="351.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (1 samples, 0.04%)</title><rect x="97.8174%" y="325" width="0.0445%" height="15" fill="rgb(217,80,15)" fg:x="2196" fg:w="1"/><text x="98.0674%" y="335.50"></text></g><g><title>hyper::client::client::domain_as_uri (15 samples, 0.67%)</title><rect x="97.2829%" y="357" width="0.6682%" height="15" fill="rgb(219,152,8)" fg:x="2184" fg:w="15"/><text x="97.5329%" y="367.50"></text></g><g><title>http::uri::builder::Builder::scheme (2 samples, 0.09%)</title><rect x="97.8619%" y="341" width="0.0891%" height="15" fill="rgb(243,107,38)" fg:x="2197" fg:w="2"/><text x="98.1119%" y="351.50"></text></g><g><title>hyper::client::client::origin_form (4 samples, 0.18%)</title><rect x="97.9510%" y="357" width="0.1782%" height="15" fill="rgb(231,17,5)" fg:x="2199" fg:w="4"/><text x="98.2010%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (2 samples, 0.09%)</title><rect x="98.0401%" y="341" width="0.0891%" height="15" fill="rgb(209,25,54)" fg:x="2201" fg:w="2"/><text x="98.2901%" y="351.50"></text></g><g><title>bytes::bytes::shared_drop (2 samples, 0.09%)</title><rect x="98.0401%" y="325" width="0.0891%" height="15" fill="rgb(219,0,2)" fg:x="2201" fg:w="2"/><text x="98.2901%" y="335.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="98.2183%" y="325" width="0.0445%" height="15" fill="rgb(246,9,5)" fg:x="2205" fg:w="1"/><text x="98.4683%" y="335.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="98.3073%" y="309" width="0.0445%" height="15" fill="rgb(226,159,4)" fg:x="2207" fg:w="1"/><text x="98.5573%" y="319.50"></text></g><g><title>__memmove_ssse3 (5 samples, 0.22%)</title><rect x="98.3519%" y="309" width="0.2227%" height="15" fill="rgb(219,175,34)" fg:x="2208" fg:w="5"/><text x="98.6019%" y="319.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.09%)</title><rect x="98.5746%" y="309" width="0.0891%" height="15" fill="rgb(236,10,46)" fg:x="2213" fg:w="2"/><text x="98.8246%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.09%)</title><rect x="98.5746%" y="293" width="0.0891%" height="15" fill="rgb(240,211,16)" fg:x="2213" fg:w="2"/><text x="98.8246%" y="303.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="98.5746%" y="277" width="0.0891%" height="15" fill="rgb(205,3,43)" fg:x="2213" fg:w="2"/><text x="98.8246%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.09%)</title><rect x="98.5746%" y="261" width="0.0891%" height="15" fill="rgb(245,7,22)" fg:x="2213" fg:w="2"/><text x="98.8246%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.09%)</title><rect x="98.5746%" y="245" width="0.0891%" height="15" fill="rgb(239,132,32)" fg:x="2213" fg:w="2"/><text x="98.8246%" y="255.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (14 samples, 0.62%)</title><rect x="98.2628%" y="325" width="0.6236%" height="15" fill="rgb(228,202,34)" fg:x="2206" fg:w="14"/><text x="98.5128%" y="335.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (5 samples, 0.22%)</title><rect x="98.6637%" y="309" width="0.2227%" height="15" fill="rgb(254,200,22)" fg:x="2215" fg:w="5"/><text x="98.9137%" y="319.50"></text></g><g><title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="98.8864%" y="309" width="0.0445%" height="15" fill="rgb(219,10,39)" fg:x="2220" fg:w="1"/><text x="99.1364%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="98.9310%" y="309" width="0.0445%" height="15" fill="rgb(226,210,39)" fg:x="2221" fg:w="1"/><text x="99.1810%" y="319.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="98.9755%" y="309" width="0.0445%" height="15" fill="rgb(208,219,16)" fg:x="2222" fg:w="1"/><text x="99.2255%" y="319.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (339 samples, 15.10%)</title><rect x="84.0089%" y="389" width="15.1002%" height="15" fill="rgb(216,158,51)" fg:x="1886" fg:w="339"/><text x="84.2589%" y="399.50">&lt;hyper::client::client:..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (339 samples, 15.10%)</title><rect x="84.0089%" y="373" width="15.1002%" height="15" fill="rgb(233,14,44)" fg:x="1886" fg:w="339"/><text x="84.2589%" y="383.50">hyper::client::client::..</text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (22 samples, 0.98%)</title><rect x="98.1292%" y="357" width="0.9800%" height="15" fill="rgb(237,97,39)" fg:x="2203" fg:w="22"/><text x="98.3792%" y="367.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (22 samples, 0.98%)</title><rect x="98.1292%" y="341" width="0.9800%" height="15" fill="rgb(218,198,43)" fg:x="2203" fg:w="22"/><text x="98.3792%" y="351.50"></text></g><g><title>tokio::sync::oneshot::channel (5 samples, 0.22%)</title><rect x="98.8864%" y="325" width="0.2227%" height="15" fill="rgb(231,104,20)" fg:x="2220" fg:w="5"/><text x="99.1364%" y="335.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (2 samples, 0.09%)</title><rect x="99.0200%" y="309" width="0.0891%" height="15" fill="rgb(254,36,13)" fg:x="2223" fg:w="2"/><text x="99.2700%" y="319.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::is_end_stream (2 samples, 0.09%)</title><rect x="99.1537%" y="373" width="0.0891%" height="15" fill="rgb(248,14,50)" fg:x="2226" fg:w="2"/><text x="99.4037%" y="383.50"></text></g><g><title>__memcpy_ssse3 (3 samples, 0.13%)</title><rect x="99.2428%" y="373" width="0.1336%" height="15" fill="rgb(217,107,29)" fg:x="2228" fg:w="3"/><text x="99.4928%" y="383.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="99.3764%" y="373" width="0.0445%" height="15" fill="rgb(251,169,33)" fg:x="2231" fg:w="1"/><text x="99.6264%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.04%)</title><rect x="99.4209%" y="373" width="0.0445%" height="15" fill="rgb(217,108,32)" fg:x="2232" fg:w="1"/><text x="99.6709%" y="383.50"></text></g><g><title>bytes::bytes::shared_clone (1 samples, 0.04%)</title><rect x="99.5100%" y="357" width="0.0445%" height="15" fill="rgb(219,66,42)" fg:x="2234" fg:w="1"/><text x="99.7600%" y="367.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.04%)</title><rect x="99.5546%" y="357" width="0.0445%" height="15" fill="rgb(206,180,7)" fg:x="2235" fg:w="1"/><text x="99.8046%" y="367.50"></text></g><g><title>hyper::client::client::extract_domain (4 samples, 0.18%)</title><rect x="99.4655%" y="373" width="0.1782%" height="15" fill="rgb(208,226,31)" fg:x="2233" fg:w="4"/><text x="99.7155%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.04%)</title><rect x="99.5991%" y="357" width="0.0445%" height="15" fill="rgb(218,26,49)" fg:x="2236" fg:w="1"/><text x="99.8491%" y="367.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (358 samples, 15.95%)</title><rect x="84.0089%" y="469" width="15.9465%" height="15" fill="rgb(233,197,48)" fg:x="1886" fg:w="358"/><text x="84.2589%" y="479.50">&lt;tower::util::oneshot::On..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (358 samples, 15.95%)</title><rect x="84.0089%" y="453" width="15.9465%" height="15" fill="rgb(252,181,51)" fg:x="1886" fg:w="358"/><text x="84.2589%" y="463.50">&lt;tower::util::map_respons..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (358 samples, 15.95%)</title><rect x="84.0089%" y="437" width="15.9465%" height="15" fill="rgb(253,90,19)" fg:x="1886" fg:w="358"/><text x="84.2589%" y="447.50">&lt;futures_util::future::fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (358 samples, 15.95%)</title><rect x="84.0089%" y="421" width="15.9465%" height="15" fill="rgb(215,171,30)" fg:x="1886" fg:w="358"/><text x="84.2589%" y="431.50">&lt;futures_util::future::fu..</text></g><g><title>&lt;F as axum::handler::Handler&lt;((),),S,B&gt;&gt;::call::_{{closure}} (358 samples, 15.95%)</title><rect x="84.0089%" y="405" width="15.9465%" height="15" fill="rgb(214,222,9)" fg:x="1886" fg:w="358"/><text x="84.2589%" y="415.50">&lt;F as axum::handler::Hand..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::get (19 samples, 0.85%)</title><rect x="99.1091%" y="389" width="0.8463%" height="15" fill="rgb(223,3,22)" fg:x="2225" fg:w="19"/><text x="99.3591%" y="399.50"></text></g><g><title>malloc (7 samples, 0.31%)</title><rect x="99.6437%" y="373" width="0.3118%" height="15" fill="rgb(225,196,46)" fg:x="2237" fg:w="7"/><text x="99.8937%" y="383.50"></text></g><g><title>_int_malloc (7 samples, 0.31%)</title><rect x="99.6437%" y="357" width="0.3118%" height="15" fill="rgb(209,110,37)" fg:x="2237" fg:w="7"/><text x="99.8937%" y="367.50"></text></g><g><title>all (2,245 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(249,89,12)" fg:x="0" fg:w="2245"/><text x="0.2500%" y="591.50"></text></g><g><title>tokio-runtime-w (2,245 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(226,27,33)" fg:x="0" fg:w="2245"/><text x="0.2500%" y="575.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (359 samples, 15.99%)</title><rect x="84.0089%" y="549" width="15.9911%" height="15" fill="rgb(213,82,22)" fg:x="1886" fg:w="359"/><text x="84.2589%" y="559.50">tokio::runtime::task::cor..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (359 samples, 15.99%)</title><rect x="84.0089%" y="533" width="15.9911%" height="15" fill="rgb(248,140,0)" fg:x="1886" fg:w="359"/><text x="84.2589%" y="543.50">tokio::loom::std::unsafe_..</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (359 samples, 15.99%)</title><rect x="84.0089%" y="517" width="15.9911%" height="15" fill="rgb(228,106,3)" fg:x="1886" fg:w="359"/><text x="84.2589%" y="527.50">&lt;hyper::server::conn::upg..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (359 samples, 15.99%)</title><rect x="84.0089%" y="501" width="15.9911%" height="15" fill="rgb(209,23,37)" fg:x="1886" fg:w="359"/><text x="84.2589%" y="511.50">hyper::proto::h1::dispatc..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (359 samples, 15.99%)</title><rect x="84.0089%" y="485" width="15.9911%" height="15" fill="rgb(241,93,50)" fg:x="1886" fg:w="359"/><text x="84.2589%" y="495.50">hyper::proto::h1::dispatc..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.04%)</title><rect x="99.9555%" y="469" width="0.0445%" height="15" fill="rgb(253,46,43)" fg:x="2244" fg:w="1"/><text x="100.2055%" y="479.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.04%)</title><rect x="99.9555%" y="453" width="0.0445%" height="15" fill="rgb(226,206,43)" fg:x="2244" fg:w="1"/><text x="100.2055%" y="463.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (1 samples, 0.04%)</title><rect x="99.9555%" y="437" width="0.0445%" height="15" fill="rgb(217,54,7)" fg:x="2244" fg:w="1"/><text x="100.2055%" y="447.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 0.04%)</title><rect x="99.9555%" y="421" width="0.0445%" height="15" fill="rgb(223,5,52)" fg:x="2244" fg:w="1"/><text x="100.2055%" y="431.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="99.9555%" y="405" width="0.0445%" height="15" fill="rgb(206,52,46)" fg:x="2244" fg:w="1"/><text x="100.2055%" y="415.50"></text></g></svg></svg>